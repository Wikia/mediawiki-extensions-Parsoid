/* A map of tests which we know Parsoid currently fails.
 *
 * New patches which fix previously-broken tests should also patch this
 * file to document which tests are now expected to succeed.
 *
 * This helps clean up 'npm test' output, documents known bugs, and helps
 * Jenkins make sense of the parserTest output.
 *
 * NOTE that the selser blacklist depends on tests/selser.changes.json
 * If the selser change list is modified, this blacklist should be refreshed.
 *
 * This blacklist can be automagically updated by running
 *    parserTests.js --rewrite-blacklist
 * You might want to do this after you fix some bug that makes more tests
 * pass.  It is still your responsibility to carefully review the blacklist
 * diff to ensure there are no unexpected new failures (lines added).
 */

/*
 * This should map test titles to an array of test types (wt2html, wt2wt,
 * html2html, html2wt, selser) which are known to fail.
 * For easier maintenance, we group each test type together, and use a
 * helper function to create the array if needed then append the test type.
 */
var testBlackList = {};
var add = function(testtype, title) {
	if (typeof(testBlackList[title]) !== 'object') {
		testBlackList[title] = [];
	}
	testBlackList[title].push(testtype);
};

// ### DO NOT REMOVE THIS LINE ### (start of automatically-generated section)

// Blacklist for wt2html
add("wt2html", "Paragraphs with newline spacing with non-empty white-space lines in between");
add("wt2html", "Paragraphs with newline spacing with non-empty mixed comment and white-space lines in between");
add("wt2html", "Extra newlines between heading and content are swallowed");
add("wt2html", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022)");
add("wt2html", "Bare pipe character (bug 52363)");
add("wt2html", "Bare pipe character from a template (bug 52363)");
add("wt2html", "Entities inside <nowiki>");
add("wt2html", "Comment on its own line post-expand");
add("wt2html", "Comment on its own line post-expand with non-significant whitespace");
add("wt2html", "Tabs don't trigger preformatted text");
add("wt2html", "Templates: Indent-Pre: 1a. Templates that break a line should suppress <pre>");
add("wt2html", "Templates: Indent-Pre: 1b. Templates that break a line should suppress <pre>");
add("wt2html", "Templates: Indent-Pre: 1e. Wrapping should be based on expanded content");
add("wt2html", "Templates: Indent-Pre: 1f: Wrapping should be based on expanded content");
add("wt2html", "Templates: Don't strip whitespace from positional-param values");
add("wt2html", "2a. Indent-Pre and tables");
add("wt2html", "2b. Indent-Pre and tables");
add("wt2html", "2c. Indent-Pre and tables (bug 42252)");
add("wt2html", "4. Multiple spaces at start-of-line");
add("wt2html", "6. Pre-blocks should extend across lines with leading WS even when there is no wrappable content");
add("wt2html", "Definition Lists: Nesting: Multi-level (Parsoid only)");
add("wt2html", "Definition Lists: Nesting: Test 2 (Parsoid only)");
add("wt2html", "Definition Lists: Nesting: Test 3 (Parsoid only)");
add("wt2html", "Bracketed external links with template-generated invalid target");
add("wt2html", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check)");
add("wt2html", "Non-extlinks in brackets");
add("wt2html", "Template-generated table cell attributes and cell content (3)");
add("wt2html", "Link containing \"#<\" and \"#>\" % as a hex sequences- these are valid section anchors\nExample for such a section: == < ==");
add("wt2html", "Link containing \"<#\" and \">#\" as a hex sequences");
add("wt2html", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check)");
add("wt2html", "Link with double quotes in title part (literal) and alternate part (interpreted)");
add("wt2html", "Broken image links with HTML captions (bug 39700)");
add("wt2html", "BUG 2: [[page|http://url/]] should link to page, not http://url/");
add("wt2html", "BUG 337: Escaped self-links should be bold");
add("wt2html", "Self-link to numeric title");
add("wt2html", "<nowiki> inside a link");
add("wt2html", "Inline interwiki link with empty title (bug 2372)");
add("wt2html", "Interlanguage link");
add("wt2html", "Double interlanguage link");
add("wt2html", "Interlanguage link, with prefix links");
add("wt2html", "Double interlanguage link, with prefix links (bug 8897)");
add("wt2html", "Handling html with a div self-closing tag");
add("wt2html", "2. Lists with start-of-line-transparent tokens before bullets: Template close");
add("wt2html", "List interrupted by empty line or heading");
add("wt2html", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack)");
add("wt2html", "Unclosed formatting tags that straddle lists are closed and reopened\n(Parsoid-only since php parser generates broken html -- relies on Tidy to fix up)");
add("wt2html", "Magic Word: {{CURRENTMONTH1}}");
add("wt2html", "Magic Words LOCAL (UTC)");
add("wt2html", "Magic Word: {{FULLPAGENAMEE}}");
add("wt2html", "Magic Word: {{TALKSPACE}}");
add("wt2html", "Magic Word: {{TALKSPACE}}, same namespace");
add("wt2html", "Magic Word: {{TALKSPACEE}}");
add("wt2html", "Magic Word: {{SUBJECTSPACE}}");
add("wt2html", "Magic Word: {{SUBJECTSPACE}}, same namespace");
add("wt2html", "Magic Word: {{SUBJECTSPACE}}, main namespace");
add("wt2html", "Magic Word: {{SUBJECTSPACEE}}");
add("wt2html", "Magic Word: {{NAMESPACE}}");
add("wt2html", "Magic Word: {{NAMESPACEE}}");
add("wt2html", "Magic Word: {{NAMESPACENUMBER}}");
add("wt2html", "Magic Word: {{SUBPAGENAME}}");
add("wt2html", "Magic Word: {{SUBPAGENAMEE}}");
add("wt2html", "Magic Word: {{ROOTPAGENAME}}");
add("wt2html", "Magic Word: {{ROOTPAGENAMEE}}");
add("wt2html", "Magic Word: {{BASEPAGENAME}}");
add("wt2html", "Magic Word: {{BASEPAGENAMEE}}");
add("wt2html", "Magic Word: {{TALKPAGENAME}}");
add("wt2html", "Magic Word: {{TALKPAGENAMEE}}");
add("wt2html", "Magic Word: {{SUBJECTPAGENAME}}");
add("wt2html", "Magic Word: {{SUBJECTPAGENAMEE}}");
add("wt2html", "Magic Word: {{NUMBEROFFILES}}");
add("wt2html", "Magic Word: {{PAGENAME}}");
add("wt2html", "Magic Word: {{PAGENAMEE}}");
add("wt2html", "Magic Word: {{PAGENAMEE}} with metacharacters (bug 26781)");
add("wt2html", "Magic Word: {{REVISIONID}}");
add("wt2html", "Magic Word: {{STYLEPATH}}");
add("wt2html", "Case-sensitive magic words, when cased differently, should just be template transclusions");
add("wt2html", "Namespace 1 {{ns:1}}");
add("wt2html", "Namespace 1 {{ns:01}}");
add("wt2html", "Namespace 0 {{ns:0}} (bug 4783)");
add("wt2html", "Namespace 0 {{ns:00}} (bug 4783)");
add("wt2html", "Namespace -1 {{ns:-1}}");
add("wt2html", "Namespace (lang=de) Benutzer Diskussion {{ns:3}}");
add("wt2html", "Urlencode");
add("wt2html", "Nonexistent template");
add("wt2html", "Template with invalid target containing tags");
add("wt2html", "Template with invalid target containing unclosed tag");
add("wt2html", "Template redirect");
add("wt2html", "Template with thumb image (with link in description)");
add("wt2html", "Template with complex arguments");
add("wt2html", "BUG 553: link with two variables in a piped link");
add("wt2html", "Template-generated attribute string (k='v')");
add("wt2html", "Template as link source");
add("wt2html", "Template infinite loop");
add("wt2html", "BUG 529: Template with table, not included at beginning of line");
add("wt2html", "BUG 41: Template parameters shown as broken links");
add("wt2html", "Template with targets containing wikilinks");
add("wt2html", "msgnw keyword");
add("wt2html", "int keyword");
add("wt2html", "<onlyinclude> being included");
add("wt2html", "<onlyinclude> and <includeonly> being included");
add("wt2html", "<includeonly> and <noinclude> on a page");
add("wt2html", "Un-closed <noinclude>");
add("wt2html", "<onlyinclude> on a page");
add("wt2html", "Un-closed <onlyinclude>");
add("wt2html", "Self-closed noinclude, includeonly, onlyinclude tags");
add("wt2html", "Unbalanced includeonly and noinclude tags");
add("wt2html", "Bug 6563: Section extraction for section shown by <includeonly>");
add("wt2html", "Bug 6563: Edit link generation for section suppressed by <includeonly>");
add("wt2html", "Bug 6563: Section extraction for section suppressed by <includeonly>");
add("wt2html", "Un-closed <includeonly>");
add("wt2html", "0. includeonly around the entire attribute");
add("wt2html", "1. includeonly in html attr key");
add("wt2html", "2. includeonly in html attr value");
add("wt2html", "3. includeonly in part of an attr value");
add("wt2html", "Templates: Links: 2. Generation of link href");
add("wt2html", "Templates: Links: 3. Generation of part of a link href");
add("wt2html", "Templates: Links: 4. Multiple templates generating link href");
add("wt2html", "Templates: HTML Tag: 1. Generation of HTML attr. key");
add("wt2html", "Templates: HTML Tag: 2. Generation of HTML attr. value");
add("wt2html", "Templates: HTML Tag: 3. Generation of HTML attr key and value");
add("wt2html", "Templates: HTML Tag: 4. Generation of starting piece of HTML attr value");
add("wt2html", "Templates: HTML Tag: 5. Generation of middle piece of HTML attr value");
add("wt2html", "Templates: HTML Tag: 6. Generation of end piece of HTML attr value");
add("wt2html", "Templates: HTML Tag: 7. Generation of partial attribute key string");
add("wt2html", "Templates: Wiki Tables: 1a. Fostering of entire template content");
add("wt2html", "Templates: Wiki Tables: 1b. Fostering of entire template content");
add("wt2html", "Templates: Wiki Tables: 2. Fostering of partial template content");
add("wt2html", "Templates: Wiki Tables: 3. td-content via multiple templates");
add("wt2html", "Templates: Wiki Tables: 4. Templated tags, no content");
add("wt2html", "Templates: Lists: Multi-line list-items via templates");
add("wt2html", "Templates: Ugly nesting: 1. Quotes opened/closed across templates (echo)");
add("wt2html", "Templates: Ugly nesting: 4. Divs opened/closed across templates");
add("wt2html", "Templates: Ugly templates: 4. newline-only template parameter inconsistency");
add("wt2html", "pre-save transform: subst:");
add("wt2html", "pre-save transform: normal template");
add("wt2html", "pre-save transform: nonexistent template");
add("wt2html", "pre-save transform: subst magic variables");
add("wt2html", "pre-save transform: subst: templates with parameters");
add("wt2html", "pre-save transform: nowiki in subst (bug 1188)");
add("wt2html", "pre-save transform: comment in subst (bug 1936)");
add("wt2html", "pre-save transform: unclosed tag");
add("wt2html", "pre-save transform: mixed tag case");
add("wt2html", "pre-save transform: unclosed comment in <nowiki>");
add("wt2html", "pre-save transform: <noinclude> in subst (bug 3298)");
add("wt2html", "pre-save transform: <onlyinclude> in subst (bug 3298)");
add("wt2html", "bug 22297: safesubst: works during PST");
add("wt2html", "subst: does not work during normal parse");
add("wt2html", "pre-save transform: context links (\"pipe trick\")");
add("wt2html", "pre-save transform: context links (\"pipe trick\") with interwiki prefix");
add("wt2html", "pre-save transform: context links (\"pipe trick\") with parens in title");
add("wt2html", "pre-save transform: context links (\"pipe trick\") with comma in title");
add("wt2html", "pre-save transform: context links (\"pipe trick\") with parens and comma");
add("wt2html", "pre-save transform: context links (\"pipe trick\") with comma and parens");
add("wt2html", "pre-save transform: context links (\"pipe trick\") with namespace");
add("wt2html", "pre-save transform: context links (\"pipe trick\") with namespace and parens");
add("wt2html", "pre-save transform: context links (\"pipe trick\") with namespace and comma");
add("wt2html", "pre-save transform: context links (\"pipe trick\") with namespace, comma and parens");
add("wt2html", "pre-save transform: context links (\"pipe trick\") with namespace, parens and comma");
add("wt2html", "pre-save transform: context links (\"pipe trick\") with full-width parens and no space (Japanese and Chinese style, bug 30149)");
add("wt2html", "pre-save transform: context links (\"pipe trick\") with full-width parens and space (Japanese and Chinese style, bug 30149)");
add("wt2html", "pre-save transform: context links (\"pipe trick\") with parens and no space (Korean style, bug 30149)");
add("wt2html", "pre-save transform: context links (\"pipe trick\") with commas (bug 21660)");
add("wt2html", "pre-save transform: trim trailing empty lines");
add("wt2html", "pre-save transform: Signature expansion");
add("wt2html", "pre-save transform: Signature expansion in nowiki tags (bug 93)");
add("wt2html", "message transform: magic variables");
add("wt2html", "message transform: should not transform wiki markup");
add("wt2html", "message transform: <noinclude> in transcluded template (bug 4926)");
add("wt2html", "message transform: <onlyinclude> in transcluded template (bug 4926)");
add("wt2html", "{{#special:}} page name, known");
add("wt2html", "{{#special:}} page name with subpage, known");
add("wt2html", "{{#special:}} page name, unknown");
add("wt2html", "{{#speciale:}} page name, known");
add("wt2html", "{{#speciale:}} page name with subpage, known");
add("wt2html", "{{#speciale:}} page name, unknown");
add("wt2html", "Image with attributes from template (parsoid)");
add("wt2html", "Image with link parameter, wgExternalLinkTarget");
add("wt2html", "Image with link parameter, wgNoFollowLinks set to false");
add("wt2html", "Image with link parameter, wgNoFollowDomainExceptions");
add("wt2html", "Image with link parameter, wgExternalLinkTarget, unnamed parameter");
add("wt2html", "Image with frame and link");
add("wt2html", "Image with frame and link and explicit alt");
add("wt2html", "Image with wiki markup in implicit alt");
add("wt2html", "Image with wiki markup in explicit alt");
add("wt2html", "Frameless image caption with a free URL");
add("wt2html", "Thumbnail image caption with a free URL");
add("wt2html", "Thumbnail image caption with a free URL and explicit alt");
add("wt2html", "SVG thumbnails with no language set");
add("wt2html", "SVG thumbnails with language de");
add("wt2html", "SVG thumbnails with invalid language code");
add("wt2html", "BUG 1887: A ISBN with a thumbnail");
add("wt2html", "BUG 1887: A RFC with a thumbnail");
add("wt2html", "BUG 1887: A mailto link with a thumbnail");
add("wt2html", "BUG 648: Frameless image caption with a link");
add("wt2html", "BUG 648: Frameless image caption with a link (suffix)");
add("wt2html", "BUG 648: Frameless image caption with an interwiki link");
add("wt2html", "BUG 648: Frameless image caption with a piped interwiki link");
add("wt2html", "Escape HTML special chars in image alt text");
add("wt2html", "BUG 499: Alt text should have &#1234;, not &amp;1234;");
add("wt2html", "Image caption containing another image");
add("wt2html", "Image caption containing a newline");
add("wt2html", "Parsoid: Image caption containing leading space\n(The leading space should not trigger nowiki escaping in wt2wt mode)");
add("wt2html", "Bug 3090: External links other than http: in image captions");
add("wt2html", "Custom class");
add("wt2html", "Localized image handling (1).");
add("wt2html", "Localized image handling (2).");
add("wt2html", "\"border\", \"frameless\" and \"class\" attributes on an image.");
add("wt2html", "Redirected image");
add("wt2html", "Missing image with uploads disabled");
add("wt2html", "Parsoid-specific image handling - thumbnail with halign, valign, and caption");
add("wt2html", "Parsoid-specific image handling - thumbnail with specific size, halign, valign, and caption");
add("wt2html", "Parsoid-specific image handling - framed image with specific size, halign, valign, and caption");
add("wt2html", "BUG 561: {{/Subpage}}");
add("wt2html", "Simple category");
add("wt2html", "PAGESINCATEGORY invalid title fatal (r33546 fix)");
add("wt2html", "Category with different sort key");
add("wt2html", "Category with identical sort key");
add("wt2html", "Category with empty sort key");
add("wt2html", "Category with empty sort key and parentheses");
add("wt2html", "Category with link tail");
add("wt2html", "Category with template");
add("wt2html", "Category with template in sort key");
add("wt2html", "Category with template in sort key and title");
add("wt2html", "Category / paragraph interactions");
add("wt2html", "Inter-language links");
add("wt2html", "Duplicate interlanguage links (bug 24502)");
add("wt2html", "Basic section headings");
add("wt2html", "Section headings with TOC");
add("wt2html", "Handling of sections up to level 6 and beyond");
add("wt2html", "TOC regression (bug 9764)");
add("wt2html", "TOC with wgMaxTocLevel=3 (bug 6204)");
add("wt2html", "Resolving duplicate section names");
add("wt2html", "Resolving duplicate section names with differing case (bug 10721)");
add("wt2html", "Template with sections, __NOTOC__");
add("wt2html", "__NOEDITSECTION__ keyword");
add("wt2html", "TOC regression (bug 12077)");
add("wt2html", "BUG 1219 URL next to image (good)");
add("wt2html", "Short headings with trailing space should match behavior of Parser::doHeadings (bug 19910)");
add("wt2html", "Header with special characters (bug 25462)");
add("wt2html", "HTML headers vs TOC (bug 23393)\n(__NOEDITSECTION__ for clearer output, doesn't matter here)");
add("wt2html", "BUG 1219 URL next to image (broken)");
add("wt2html", "Namespaced link must have a title");
add("wt2html", "Namespaced link must have a title (bad fragment version)");
add("wt2html", "DIV IN UPPERCASE");
add("wt2html", "Media link");
add("wt2html", "Media link with text");
add("wt2html", "Media link with nasty text\nfixme: doBlockLevels won't wrap this in a paragraph because it contains a div");
add("wt2html", "Media link to nonexistent file (bug 1702)");
add("wt2html", "Image link to nonexistent file (bug 1850 - good)");
add("wt2html", "(bug 19451) Links should refer to the normalized form.");
add("wt2html", "Attribute test: equals, then nothing");
add("wt2html", "Attribute test: no value");
add("wt2html", "Bug 2095: link with pipe and three closing brackets, version 2");
add("wt2html", "Bug 2304: HTML attribute safety (safe template; regression bug 2309)");
add("wt2html", "Bug 2304: HTML attribute safety (dangerous template; 2309)");
add("wt2html", "Bug 2304: HTML attribute safety (dangerous style template; 2309)");
add("wt2html", "Bug 2304: HTML attribute safety (unsafe breakout parameter; 2309)");
add("wt2html", "Bug 2304: HTML attribute safety (unsafe breakout parameter 2; 2309)");
add("wt2html", "MSIE CSS safety test: hex code");
add("wt2html", "CSS line continuation 1");
add("wt2html", "CSS line continuation 2");
add("wt2html", "Expansion of multi-line templates in attribute values (bug 6255)");
add("wt2html", "Expansion of multi-line templates in attribute values (bug 6255 sanity check 2)");
add("wt2html", "Parser hook: empty input");
add("wt2html", "Parser hook: empty input using terminated empty elements");
add("wt2html", "Parser hook: empty input using terminated empty elements (space before)");
add("wt2html", "Parser hook: basic input");
add("wt2html", "Parser hook: case insensitive");
add("wt2html", "Parser hook: case insensitive, redux");
add("wt2html", "Parser hook: nested tags");
add("wt2html", "Parser hook: basic arguments");
add("wt2html", "Parser hook: argument containing a forward slash (bug 5344)");
add("wt2html", "Parser hook: empty input using terminated empty elements (bug 2374)");
add("wt2html", "Parser hook: basic arguments using terminated empty elements (bug 2374)");
add("wt2html", "Parser hook: static parser hook not inside a comment");
add("wt2html", "Parser hook: static parser hook inside a comment");
add("wt2html", "Sanitizer: Closing of closed but not open tags");
add("wt2html", "Sanitizer: Closing of closed but not open table tags");
add("wt2html", "Sanitizer: Escaping of spaces, multibyte characters, colons & other stuff in id=\"\"");
add("wt2html", "Sanitizer: Validating the contents of the id attribute (bug 4515)");
add("wt2html", "Sanitizer: Validating id attribute uniqueness (bug 4515, bug 6301)");
add("wt2html", "Sanitizer: Validating that <meta> and <link> work, but only for Microdata");
add("wt2html", "Language converter: output gets cut off unexpectedly (bug 5757)");
add("wt2html", "Self closed html pairs (bug 5487)");
add("wt2html", "Punctuation: nbsp before exclamation");
add("wt2html", "Fuzz testing: Parser14");
add("wt2html", "Fuzz testing: Parser14-table");
add("wt2html", "Fuzz testing: Parser24");
add("wt2html", "Fuzz testing: Parser25 (bug 6055)");
add("wt2html", "Fuzz testing: image with bogus manual thumbnail");
add("wt2html", "Fuzz testing: encoded newline in generated HTML replacements (bug 6577)");
add("wt2html", "Inline HTML vs wiki block nesting");
add("wt2html", "Special page transclusion");
add("wt2html", "Special page transclusion twice (bug 5021)");
add("wt2html", "Transclusion of default MediaWiki message");
add("wt2html", "Transclusion of nonexistent MediaWiki message");
add("wt2html", "Transclusion of MediaWiki message with underscore");
add("wt2html", "Transclusion of MediaWiki message with space");
add("wt2html", "Section extraction test (section 0)");
add("wt2html", "Section extraction test (section 1)");
add("wt2html", "Section extraction test (section 2)");
add("wt2html", "Section extraction test (section 3)");
add("wt2html", "Section extraction test (section 4)");
add("wt2html", "Section extraction test (section 5)");
add("wt2html", "Section extraction test (section 6)");
add("wt2html", "Section extraction test (section 7)");
add("wt2html", "Section extraction test (section 8)");
add("wt2html", "Section extraction test (section 9)");
add("wt2html", "Section extraction test (section 10)");
add("wt2html", "Section extraction test (nonexistent section 11)");
add("wt2html", "Section extraction test with bogus heading (section 1)");
add("wt2html", "Section extraction test with bogus heading (section 2)");
add("wt2html", "Section extraction test with comment after heading (section 1)");
add("wt2html", "Section extraction test with comment after heading (section 2)");
add("wt2html", "Section extraction test with bogus <nowiki> heading (section 1)");
add("wt2html", "Section extraction test with bogus <nowiki> heading (section 2)");
add("wt2html", "Section extraction prefixed by comment (section 1)");
add("wt2html", "Section extraction prefixed by comment (section 2)");
add("wt2html", "Section extraction, mixed wiki and html (section 1)");
add("wt2html", "Section extraction, mixed wiki and html (section 2)");
add("wt2html", "Section extraction, heading surrounded by <noinclude>");
add("wt2html", "Sectiion with all-equals");
add("wt2html", "Section replacement test (section 0)");
add("wt2html", "Section replacement test (section 1)");
add("wt2html", "Section replacement test (section 2)");
add("wt2html", "Section replacement test (section 3)");
add("wt2html", "Section replacement test (section 4)");
add("wt2html", "Section replacement test (section 5)");
add("wt2html", "Section replacement test (section 6)");
add("wt2html", "Section replacement test (section 7)");
add("wt2html", "Section replacement test (section 8)");
add("wt2html", "Section replacement test (section 9)");
add("wt2html", "Section replacement test (section 10)");
add("wt2html", "Section replacement test with initial whitespace (bug 13728)");
add("wt2html", "Section extraction, heading followed by pre with 20 spaces (bug 6398)");
add("wt2html", "Section extraction, heading followed by pre with 19 spaces (bug 6398 sanity check)");
add("wt2html", "Section extraction, <pre> around bogus header (bug 10309)");
add("wt2html", "Section replacement, <pre> around bogus header (bug 10309)");
add("wt2html", "Handling of &#x0A; in URLs");
add("wt2html", "Special:Search page linking.");
add("wt2html", "Say the magic word");
add("wt2html", "Gallery");
add("wt2html", "Gallery (with options)");
add("wt2html", "Gallery with wikitext inside caption");
add("wt2html", "gallery (with showfilename option)");
add("wt2html", "Gallery (with namespace-less filenames)");
add("wt2html", "__FORCETOC__ override");
add("wt2html", "Centre-aligned image");
add("wt2html", "None-aligned image");
add("wt2html", "Width + Height sized image (using px) (height is ignored)");
add("wt2html", "Width-sized image (using px, no following whitespace)");
add("wt2html", "Width-sized image (using px, with following whitespace - test regression from r39467)");
add("wt2html", "Width-sized image (using px, with preceding whitespace - test regression from r39467)");
add("wt2html", "Images with the \"|\" character in the comment");
add("wt2html", "HTML with raw HTML ($wgRawHtml==true)");
add("wt2html", "Parents of subpages, one level up, not named");
add("wt2html", "Parents of subpages, two levels up, without trailing slash or name.");
add("wt2html", "Parents of subpages, two levels up, with lots of extra trailing slashes.");
add("wt2html", "Transclusion of a sibling page (one level up)");
add("wt2html", "Transclusion of a child page");
add("wt2html", "Non-transclusion because of too many up levels");
add("wt2html", "MSGNW magic word");
add("wt2html", "RAW magic word");
add("wt2html", "anchorencode");
add("wt2html", "anchorencode trims spaces");
add("wt2html", "anchorencode deals with links");
add("wt2html", "anchorencode encodes like the TOC generator: (bug 18431)");
add("wt2html", "Bug 6200: blockquotes and paragraph formatting");
add("wt2html", "Parsing of overlapping (improperly nested) inline html tags (Parsoid)");
add("wt2html", "Self-link in language variants");
add("wt2html", "Link to another existing title shouldn't be parsed as self-link even if it's a variant of this title");
add("wt2html", "Link to pages in language variants");
add("wt2html", "Multiple links to pages in language variants");
add("wt2html", "Simple template in language variants");
add("wt2html", "Template with explicit namespace in language variants");
add("wt2html", "Basic test for template parameter in language variants");
add("wt2html", "Simple category in language variants");
add("wt2html", "Don't convert blue categorylinks to another variant (bug 33210)");
add("wt2html", "Stripping -{}- tags (language variants)");
add("wt2html", "Prevent conversion with -{}- tags (language variants)");
add("wt2html", "Prevent conversion of text with -{}- tags (language variants)");
add("wt2html", "Prevent conversion of links with -{}- tags (language variants)");
add("wt2html", "-{}- tags within headlines (within html for parserConvert())");
add("wt2html", "Explicit definition of language variant alternatives");
add("wt2html", "Conversion around HTML tags");
add("wt2html", "Explicit session-wise language variant mapping (A flag and - flag)");
add("wt2html", "Explicit session-wise language variant mapping (H flag for hide)");
add("wt2html", "Adding explicit conversion rule for title (T flag)");
add("wt2html", "Testing that changing the language variant here in the tests actually works");
add("wt2html", "Recursive conversion of alt and title attrs shouldn't clear converter state");
add("wt2html", "Bug 24072: more test on conversion rule for title");
add("wt2html", "Partly disable title conversion if variant == main language code");
add("wt2html", "Partly disable title conversion if variant == main language code, more");
add("wt2html", "Raw output of variant escape tags (R flag)");
add("wt2html", "Nested using of manual convert syntax");
add("wt2html", "Proper conversion of text in external links");
add("wt2html", "Do not convert roman numbers to language variants");
add("wt2html", "Don't convert raw rule \"-{R|=&gt;}-\" to \"=>\"");
add("wt2html", "Bug 529: Uncovered bullet in parser function result");
add("wt2html", "Bug 5678: Double-parsed template invocation");
add("wt2html", "Case insensitivity of parser functions for non-ASCII characters (bug 8143)");
add("wt2html", "Nesting tags, paragraphs on lines which begin with <div>");
add("wt2html", "Free external link invading image caption");
add("wt2html", "Bug 15196: localised external link numbers");
add("wt2html", "formatdate parser function");
add("wt2html", "formatdate parser function, with default format");
add("wt2html", "Spacing of numbers in formatted dates");
add("wt2html", "formatdate parser function, with default format and on a page of which the content language is always English and different from the wiki content language");
add("wt2html", "Edit comment with link");
add("wt2html", "Edit comment with link and link text");
add("wt2html", "Edit comment with link and link text with suffix");
add("wt2html", "Edit comment with section link (non-local, eg in history list)");
add("wt2html", "Edit comment with section link and text before it (non-local, eg in history list)");
add("wt2html", "Edit comment with section link (local, eg in diff view)");
add("wt2html", "Edit comment with subpage link (bug 14080)");
add("wt2html", "Edit comment with subpage link and link text (bug 14080)");
add("wt2html", "Edit comment with bogus subpage link in non-subpage NS (bug 14080)");
add("wt2html", "Edit comment with bare anchor link (local, as on diff)");
add("wt2html", "Edit comment with bare anchor link (non-local, as on history)");
add("wt2html", "Space normalisation on autocomment (bug 22784)");
add("wt2html", "percent-encoding and + signs in comments (Bug 26410)");
add("wt2html", "Bad images - basic functionality");
add("wt2html", "Bad images - bug 16039: text after bad image disappears");
add("wt2html", "Verify that displaytitle works (bug #22501) no displaytitle");
add("wt2html", "Verify that displaytitle works (bug #22501) RestrictDisplayTitle=false");
add("wt2html", "Verify that displaytitle works (bug #22501) RestrictDisplayTitle=true mismatch");
add("wt2html", "Verify that displaytitle works (bug #22501) RestrictDisplayTitle=true matching");
add("wt2html", "Verify that displaytitle works (bug #22501) AllowDisplayTitle=false");
add("wt2html", "Verify that displaytitle works (bug #22501) AllowDisplayTitle=false no DISPLAYTITLE");
add("wt2html", "Verify that displaytitle handles inline CSS styles (bug 26547) - rejected value");
add("wt2html", "Verify that displaytitle handles inline CSS styles (bug 26547) - accepted value");
add("wt2html", "preload: check <noinclude> and <includeonly>");
add("wt2html", "preload: check <onlyinclude>");
add("wt2html", "preload: can pass tags through if we want to");
add("wt2html", "preload: check that it doesn't try to do tricks");
add("wt2html", "Play a bit with r67090 and bug 3158");
add("wt2html", "percent-encoding and + signs in internal links (Bug 26410)");
add("wt2html", "Special characters in embedded file links (bug 27679)");
add("wt2html", "Bug 31098 Template which includes system messages which includes the template");
add("wt2html", "Bug31490 Turkish: ucfirst 'ix'");
add("wt2html", "Bug31490 Turkish: ucfırst (with a dotless i)");
add("wt2html", "Bug31490 ucfırst (with a dotless i) with English language");
add("wt2html", "Bug 26375: TOC with italics");
add("wt2html", "Bug 26375: TOC with bold");
add("wt2html", "Bug 33845: Headings become cursive in TOC when they contain an image");
add("wt2html", "Bug 33845 (2): Headings become bold in TOC when they contain a blockquote");
add("wt2html", "Unclosed tags in TOC");
add("wt2html", "Multiple tags in TOC");
add("wt2html", "Tags with parameters in TOC");
add("wt2html", "span tags with directionality in TOC");
add("wt2html", "Bug 32057: Title needed when expanding <h> nodes.");
add("wt2html", "Check noCommafy in formatNum");
add("wt2html", "Strip marker in grammar");
add("wt2html", "Gallery override link with WikiLink (bug 34852)");
add("wt2html", "Gallery override link with absolute external link (bug 34852)");
add("wt2html", "Gallery override link with malicious javascript (bug 34852)");
add("wt2html", "Gallery with invalid title as link (bug 43964)");
add("wt2html", "Language parser function");
add("wt2html", "Special parser function");
add("wt2html", "1. SOL-sensitive wikitext tokens as template-args");
add("wt2html", "Headings: 2. Outside heading nest on a single line <h1>foo</h1>*bar");
add("wt2html", "Headings: 6a. Heading chars in SOL context (with trailing spaces)");
add("wt2html", "Headings: 6b. Heading chars in SOL context (with trailing newlines)");
add("wt2html", "Headings: 6c. Heading chars in SOL context (leading newline break)");
add("wt2html", "Headings: 6d. Heading chars in SOL context (with interspersed comments)");
add("wt2html", "Tables: 1b. No escaping needed");
add("wt2html", "Tables: 1c. No escaping needed");
add("wt2html", "Tables: 1d. No escaping needed");
add("wt2html", "Links 1. Quote marks in link text");
add("wt2html", "Links 2. WikiLinks: Escapes needed");
add("wt2html", "Links 3. WikiLinks: No escapes needed");
add("wt2html", "Links 4. ExtLinks: Escapes needed");
add("wt2html", "Links 5. ExtLinks: No escapes needed");
add("wt2html", "1. Leading whitespace in SOL context should be escaped");
add("wt2html", "1. a tags");
add("wt2html", "Table with broken attribute value quoting on consecutive lines");
add("wt2html", "Parsoid-only: Don't wrap broken template tags in <nowiki> on wt2wt (Bug 42353)");
add("wt2html", "Parsoid-only: Don't wrap broken template tags in <nowiki> on wt2wt (Bug 42353)");
add("wt2html", "Empty table rows go away");
add("wt2html", "RT-ed inter-element separators should be valid separators");
add("wt2html", "Trailing newlines in a deep dom-subtree that ends a wikitext line should be migrated out\n(Parsoid-only since PHP parser relies on Tidy for correct output)");
add("wt2html", "Empty TD followed by TD with tpl-generated attribute");
add("wt2html", "Indented table with an empty td");
add("wt2html", "Multi-line image caption generated by templates with/without trailing newlines");


// Blacklist for wt2wt
add("wt2wt", "Italics and possessives (1)");
add("wt2wt", "Italics and possessives (2)");
add("wt2wt", "Italics and possessives (3)");
add("wt2wt", "Italics and bold: 2-quote opening sequence: (2,3)");
add("wt2wt", "Italics and bold: 2-quote opening sequence: (2,4)");
add("wt2wt", "Italics and bold: 2-quote opening sequence: (2,5) (parsoid)");
add("wt2wt", "Italics and bold: 3-quote opening sequence: (3,4)");
add("wt2wt", "Italics and bold: 3-quote opening sequence: (3,5) (parsoid)");
add("wt2wt", "Italics and bold: 4-quote opening sequence: (4,2)");
add("wt2wt", "Italics and bold: 4-quote opening sequence: (4,4)");
add("wt2wt", "Italics and bold: 4-quote opening sequence: (4,5) (parsoid)");
add("wt2wt", "Italics and bold: 5-quote opening sequence: (5,2)");
add("wt2wt", "Italics and bold: 5-quote opening sequence: (5,3)");
add("wt2wt", "Italics and bold: 5-quote opening sequence: (5,4)");
add("wt2wt", "Italics and bold: multiple quote sequences: (2,4,2)");
add("wt2wt", "Italics and bold: multiple quote sequences: (2,4,3)");
add("wt2wt", "Italics and bold: multiple quote sequences: (2,4,4)");
add("wt2wt", "Italics and bold: multiple quote sequences: (3,4,2) (parsoid)");
add("wt2wt", "Italics and bold: multiple quote sequences: (3,4,3) (parsoid)");
add("wt2wt", "Italics and bold: other quote tests: (3,2,3,2)");
add("wt2wt", "Italicized possessive");
add("wt2wt", "Parsoid only: Quote balancing context should be restricted to td/th cells on the same wikitext line\n(Requires tidy for PHP parser output to be fixed up)");
add("wt2wt", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022)");
add("wt2wt", "Bare pipe character (bug 52363)");
add("wt2wt", "Comment semantics: unclosed comment at end");
add("wt2wt", "Tabs don't trigger preformatted text");
add("wt2wt", "<nowiki> inside <pre> (bug 13238)");
add("wt2wt", "<nowiki> and <pre> preference (first one wins)");
add("wt2wt", "4. Multiple spaces at start-of-line");
add("wt2wt", "5. White-space in indent-pre\nNOTE: the white-space char on 2nd line is significant");
add("wt2wt", "6. Pre-blocks should extend across lines with leading WS even when there is no wrappable content");
add("wt2wt", "HTML-pre: 1. embedded newlines");
add("wt2wt", "Definition lists: self-closed tag");
add("wt2wt", "External links: open square bracket forbidden in URL (named) (bug 4377)");
add("wt2wt", "External links: Clickable images");
add("wt2wt", "BUG 289: \">\"-token in bracketed URL");
add("wt2wt", "BUG 289: literal \">\"-token in bracketed URL");
add("wt2wt", "BUG 289: literal double quote in bracketed URL");
add("wt2wt", "External links: multiple legal whitespace is fine, Magnus. Don't break it please. (bug 5081)");
add("wt2wt", "External links: wiki links within external link (Bug 3695)");
add("wt2wt", "Bug 2702: Mismatched <i>, <b> and <a> tags are invalid");
add("wt2wt", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check)");
add("wt2wt", "External link containing double-single-quotes with no space separating the url from text in italics");
add("wt2wt", "Unclosed and unmatched quotes (parsoid)");
add("wt2wt", "A table with captions with non-default spaced attributes and a table row");
add("wt2wt", "Table td-cell syntax variations");
add("wt2wt", "Allow +/- in 2nd and later cells in a row, in 1st cell when td-attrs are present, or in 1st cell when there is a space between \"|\" and +/- ");
add("wt2wt", "Table rowspan");
add("wt2wt", "Nested table");
add("wt2wt", "Invalid attributes in table cell (bug 1830)");
add("wt2wt", "Table security: embedded pipes (http://lists.wikimedia.org/mailman/htdig/wikitech-l/2006-April/022293.html)");
add("wt2wt", "Table attributes with empty value");
add("wt2wt", "Implicit <td> after a |-\n(PHP parser relies on Tidy to add the missing <td> tags)");
add("wt2wt", "Pres should be recognized in an explicit <td> context, but not in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags)");
add("wt2wt", "Lists should be recognized in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags)");
add("wt2wt", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check)");
add("wt2wt", "BUG 2: [[page|http://url/]] should link to page, not http://url/");
add("wt2wt", "Parsoid-centric test: Whitespace in ext- and wiki-links should be preserved");
add("wt2wt", "Handling html with a div self-closing tag");
add("wt2wt", "Handling html with a br self-closing tag");
add("wt2wt", "Horizontal ruler (should it add that extra space?)");
add("wt2wt", "Nested lists 3 (first element empty)");
add("wt2wt", "Nested lists 6 (both elements empty)");
add("wt2wt", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack)");
add("wt2wt", "Unbalanced closing non-block tags don't break a list\n(Parsoid-only since php parser generates broken html -- relies on Tidy to fix up)");
add("wt2wt", "Magic Word: {{CURRENTMONTH1}}");
add("wt2wt", "Magic Words LOCAL (UTC)");
add("wt2wt", "Magic Word: {{TALKSPACEE}}");
add("wt2wt", "Magic Word: {{SUBJECTSPACEE}}");
add("wt2wt", "Magic Word: {{SUBPAGENAME}}");
add("wt2wt", "Magic Word: {{SUBPAGENAMEE}}");
add("wt2wt", "Magic Word: {{ROOTPAGENAME}}");
add("wt2wt", "Magic Word: {{ROOTPAGENAMEE}}");
add("wt2wt", "Magic Word: {{BASEPAGENAME}}");
add("wt2wt", "Magic Word: {{BASEPAGENAMEE}}");
add("wt2wt", "Magic Word: {{TALKPAGENAMEE}}");
add("wt2wt", "Magic Word: {{SUBJECTPAGENAME}}");
add("wt2wt", "Magic Word: {{SUBJECTPAGENAMEE}}");
add("wt2wt", "Magic Word: {{REVISIONID}}");
add("wt2wt", "Magic Word: {{STYLEPATH}}");
add("wt2wt", "Case-sensitive magic words, when cased differently, should just be template transclusions");
add("wt2wt", "Nonexistent template");
add("wt2wt", "Template with argument in separate line");
add("wt2wt", "Template with targets containing wikilinks");
add("wt2wt", "msgnw keyword");
add("wt2wt", "2. includeonly in html attr value");
add("wt2wt", "Templates: HTML Tag: 2. Generation of HTML attr. value");
add("wt2wt", "Templates: HTML Tag: 3. Generation of HTML attr key and value");
add("wt2wt", "Templates: HTML Tables: 5. Proper fostering of categories from inside");
add("wt2wt", "Templates: Wiki Tables: 1b. Fostering of entire template content");
add("wt2wt", "pre-save transform: nonexistent template");
add("wt2wt", "pre-save transform: mixed tag case");
add("wt2wt", "pre-save transform: Signature expansion");
add("wt2wt", "pre-save transform: Signature expansion in nowiki tags (bug 93)");
add("wt2wt", "Image with multiple captions -- only last one is accepted (parsoid)");
add("wt2wt", "SVG thumbnails with language de");
add("wt2wt", "SVG thumbnails with invalid language code");
add("wt2wt", "BUG 561: {{/Subpage}}");
add("wt2wt", "Handling of sections up to level 6 and beyond");
add("wt2wt", "div with single-quoted attribute");
add("wt2wt", "div with unquoted attribute");
add("wt2wt", "div with illegal double attributes");
add("wt2wt", "div with empty attribute value, space before equals");
add("wt2wt", "div with empty attribute value, no space before equals");
add("wt2wt", "HTML multiple attributes correction");
add("wt2wt", "Table multiple attributes correction");
add("wt2wt", "Media link with nasty text\nfixme: doBlockLevels won't wrap this in a paragraph because it contains a div");
add("wt2wt", "Empty attribute crash test (bug 2067)");
add("wt2wt", "Empty attribute crash test single-quotes (bug 2067)");
add("wt2wt", "Attribute test: equals, then nothing");
add("wt2wt", "Attribute test: unquoted value");
add("wt2wt", "Attribute test: unquoted but illegal value (hash)");
add("wt2wt", "Bug 2095: link with pipe and three closing brackets, version 2");
add("wt2wt", "Table attribute legitimate extension");
add("wt2wt", "Table attribute safety");
add("wt2wt", "Sanitizer: Closing of closed but not open tags");
add("wt2wt", "Sanitizer: Closing of closed but not open table tags");
add("wt2wt", "Sanitizer: Validating the contents of the id attribute (bug 4515)");
add("wt2wt", "Sanitizer: Validating that <meta> and <link> work, but only for Microdata");
add("wt2wt", "Fuzz testing: Parser13");
add("wt2wt", "Fuzz testing: Parser14-table");
add("wt2wt", "Fuzz testing: Parser16");
add("wt2wt", "Fuzz testing: Parser21");
add("wt2wt", "Fuzz testing: Parser22");
add("wt2wt", "Fuzz testing: Parser24");
add("wt2wt", "Fuzz testing: Parser25 (bug 6055)");
add("wt2wt", "Inline wiki vs wiki block nesting");
add("wt2wt", "Mixing markup for italics and bold");
add("wt2wt", "Transclusion of default MediaWiki message");
add("wt2wt", "Transclusion of nonexistent MediaWiki message");
add("wt2wt", "Transclusion of MediaWiki message with underscore");
add("wt2wt", "Transclusion of MediaWiki message with space");
add("wt2wt", "5 quotes, code coverage +1 line (parsoid)");
add("wt2wt", "Say the magic word");
add("wt2wt", "ISBN code coverage");
add("wt2wt", "RFC code coverage");
add("wt2wt", "Images with the \"|\" character in the comment");
add("wt2wt", "Transclusion of a sibling page (one level up)");
add("wt2wt", "Transclusion of a child page");
add("wt2wt", "Non-transclusion because of too many up levels");
add("wt2wt", "Don't fall for the self-closing div");
add("wt2wt", "MSGNW magic word");
add("wt2wt", "RAW magic word");
add("wt2wt", "Parsing of overlapping (improperly nested) inline html tags (Parsoid)");
add("wt2wt", "Simple template in language variants");
add("wt2wt", "Template with explicit namespace in language variants");
add("wt2wt", "Basic test for template parameter in language variants");
add("wt2wt", "Case insensitivity of parser functions for non-ASCII characters (bug 8143)");
add("wt2wt", "Free external link invading image caption");
add("wt2wt", "preload: check that it doesn't try to do tricks");
add("wt2wt", "HTML5 data attributes");
add("wt2wt", "percent-encoding and + signs in internal links (Bug 26410)");
add("wt2wt", "Bug 19052 U+3000 IDEOGRAPHIC SPACE should terminate bracketed external links");
add("wt2wt", "Bug31490 Turkish: ucfırst (with a dotless i)");
add("wt2wt", "Bug31490 ucfırst (with a dotless i) with English language");
add("wt2wt", "Ignore pipe between table row attributes");
add("wt2wt", "Ref: 3. spaces in ref-names should be ignored");
add("wt2wt", "Ref: 5. body should accept generic wikitext");
add("wt2wt", "Ref: 6. indent-pres should not be output in ref-body");
add("wt2wt", "Ref: 7. No p-wrapping in ref-body");
add("wt2wt", "Ref: 8. transclusion wikitext has lower precedence");
add("wt2wt", "Ref: 9. unclosed comments should not leak out of ref-body");
add("wt2wt", "Ref: 10. Unclosed HTML tags should not leak out of ref-body");
add("wt2wt", "References: 2. references tag with group only outputs references from that group");
add("wt2wt", "References: 4. only referenced group should be cleared after processing references");
add("wt2wt", "References: 5. ref tags in references should be processed while ignoring all other content");
add("wt2wt", "Tables: 1b. No escaping needed");
add("wt2wt", "Tables: 1c. No escaping needed");
add("wt2wt", "Tables: 1d. No escaping needed");
add("wt2wt", "HTML tag with broken attribute value quoting");
add("wt2wt", "Parsoid-only: HTML tag with broken attribute value quoting");
add("wt2wt", "Table with broken attribute value quoting");
add("wt2wt", "Table with broken attribute value quoting on consecutive lines");
add("wt2wt", "Parsoid-only: Table with broken attribute value quoting on consecutive lines");
add("wt2wt", "RT-ed inter-element separators should be valid separators");
add("wt2wt", "Empty TD followed by TD with tpl-generated attribute");
add("wt2wt", "Improperly nested inline or quotes tags with whitespace in between");


// Blacklist for html2html
add("html2html", "Paragraphs with newline spacing with non-empty white-space lines in between");
add("html2html", "Paragraphs with newline spacing with non-empty mixed comment and white-space lines in between");
add("html2html", "Extra newlines followed by heading");
add("html2html", "Extra newlines between heading and content are swallowed");
add("html2html", "Italics and possessives (1)");
add("html2html", "Italics and possessives (3)");
add("html2html", "Italics and bold: 2-quote opening sequence: (2,5) (parsoid)");
add("html2html", "Italics and bold: 3-quote opening sequence: (3,5) (parsoid)");
add("html2html", "Italics and bold: 4-quote opening sequence: (4,5) (parsoid)");
add("html2html", "Italics and bold: 5-quote opening sequence: (5,2)");
add("html2html", "Italics and bold: multiple quote sequences: (3,4,2) (parsoid)");
add("html2html", "Italics and bold: multiple quote sequences: (3,4,3) (parsoid)");
add("html2html", "Italics and bold: other quote tests: (3,2,3,2)");
add("html2html", "Italicized possessive");
add("html2html", "<nowiki> spacing");
add("html2html", "nowiki 3");
add("html2html", "Preformatted text");
add("html2html", "Tabs don't trigger preformatted text");
add("html2html", "<pre> with attributes (bug 3202)");
add("html2html", "<pre> with width attribute (bug 3202)");
add("html2html", "<pre> with forbidden attribute (bug 3202)");
add("html2html", "<pre> with forbidden attribute values (bug 3202)");
add("html2html", "<nowiki> inside <pre> (bug 13238)");
add("html2html", "3a. Indent-Pre and block tags (single-line html)");
add("html2html", "4. Multiple spaces at start-of-line");
add("html2html", "6. Pre-blocks should extend across lines with leading WS even when there is no wrappable content");
add("html2html", "HTML-pre: 1. embedded newlines");
add("html2html", "HTML-pre: 3: other wikitext");
add("html2html", "Definition list with no space");
add("html2html", "Definition list with bracketed URL link");
add("html2html", "Definition list with wikilink containing colon");
add("html2html", "Definition lists: colon in HTML attribute");
add("html2html", "Definition lists: self-closed tag");
add("html2html", "Bug 11748: Literal closing tags");
add("html2html", "Nested definition lists using html syntax");
add("html2html", "Definition Lists: No nesting: Multiple dd's");
add("html2html", "Definition Lists: Indentation: Regular");
add("html2html", "Definition Lists: Indentation: Missing 1st level");
add("html2html", "Definition Lists: Indentation: Multi-level indent");
add("html2html", "Definition Lists: Hacky use to indent tables");
add("html2html", "Table / list interaction: indented table with lists in table contents");
add("html2html", "Table / list interaction: lists nested in tables nested in indented lists");
add("html2html", "Definition Lists: Nesting: Multi-level (Parsoid only)");
add("html2html", "Definition Lists: Nesting: Test 2 (Parsoid only)");
add("html2html", "Definition Lists: Nesting: Test 3 (Parsoid only)");
add("html2html", "Definition Lists: Nesting: Test 4");
add("html2html", "Definition Lists: Mixed Lists: Test 4");
add("html2html", "Definition Lists: Mixed Lists: Test 5");
add("html2html", "Definition Lists: Mixed Lists: Test 6");
add("html2html", "Definition Lists: Mixed Lists: Test 9");
add("html2html", "Definition Lists: Mixed Lists: Test 10");
add("html2html", "Definition Lists: Mixed Lists: Test 11 (parsoid)");
add("html2html", "External image");
add("html2html", "External image from https");
add("html2html", "External links: Clickable images");
add("html2html", "External links: wiki links within external link (Bug 3695)");
add("html2html", "Bug 4781: %26 in URL");
add("html2html", "Bug 4781, 5267: %25 in URL");
add("html2html", "Bug 4781, 5267: %28, %29 in URL");
add("html2html", "Bug 4781: %26 in autonumber URL");
add("html2html", "Bug 4781, 5267: %26 in autonumber URL");
add("html2html", "Bug 4781, 5267: %28, %29 in autonumber URL");
add("html2html", "Bug 4781: %26 in bracketed URL");
add("html2html", "Bug 4781, 5267: %26 in bracketed URL");
add("html2html", "Bug 4781, 5267: %28, %29 in bracketed URL");
add("html2html", "External link containing double-single-quotes with no space separating the url from text in italics");
add("html2html", "Brackets in urls");
add("html2html", "IPv6 urls (bug 21261)");
add("html2html", "Unclosed and unmatched quotes (parsoid)");
add("html2html", "Accept \"||\" in indented table headings");
add("html2html", "Table security: embedded pipes (http://lists.wikimedia.org/mailman/htdig/wikitech-l/2006-April/022293.html)");
add("html2html", "Indented table markup mixed with indented pre content (proposed in bug 6200)");
add("html2html", "Plain link, capitalized");
add("html2html", "Plain link, uncapitalized");
add("html2html", "Piped link");
add("html2html", "Piped link with comment in link text");
add("html2html", "Broken link");
add("html2html", "Broken link with fragment");
add("html2html", "Special page link with fragment");
add("html2html", "Nonexistent special page link with fragment");
add("html2html", "Link with prefix");
add("html2html", "Link with suffix");
add("html2html", "Bug 43661: Piped links with identical prefixes");
add("html2html", "Link with HTML entity in suffix / tail");
add("html2html", "Link with multiple pipes");
add("html2html", "Link to namespaces");
add("html2html", "Piped link to namespace");
add("html2html", "Link containing % (not as a hex sequence)");
add("html2html", "Link containing % as a single hex sequence interpreted to char");
add("html2html", "Link containing \"#<\" and \"#>\" % as a hex sequences- these are valid section anchors\nExample for such a section: == < ==");
add("html2html", "Link containing an equals sign");
add("html2html", "Link containing a tilde");
add("html2html", "Link containing double-single-quotes '' (bug 4598)");
add("html2html", "Link containing double-single-quotes '' in text (bug 4598 sanity check)");
add("html2html", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check)");
add("html2html", "Link with double quotes in title part (literal) and alternate part (interpreted)");
add("html2html", "Broken image links with HTML captions (bug 39700)");
add("html2html", "Plain link to page with question mark in title");
add("html2html", "Piped link to URL");
add("html2html", "BUG 2: [[page|http://url/]] should link to page, not http://url/");
add("html2html", "Self-link to section should not be bold");
add("html2html", "Link to numeric-equivalent title");
add("html2html", "<nowiki> inside a link");
add("html2html", "Non-breaking spaces in title");
add("html2html", "Internal link with ca linktrail, surrounded by bold apostrophes (bug 27473 primary issue)");
add("html2html", "Internal link with ca linktrail, surrounded by italic apostrophes (bug 27473 primary issue)");
add("html2html", "Internal link with en linktrail: no apostrophes (bug 27473)");
add("html2html", "Internal link with ca linktrail with apostrophes (bug 27473)");
add("html2html", "Internal link with kaa linktrail with apostrophes (bug 27473)");
add("html2html", "Internal link with is link prefix");
add("html2html", "Internal link with is link trail and link prefix");
add("html2html", "Parsoid-centric test: Whitespace in ext- and wiki-links should be preserved");
add("html2html", "Inline interwiki link");
add("html2html", "Inline interwiki link with empty title (bug 2372)");
add("html2html", "Interwiki link encoding conversion (bug 1636)");
add("html2html", "Interwiki link with fragment (bug 2130)");
add("html2html", "Parsoid-specific test: Wikilinks with &nbsp; should RT properly");
add("html2html", "Parsoid: recognize interlanguage links without a target page");
add("html2html", "Parsoid: recognize interwiki links without a target page");
add("html2html", "<br> to <br />");
add("html2html", "Incorrecly removing closing slashes from correctly formed XHTML");
add("html2html", "Failing to transform badly formed HTML into correct XHTML");
add("html2html", "Handling html with a br self-closing tag");
add("html2html", "Horizontal ruler (should it add that extra space?)");
add("html2html", "Common list");
add("html2html", "Numbered list");
add("html2html", "Mixed list");
add("html2html", "Nested lists 1");
add("html2html", "Nested lists 2");
add("html2html", "Nested lists 3 (first element empty)");
add("html2html", "Nested lists 4 (first element empty)");
add("html2html", "1. Lists with start-of-line-transparent tokens before bullets: Comments");
add("html2html", "2. Lists with start-of-line-transparent tokens before bullets: Template close");
add("html2html", "List items are not parsed correctly following a <pre> block (bug 785)");
add("html2html", "List interrupted by empty line or heading");
add("html2html", "Multiple list tags generated by templates");
add("html2html", "Single-comment whitespace lines dont break lists, and neither do multi-comment whitespace lines");
add("html2html", "Replacing whitespace with tabs still doesn't break the list (gerrit 78327)");
add("html2html", "Unbalanced closing block tags break a list\n(Parsoid-only since php parser generates broken html -- relies on Tidy to fix up)");
add("html2html", "Unbalanced closing non-block tags don't break a list\n(Parsoid-only since php parser generates broken html -- relies on Tidy to fix up)");
add("html2html", "List embedded in a non-block tag\n(Ugly Parsoid output -- worth fixing; Disabled for PHP parser since it relies on Tidy)");
add("html2html", "Case-sensitive magic words, when cased differently, should just be template transclusions");
add("html2html", "Magic links: internal link to RFC (bug 479)");
add("html2html", "Magic links: ISBN (bug 1937)");
add("html2html", "Nonexistent template");
add("html2html", "Template unnamed parameter");
add("html2html", "Template with thumb image (with link in description)");
add("html2html", "Template with complex arguments");
add("html2html", "Template parameter as link source");
add("html2html", "Template as link source");
add("html2html", "Template infinite loop");
add("html2html", "Template with targets containing wikilinks");
add("html2html", "Self-closed noinclude, includeonly, onlyinclude tags");
add("html2html", "Bug 6563: Edit link generation for section shown by <includeonly>");
add("html2html", "Bug 6563: Section extraction for section shown by <includeonly>");
add("html2html", "Bug 6563: Edit link generation for section suppressed by <includeonly>");
add("html2html", "Bug 6563: Section extraction for section suppressed by <includeonly>");
add("html2html", "Templates: Links: 1. Simple example");
add("html2html", "Templates: Links: 2. Generation of link href");
add("html2html", "Templates: Links: 3. Generation of part of a link href");
add("html2html", "Templates: Links: 4. Multiple templates generating link href");
add("html2html", "Templates: Links: 5. Generation of link text");
add("html2html", "Templates: Links: 5. Nested templates (only outermost template should be marked)");
add("html2html", "Templates: Wiki Tables: 1a. Fostering of entire template content");
add("html2html", "Templates: Wiki Tables: 2. Fostering of partial template content");
add("html2html", "Templates: Lists: Multi-line list-items via templates");
add("html2html", "Templates: Ugly templates: 4. newline-only template parameter inconsistency");
add("html2html", "pre-save transform: subst:");
add("html2html", "pre-save transform: normal template");
add("html2html", "pre-save transform: nonexistent template");
add("html2html", "pre-save transform: subst magic variables");
add("html2html", "pre-save transform: subst: templates with parameters");
add("html2html", "pre-save transform: nowiki in subst (bug 1188)");
add("html2html", "pre-save transform: comment in subst (bug 1936)");
add("html2html", "pre-save transform: unclosed tag");
add("html2html", "pre-save transform: mixed tag case");
add("html2html", "pre-save transform: unclosed comment in <nowiki>");
add("html2html", "pre-save transform: <noinclude> in subst (bug 3298)");
add("html2html", "pre-save transform: <onlyinclude> in subst (bug 3298)");
add("html2html", "bug 22297: safesubst: works during PST");
add("html2html", "pre-save transform: context links (\"pipe trick\")");
add("html2html", "pre-save transform: context links (\"pipe trick\") with interwiki prefix");
add("html2html", "pre-save transform: context links (\"pipe trick\") with parens in title");
add("html2html", "pre-save transform: context links (\"pipe trick\") with comma in title");
add("html2html", "pre-save transform: context links (\"pipe trick\") with parens and comma");
add("html2html", "pre-save transform: context links (\"pipe trick\") with comma and parens");
add("html2html", "pre-save transform: context links (\"pipe trick\") with namespace");
add("html2html", "pre-save transform: context links (\"pipe trick\") with namespace and parens");
add("html2html", "pre-save transform: context links (\"pipe trick\") with namespace and comma");
add("html2html", "pre-save transform: context links (\"pipe trick\") with namespace, comma and parens");
add("html2html", "pre-save transform: context links (\"pipe trick\") with namespace, parens and comma");
add("html2html", "pre-save transform: context links (\"pipe trick\") with full-width parens and no space (Japanese and Chinese style, bug 30149)");
add("html2html", "pre-save transform: context links (\"pipe trick\") with full-width parens and space (Japanese and Chinese style, bug 30149)");
add("html2html", "pre-save transform: context links (\"pipe trick\") with parens and no space (Korean style, bug 30149)");
add("html2html", "pre-save transform: context links (\"pipe trick\") with commas (bug 21660)");
add("html2html", "pre-save transform: trim trailing empty lines");
add("html2html", "pre-save transform: Signature expansion");
add("html2html", "pre-save transform: Signature expansion in nowiki tags (bug 93)");
add("html2html", "message transform: magic variables");
add("html2html", "message transform: should not transform wiki markup");
add("html2html", "message transform: <noinclude> in transcluded template (bug 4926)");
add("html2html", "message transform: <onlyinclude> in transcluded template (bug 4926)");
add("html2html", "{{#special:}} page name, known");
add("html2html", "{{#special:}} page name with subpage, known");
add("html2html", "{{#special:}} page name, unknown");
add("html2html", "{{#speciale:}} page name, known");
add("html2html", "{{#speciale:}} page name with subpage, known");
add("html2html", "{{#speciale:}} page name, unknown");
add("html2html", "Image with link tails (parsoid)");
add("html2html", "Image with link parameter, wgExternalLinkTarget");
add("html2html", "Image with link parameter, wgNoFollowLinks set to false");
add("html2html", "Image with link parameter, wgNoFollowDomainExceptions");
add("html2html", "Image with link parameter, wgExternalLinkTarget, unnamed parameter");
add("html2html", "Image with frame and link");
add("html2html", "Image with frame and link and explicit alt");
add("html2html", "Image with wiki markup in implicit alt");
add("html2html", "Image with wiki markup in explicit alt");
add("html2html", "Link to image page- image page normally doesn't exists, hence edit link\nAdd test with existing image page\n#<p><a href=\"/wiki/File:Test\" title=\"Image:Test\">Image:test</a>");
add("html2html", "bug 18784  Link to non-existent image page with caption should use caption as link text");
add("html2html", "Frameless image caption with a free URL");
add("html2html", "Thumbnail image caption with a free URL");
add("html2html", "Thumbnail image caption with a free URL and explicit alt");
add("html2html", "SVG thumbnails with no language set");
add("html2html", "SVG thumbnails with language de");
add("html2html", "SVG thumbnails with invalid language code");
add("html2html", "BUG 1887: A ISBN with a thumbnail");
add("html2html", "BUG 1887: A RFC with a thumbnail");
add("html2html", "BUG 1887: A mailto link with a thumbnail");
add("html2html", "BUG 648: Frameless image caption with a link");
add("html2html", "BUG 648: Frameless image caption with a link (suffix)");
add("html2html", "BUG 648: Frameless image caption with an interwiki link");
add("html2html", "BUG 648: Frameless image caption with a piped interwiki link");
add("html2html", "Escape HTML special chars in image alt text");
add("html2html", "BUG 499: Alt text should have &#1234;, not &amp;1234;");
add("html2html", "Broken image caption with link");
add("html2html", "Image caption containing another image");
add("html2html", "Image caption containing a newline");
add("html2html", "Parsoid: Image caption containing leading space\n(The leading space should not trigger nowiki escaping in wt2wt mode)");
add("html2html", "Bug 3090: External links other than http: in image captions");
add("html2html", "Custom class");
add("html2html", "Localized image handling (1).");
add("html2html", "Localized image handling (2).");
add("html2html", "\"border\", \"frameless\" and \"class\" attributes on an image.");
add("html2html", "Redirected image");
add("html2html", "Missing image with uploads disabled");
add("html2html", "Parsoid-specific image handling - simple image with size and middle alignment");
add("html2html", "Parsoid-specific image handling - simple image with both sizes, a baseline alignment, and a caption");
add("html2html", "Parsoid-specific image handling - thumbnail with halign, valign, and caption");
add("html2html", "Parsoid-specific image handling - thumbnail with specific size, halign, valign, and caption");
add("html2html", "Parsoid-specific image handling - framed image with specific size, halign, valign, and caption");
add("html2html", "Subpage link");
add("html2html", "Subpage noslash link");
add("html2html", "Disabled subpages");
add("html2html", "BUG 561: {{/Subpage}}");
add("html2html", "Link to category");
add("html2html", "Simple category");
add("html2html", "Category with different sort key");
add("html2html", "Category with identical sort key");
add("html2html", "Category with empty sort key");
add("html2html", "Category with empty sort key and parentheses");
add("html2html", "Category with link tail");
add("html2html", "Category with template");
add("html2html", "Category with template in sort key");
add("html2html", "Category with template in sort key and title");
add("html2html", "Inter-language links");
add("html2html", "Duplicate interlanguage links (bug 24502)");
add("html2html", "Basic section headings");
add("html2html", "Section headings with TOC");
add("html2html", "Handling of sections up to level 6 and beyond");
add("html2html", "TOC regression (bug 9764)");
add("html2html", "TOC with wgMaxTocLevel=3 (bug 6204)");
add("html2html", "TOC with wgMaxTocLevel=3 and two level four headings (bug 6204)");
add("html2html", "Resolving duplicate section names");
add("html2html", "Resolving duplicate section names with differing case (bug 10721)");
add("html2html", "Template with sections, __NOTOC__");
add("html2html", "__NOEDITSECTION__ keyword");
add("html2html", "Link inside a section heading");
add("html2html", "TOC regression (bug 12077)");
add("html2html", "BUG 1219 URL next to image (good)");
add("html2html", "Short headings with trailing space should match behavior of Parser::doHeadings (bug 19910)");
add("html2html", "Header with special characters (bug 25462)");
add("html2html", "Headers with excess '=' characters\n(Are similar tests necessary beyond the 1st level?)");
add("html2html", "HTML headers vs TOC (bug 23393)\n(__NOEDITSECTION__ for clearer output, doesn't matter here)");
add("html2html", "BUG 1219 URL next to image (broken)");
add("html2html", "Media link");
add("html2html", "Media link with text");
add("html2html", "Media link with nasty text\nfixme: doBlockLevels won't wrap this in a paragraph because it contains a div");
add("html2html", "Media link to nonexistent file (bug 1702)");
add("html2html", "Image link to nonexistent file (bug 1850 - good)");
add("html2html", ":Image link to nonexistent file (bug 1850 - bad)");
add("html2html", "Character reference normalization in link text (bug 1938)");
add("html2html", "(bug 19451) Links should refer to the normalized form.");
add("html2html", "Bug 2095: link with three closing brackets");
add("html2html", "Bug 2095: link with pipe and three closing brackets");
add("html2html", "Bug 2095: link with pipe and three closing brackets, version 2");
add("html2html", "Bug 2304: HTML attribute safety (dangerous style template; 2309)");
add("html2html", "Bug 2304: HTML attribute safety (unsafe parameter; 2309)");
add("html2html", "Bug 3244: HTML attribute safety (extension; unsafe)");
add("html2html", "MSIE CSS safety test: spurious slash");
add("html2html", "MSIE CSS safety test: hex code");
add("html2html", "Table attribute safety");
add("html2html", "CSS line continuation 1");
add("html2html", "CSS line continuation 2");
add("html2html", "Expansion of multi-line templates in attribute values (bug 6255 sanity check 2)");
add("html2html", "Parser hook: empty input");
add("html2html", "Parser hook: nested tags");
add("html2html", "Parser hook: basic arguments");
add("html2html", "Parser hook: argument containing a forward slash (bug 5344)");
add("html2html", "Parser hook: empty input using terminated empty elements (bug 2374)");
add("html2html", "Parser hook: static parser hook inside a comment");
add("html2html", "Sanitizer: Closing of open tags");
add("html2html", "Sanitizer: Escaping of spaces, multibyte characters, colons & other stuff in id=\"\"");
add("html2html", "Sanitizer: Validating the contents of the id attribute (bug 4515)");
add("html2html", "Sanitizer: Validating id attribute uniqueness (bug 4515, bug 6301)");
add("html2html", "Sanitizer: Validating that <meta> and <link> work, but only for Microdata");
add("html2html", "HTML bullet list, closed tags (bug 5497)");
add("html2html", "HTML bullet list, unclosed tags (bug 5497)");
add("html2html", "HTML ordered list, closed tags (bug 5497)");
add("html2html", "HTML ordered list, unclosed tags (bug 5497)");
add("html2html", "HTML nested bullet list, closed tags (bug 5497)");
add("html2html", "HTML nested bullet list, open tags (bug 5497)");
add("html2html", "HTML nested ordered list, closed tags (bug 5497)");
add("html2html", "HTML nested ordered list, open tags (bug 5497)");
add("html2html", "HTML ordered list item with parameters oddity");
add("html2html", "Fuzz testing: Parser14");
add("html2html", "Fuzz testing: Parser14-table");
add("html2html", "Fuzz testing: Parser24");
add("html2html", "Fuzz testing: URL adjacent extension (no space, dirty; pre)");
add("html2html", "Fuzz testing: encoded newline in generated HTML replacements (bug 6577)");
add("html2html", "Parsing optional HTML elements (Bug 6171)");
add("html2html", "Correct handling of <td>, <tr> (Bug 6171)");
add("html2html", "Special page transclusion");
add("html2html", "Special page transclusion twice (bug 5021)");
add("html2html", "Transclusion of nonexistent MediaWiki message");
add("html2html", "Section extraction test (section 0)");
add("html2html", "Section extraction test (section 1)");
add("html2html", "Section extraction test (section 2)");
add("html2html", "Section extraction test (section 3)");
add("html2html", "Section extraction test (section 4)");
add("html2html", "Section extraction test (section 5)");
add("html2html", "Section extraction test (section 6)");
add("html2html", "Section extraction test (section 7)");
add("html2html", "Section extraction test (section 8)");
add("html2html", "Section extraction test (section 9)");
add("html2html", "Section extraction test (section 10)");
add("html2html", "Section extraction test with bogus heading (section 1)");
add("html2html", "Section extraction test with bogus heading (section 2)");
add("html2html", "Section extraction test with comment after heading (section 1)");
add("html2html", "Section extraction test with comment after heading (section 2)");
add("html2html", "Section extraction test with bogus <nowiki> heading (section 1)");
add("html2html", "Section extraction test with bogus <nowiki> heading (section 2)");
add("html2html", "Section extraction prefixed by comment (section 1)");
add("html2html", "Section extraction, mixed wiki and html (section 1)");
add("html2html", "Section extraction, mixed wiki and html (section 2)");
add("html2html", "Section extraction, heading surrounded by <noinclude>");
add("html2html", "Sectiion with all-equals");
add("html2html", "Section replacement test (section 0)");
add("html2html", "Section replacement test (section 1)");
add("html2html", "Section replacement test (section 2)");
add("html2html", "Section replacement test (section 3)");
add("html2html", "Section replacement test (section 4)");
add("html2html", "Section replacement test (section 5)");
add("html2html", "Section replacement test (section 6)");
add("html2html", "Section replacement test (section 7)");
add("html2html", "Section replacement test (section 8)");
add("html2html", "Section replacement test (section 9)");
add("html2html", "Section replacement test (section 10)");
add("html2html", "Section replacement test with initial whitespace (bug 13728)");
add("html2html", "Section extraction, heading followed by pre with 20 spaces (bug 6398)");
add("html2html", "Section extraction, heading followed by pre with 19 spaces (bug 6398 sanity check)");
add("html2html", "Section extraction, <pre> around bogus header (bug 10309)");
add("html2html", "Section replacement, <pre> around bogus header (bug 10309)");
add("html2html", "Handling of &#x0A; in URLs");
add("html2html", "5 quotes, code coverage +1 line (parsoid)");
add("html2html", "Special:Search page linking.");
add("html2html", "Say the magic word");
add("html2html", "Gallery");
add("html2html", "Gallery (with options)");
add("html2html", "Gallery with wikitext inside caption");
add("html2html", "gallery (with showfilename option)");
add("html2html", "Gallery (with namespace-less filenames)");
add("html2html", "__FORCETOC__ override");
add("html2html", "ISBN code coverage");
add("html2html", "Double ISBN");
add("html2html", "Bug 22905: <abbr> followed by ISBN followed by </a>");
add("html2html", "Double RFC with a wiki link");
add("html2html", "Centre-aligned image");
add("html2html", "None-aligned image");
add("html2html", "Width + Height sized image (using px) (height is ignored)");
add("html2html", "Width-sized image (using px, no following whitespace)");
add("html2html", "Width-sized image (using px, with following whitespace - test regression from r39467)");
add("html2html", "Width-sized image (using px, with preceding whitespace - test regression from r39467)");
add("html2html", "Images with the \"|\" character in the comment");
add("html2html", "HTML with raw HTML ($wgRawHtml==true)");
add("html2html", "Parents of subpages, one level up");
add("html2html", "Parents of subpages, one level up, not named");
add("html2html", "Parents of subpages, two levels up");
add("html2html", "Parents of subpages, two levels up, with lots of extra trailing slashes.");
add("html2html", "Definition list code coverage");
add("html2html", "RAW magic word");
add("html2html", "Inclusion of !userCanEdit() content");
add("html2html", "Out-of-order TOC heading levels");
add("html2html", "ISBN with space-delimited number");
add("html2html", "ISBN length");
add("html2html", "ISBN with trailing year (bug 8110)");
add("html2html", "anchorencode encodes like the TOC generator: (bug 18431)");
add("html2html", "Link to another existing title shouldn't be parsed as self-link even if it's a variant of this title");
add("html2html", "Link to pages in language variants");
add("html2html", "Multiple links to pages in language variants");
add("html2html", "Simple category in language variants");
add("html2html", "Don't convert blue categorylinks to another variant (bug 33210)");
add("html2html", "Prevent conversion of links with -{}- tags (language variants)");
add("html2html", "-{}- tags within headlines (within html for parserConvert())");
add("html2html", "Adding explicit conversion rule for title (T flag)");
add("html2html", "Testing that changing the language variant here in the tests actually works");
add("html2html", "Recursive conversion of alt and title attrs shouldn't clear converter state");
add("html2html", "Bug 24072: more test on conversion rule for title");
add("html2html", "Partly disable title conversion if variant == main language code");
add("html2html", "Partly disable title conversion if variant == main language code, more");
add("html2html", "Morwen/13: Unclosed link followed by heading");
add("html2html", "HHP2.1: Heuristics for headings in preprocessor parenthetical structures");
add("html2html", "HHP2.2: Heuristics for headings in preprocessor parenthetical structures");
add("html2html", "Interwiki links trounced by replaceExternalLinks after early LinkHolderArray expansion");
add("html2html", "Free external link invading image caption");
add("html2html", "Edit comment with link");
add("html2html", "Edit comment with link and link text");
add("html2html", "Edit comment with link and link text with suffix");
add("html2html", "Edit comment with section link (non-local, eg in history list)");
add("html2html", "Edit comment with section link and text before it (non-local, eg in history list)");
add("html2html", "Edit comment with section link (local, eg in diff view)");
add("html2html", "Edit comment with subpage link (bug 14080)");
add("html2html", "Edit comment with subpage link and link text (bug 14080)");
add("html2html", "Edit comment with bogus subpage link in non-subpage NS (bug 14080)");
add("html2html", "Edit comment with bare anchor link (local, as on diff)");
add("html2html", "Edit comment with bare anchor link (non-local, as on history)");
add("html2html", "Anchor starting with underscore");
add("html2html", "Space normalisation on autocomment (bug 22784)");
add("html2html", "percent-encoding and + signs in comments (Bug 26410)");
add("html2html", "Verify that displaytitle works (bug #22501) no displaytitle");
add("html2html", "Verify that displaytitle works (bug #22501) RestrictDisplayTitle=false");
add("html2html", "Verify that displaytitle works (bug #22501) RestrictDisplayTitle=true mismatch");
add("html2html", "Verify that displaytitle works (bug #22501) RestrictDisplayTitle=true matching");
add("html2html", "Verify that displaytitle works (bug #22501) AllowDisplayTitle=false");
add("html2html", "Verify that displaytitle works (bug #22501) AllowDisplayTitle=false no DISPLAYTITLE");
add("html2html", "Verify that displaytitle handles inline CSS styles (bug 26547) - rejected value");
add("html2html", "Verify that displaytitle handles inline CSS styles (bug 26547) - accepted value");
add("html2html", "preload: check <noinclude> and <includeonly>");
add("html2html", "preload: check <onlyinclude>");
add("html2html", "preload: can pass tags through if we want to");
add("html2html", "preload: check that it doesn't try to do tricks");
add("html2html", "HTML5 data attributes");
add("html2html", "percent-encoding and + signs in internal links (Bug 26410)");
add("html2html", "Special characters in embedded file links (bug 27679)");
add("html2html", "Bug 19052 U+3000 IDEOGRAPHIC SPACE should terminate external images links");
add("html2html", "Bug 31098 Template which includes system messages which includes the template");
add("html2html", "Bug31490 Turkish: ucfırst (with a dotless i)");
add("html2html", "Bug31490 ucfırst (with a dotless i) with English language");
add("html2html", "Bug 26375: TOC with italics");
add("html2html", "Bug 26375: TOC with bold");
add("html2html", "Bug 33845: Headings become cursive in TOC when they contain an image");
add("html2html", "Bug 33845 (2): Headings become bold in TOC when they contain a blockquote");
add("html2html", "Unclosed tags in TOC");
add("html2html", "Multiple tags in TOC");
add("html2html", "Tags with parameters in TOC");
add("html2html", "span tags with directionality in TOC");
add("html2html", "Bug 32057: Title needed when expanding <h> nodes.");
add("html2html", "nowiki inside link inside heading (bug 18295)");
add("html2html", "new support for bdi element (bug 31817)");
add("html2html", "Gallery override link with WikiLink (bug 34852)");
add("html2html", "Gallery override link with absolute external link (bug 34852)");
add("html2html", "Gallery override link with malicious javascript (bug 34852)");
add("html2html", "Gallery with invalid title as link (bug 43964)");
add("html2html", "Ref: 5. body should accept generic wikitext");
add("html2html", "Ref: 7. No p-wrapping in ref-body");
add("html2html", "Ref: 8. transclusion wikitext has lower precedence");
add("html2html", "Ref: 10. Unclosed HTML tags should not leak out of ref-body");
add("html2html", "References: 5. ref tags in references should be processed while ignoring all other content");
add("html2html", "Headings: 2. Outside heading nest on a single line <h1>foo</h1>*bar");
add("html2html", "Headings: 6a. Heading chars in SOL context (with trailing spaces)");
add("html2html", "Headings: 6b. Heading chars in SOL context (with trailing newlines)");
add("html2html", "Headings: 6c. Heading chars in SOL context (leading newline break)");
add("html2html", "Headings: 6d. Heading chars in SOL context (with interspersed comments)");
add("html2html", "Lists: 1. Nested inside html");
add("html2html", "Lists: 2. Inside definition lists");
add("html2html", "Lists: 3. Only bullets at start of text should be escaped");
add("html2html", "Lists: 4. No escapes needed");
add("html2html", "Lists: 5. No unnecessary escapes");
add("html2html", "Links 1. Quote marks in link text");
add("html2html", "Links 2. WikiLinks: Escapes needed");
add("html2html", "Links 3. WikiLinks: No escapes needed");
add("html2html", "Links 4. ExtLinks: Escapes needed");
add("html2html", "Links 5. ExtLinks: No escapes needed");
add("html2html", "1. Leading whitespace in SOL context should be escaped");
add("html2html", "1. a tags");
add("html2html", "Parsoid-only: Don't wrap broken template tags in <nowiki> on wt2wt (Bug 42353)");
add("html2html", "Parsoid-only: Don't wrap broken template tags in <nowiki> on wt2wt (Bug 42353)");
add("html2html", "Empty TR followed by a template-generated TR\n(Parsoid-specific since PHP parser doesn't handle this mixed tbl-wikitext)");
add("html2html", "Empty TR followed by mixed-ws-comment line should RT correctly");
add("html2html", "Multi-line image caption generated by templates with/without trailing newlines");


// Blacklist for html2wt
add("html2wt", "Paragraphs with newline spacing with comment lines in between");
add("html2wt", "Paragraphs with newline spacing with non-empty white-space lines in between");
add("html2wt", "Paragraphs with newline spacing with non-empty mixed comment and white-space lines in between");
add("html2wt", "Extra newlines: More paragraphs with indented comment");
add("html2wt", "Extra newlines followed by heading");
add("html2wt", "Extra newlines between heading and content are swallowed");
add("html2wt", "Parsing an URL");
add("html2wt", "Italics and possessives (1)");
add("html2wt", "Italics and possessives (2)");
add("html2wt", "Italics and possessives (3)");
add("html2wt", "Italics and bold: 2-quote opening sequence: (2,3)");
add("html2wt", "Italics and bold: 2-quote opening sequence: (2,4)");
add("html2wt", "Italics and bold: 2-quote opening sequence: (2,5) (parsoid)");
add("html2wt", "Italics and bold: 3-quote opening sequence: (3,4)");
add("html2wt", "Italics and bold: 3-quote opening sequence: (3,5) (parsoid)");
add("html2wt", "Italics and bold: 4-quote opening sequence: (4,2)");
add("html2wt", "Italics and bold: 4-quote opening sequence: (4,4)");
add("html2wt", "Italics and bold: 4-quote opening sequence: (4,5) (parsoid)");
add("html2wt", "Italics and bold: 5-quote opening sequence: (5,2)");
add("html2wt", "Italics and bold: 5-quote opening sequence: (5,3)");
add("html2wt", "Italics and bold: 5-quote opening sequence: (5,4)");
add("html2wt", "Italics and bold: multiple quote sequences: (2,4,2)");
add("html2wt", "Italics and bold: multiple quote sequences: (2,4,3)");
add("html2wt", "Italics and bold: multiple quote sequences: (2,4,4)");
add("html2wt", "Italics and bold: multiple quote sequences: (3,4,2) (parsoid)");
add("html2wt", "Italics and bold: multiple quote sequences: (3,4,3) (parsoid)");
add("html2wt", "Italics and bold: other quote tests: (3,2,3,2)");
add("html2wt", "Italicized possessive");
add("html2wt", "<wbr> is valid wikitext (bug 52468)");
add("html2wt", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022)");
add("html2wt", "Bare pipe character (bug 52363)");
add("html2wt", "Bare pipe character from a template (bug 52363)");
add("html2wt", "<nowiki> unordered list");
add("html2wt", "<nowiki> spacing");
add("html2wt", "nowiki 3");
add("html2wt", "Entities inside <nowiki>");
add("html2wt", "Comments and Indent-Pre");
add("html2wt", "Comment test 2a");
add("html2wt", "Comment test 2b");
add("html2wt", "Comment test 3");
add("html2wt", "Comment test 4");
add("html2wt", "Comment spacing");
add("html2wt", "Comment whitespace");
add("html2wt", "Comment semantics and delimiters");
add("html2wt", "Comment semantics and delimiters, redux");
add("html2wt", "Comment semantics and delimiters: directors cut");
add("html2wt", "Comment semantics: nesting");
add("html2wt", "Comment semantics: unclosed comment at end");
add("html2wt", "Comment in template title");
add("html2wt", "Comment on its own line post-expand");
add("html2wt", "Comment on its own line post-expand with non-significant whitespace");
add("html2wt", "Block tag on one line");
add("html2wt", "Block tag on both lines");
add("html2wt", "Multiple lines without block tags");
add("html2wt", "Empty lines between lines with block tags");
add("html2wt", "Preformatted text");
add("html2wt", "Tabs don't trigger preformatted text");
add("html2wt", "<pre> with <nowiki> inside (compatibility with 1.6 and earlier)");
add("html2wt", "Regression with preformatted in <center>");
add("html2wt", "Bug 6200: Preformatted in <blockquote>");
add("html2wt", "<pre> with attributes (bug 3202)");
add("html2wt", "<pre> with width attribute (bug 3202)");
add("html2wt", "<pre> with forbidden attribute (bug 3202)");
add("html2wt", "Entities inside <pre>");
add("html2wt", "<pre> with forbidden attribute values (bug 3202)");
add("html2wt", "<nowiki> inside <pre> (bug 13238)");
add("html2wt", "<nowiki> and <pre> preference (first one wins)");
add("html2wt", "</pre> inside nowiki");
add("html2wt", "Templates: Indent-Pre: 1a. Templates that break a line should suppress <pre>");
add("html2wt", "Templates: Indent-Pre: 1b. Templates that break a line should suppress <pre>");
add("html2wt", "Templates: Indent-Pre: 1c: Wrapping should be based on expanded content");
add("html2wt", "Templates: Indent-Pre: 1d: Wrapping should be based on expanded content");
add("html2wt", "Templates: Indent-Pre: 1e. Wrapping should be based on expanded content");
add("html2wt", "Templates: Indent-Pre: 1f: Wrapping should be based on expanded content");
add("html2wt", "Templates: Strip leading and trailing whitespace from named-param values");
add("html2wt", "Templates: Don't strip whitespace from positional-param values");
add("html2wt", "Templates: Handle empty comment-and-ws-only lines correctly");
add("html2wt", "1a. Indent-Pre and Comments");
add("html2wt", "1b. Indent-Pre and Comments");
add("html2wt", "1c. Indent-Pre and Comments");
add("html2wt", "1d. Indent-Pre and Comments\n(Pre-handler currently cannot distinguish between comment/ws order and normalizes them to [comment,ws] order)");
add("html2wt", "2a. Indent-Pre and tables");
add("html2wt", "2b. Indent-Pre and tables");
add("html2wt", "2c. Indent-Pre and tables (bug 42252)");
add("html2wt", "3a. Indent-Pre and block tags (single-line html)");
add("html2wt", "3b. Indent-Pre and block tags (pre-content on separate line)");
add("html2wt", "4. Multiple spaces at start-of-line");
add("html2wt", "5. White-space in indent-pre\nNOTE: the white-space char on 2nd line is significant");
add("html2wt", "6. Pre-blocks should extend across lines with leading WS even when there is no wrappable content");
add("html2wt", "HTML-pre: 1. embedded newlines");
add("html2wt", "HTML-pre: 2: indented text");
add("html2wt", "HTML-pre: 3: other wikitext");
add("html2wt", "Simple definition");
add("html2wt", "Definition list with no space");
add("html2wt", "Definition list with URL link");
add("html2wt", "Definition list with bracketed URL link");
add("html2wt", "Definition list with wikilink containing colon");
add("html2wt", "Definition list with news link containing colon");
add("html2wt", "Malformed definition list with colon");
add("html2wt", "Definition lists: colon in external link text");
add("html2wt", "Definition lists: colon in HTML attribute");
add("html2wt", "Definition lists: self-closed tag");
add("html2wt", "Bug 11748: Literal closing tags");
add("html2wt", "Definition and unordered list using wiki syntax nested in unordered list using html tags.");
add("html2wt", "\nDefinition list with empty definition and following paragraph");
add("html2wt", "Nested definition lists using html syntax");
add("html2wt", "Definition Lists: No nesting: Multiple dd's");
add("html2wt", "Definition Lists: Indentation: Regular");
add("html2wt", "Definition Lists: Indentation: Missing 1st level");
add("html2wt", "Definition Lists: Indentation: Multi-level indent");
add("html2wt", "Definition Lists: Hacky use to indent tables");
add("html2wt", "Table / list interaction: indented table with lists in table contents");
add("html2wt", "Table / list interaction: lists nested in tables nested in indented lists");
add("html2wt", "Definition Lists: Nesting: Multi-level (Parsoid only)");
add("html2wt", "Definition Lists: Nesting: Test 2 (Parsoid only)");
add("html2wt", "Definition Lists: Nesting: Test 3 (Parsoid only)");
add("html2wt", "Definition Lists: Nesting: Test 4");
add("html2wt", "Definition Lists: Mixed Lists: Test 4");
add("html2wt", "Definition Lists: Mixed Lists: Test 5");
add("html2wt", "Definition Lists: Mixed Lists: Test 6");
add("html2wt", "Definition Lists: Mixed Lists: Test 9");
add("html2wt", "Definition Lists: Mixed Lists: Test 10");
add("html2wt", "Definition Lists: Mixed Lists: Test 11 (parsoid)");
add("html2wt", "Definition Lists: Weird Ones: Test 1 (parsoid)");
add("html2wt", "External links: non-bracketed");
add("html2wt", "External links: numbered");
add("html2wt", "External links: dollar sign in URL");
add("html2wt", "External links: dollar sign in URL (named)");
add("html2wt", "External links: open square bracket forbidden in URL (bug 4377)");
add("html2wt", "External links: open square bracket forbidden in URL (named) (bug 4377)");
add("html2wt", "External links: newline forbidden in text (bug 6230 regression check)");
add("html2wt", "External links: protocol-relative URL in brackets without text");
add("html2wt", "External image");
add("html2wt", "External image from https");
add("html2wt", "External image (when not allowed)");
add("html2wt", "Link to non-http image, no img tag");
add("html2wt", "External links: terminating separator");
add("html2wt", "External links: intervening separator");
add("html2wt", "External links: Clickable images");
add("html2wt", "External links: raw ampersand");
add("html2wt", "External links: encoded ampersand");
add("html2wt", "External links: encoded equals (bug 6102)");
add("html2wt", "External links: [raw ampersand]");
add("html2wt", "External links: [encoded ampersand]");
add("html2wt", "External links: [encoded equals] (bug 6102)");
add("html2wt", "External links: [IDN ignored character reference in hostname; strip it right off]");
add("html2wt", "External links: IDN ignored character reference in hostname; strip it right off");
add("html2wt", "External links: www.jpeg.org (bug 554)");
add("html2wt", "External links: URL within URL (original bug 2)");
add("html2wt", "BUG 361: URL within URL, not bracketed");
add("html2wt", "BUG 289: \">\"-token in URL-tail");
add("html2wt", "BUG 289: literal \">\"-token in URL-tail");
add("html2wt", "BUG 289: \">\"-token in bracketed URL");
add("html2wt", "BUG 289: literal \">\"-token in bracketed URL");
add("html2wt", "BUG 289: literal double quote at end of URL");
add("html2wt", "BUG 289: literal double quote in bracketed URL");
add("html2wt", "External links: multiple legal whitespace is fine, Magnus. Don't break it please. (bug 5081)");
add("html2wt", "External links: wiki links within external link (Bug 3695)");
add("html2wt", "Bracketed external links with template-generated invalid target");
add("html2wt", "Bug 2702: Mismatched <i>, <b> and <a> tags are invalid");
add("html2wt", "Bug 4781: %26 in URL");
add("html2wt", "Bug 4781, 5267: %25 in URL");
add("html2wt", "Bug 4781, 5267: %28, %29 in URL");
add("html2wt", "Bug 4781: %26 in autonumber URL");
add("html2wt", "Bug 4781, 5267: %26 in autonumber URL");
add("html2wt", "Bug 4781, 5267: %28, %29 in autonumber URL");
add("html2wt", "Bug 4781: %26 in bracketed URL");
add("html2wt", "Bug 4781, 5267: %26 in bracketed URL");
add("html2wt", "Bug 4781, 5267: %28, %29 in bracketed URL");
add("html2wt", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check)");
add("html2wt", "External link containing double-single-quotes with no space separating the url from text in italics");
add("html2wt", "External link with comments in link text");
add("html2wt", "URL-encoding in URL functions (single parameter)");
add("html2wt", "URL-encoding in URL functions (multiple parameters)");
add("html2wt", "Brackets in urls");
add("html2wt", "IPv6 urls (bug 21261)");
add("html2wt", "Non-extlinks in brackets");
add("html2wt", "Unclosed and unmatched quotes (parsoid)");
add("html2wt", "A table with caption with default-spaced attributes and a table row");
add("html2wt", "A table with captions with non-default spaced attributes and a table row");
add("html2wt", "Table td-cell syntax variations");
add("html2wt", "Simple table");
add("html2wt", "Simple table but with multiple dashes for row wikitext");
add("html2wt", "Multiplication table");
add("html2wt", "Accept \"||\" in table headings");
add("html2wt", "Accept \"||\" in indented table headings");
add("html2wt", "Accept empty attributes in td/th cells (td/th cells starting with leading ||)");
add("html2wt", "Accept \"| !\" at start of line in tables (ignore !-attribute)");
add("html2wt", "Allow +/- in 2nd and later cells in a row, in 1st cell when td-attrs are present, or in 1st cell when there is a space between \"|\" and +/- ");
add("html2wt", "Table rowspan");
add("html2wt", "Nested table");
add("html2wt", "Invalid attributes in table cell (bug 1830)");
add("html2wt", "Table security: embedded pipes (http://lists.wikimedia.org/mailman/htdig/wikitech-l/2006-April/022293.html)");
add("html2wt", "Indented table markup mixed with indented pre content (proposed in bug 6200)");
add("html2wt", "Template-generated table cell attributes and cell content");
add("html2wt", "Template-generated table cell attributes and cell content (2)");
add("html2wt", "Template-generated table cell attributes and cell content (3)");
add("html2wt", "Table with row followed by newlines and table heading");
add("html2wt", "Table with empty line following the start tag");
add("html2wt", "Table attributes with empty value");
add("html2wt", "Wikitext table with a lot of comments");
add("html2wt", "Wikitext table with double-line table cell");
add("html2wt", "Table cell with a single comment");
add("html2wt", "Wikitext table with html-syntax row (Parsoid)");
add("html2wt", "Plain link, capitalized");
add("html2wt", "Plain link, uncapitalized");
add("html2wt", "Piped link");
add("html2wt", "Piped link with comment in link text");
add("html2wt", "Broken link");
add("html2wt", "Broken link with fragment");
add("html2wt", "Special page link with fragment");
add("html2wt", "Nonexistent special page link with fragment");
add("html2wt", "Link with prefix");
add("html2wt", "Link with suffix");
add("html2wt", "Bug 43661: Piped links with identical prefixes");
add("html2wt", "Link with HTML entity in suffix / tail");
add("html2wt", "Link with multiple pipes");
add("html2wt", "Link to namespaces");
add("html2wt", "Piped link to namespace");
add("html2wt", "Link containing % (not as a hex sequence)");
add("html2wt", "Link containing % as a single hex sequence interpreted to char");
add("html2wt", "Link containing % as a double hex sequence interpreted to hex sequence");
add("html2wt", "Link containing \"#<\" and \"#>\" % as a hex sequences- these are valid section anchors\nExample for such a section: == < ==");
add("html2wt", "Link containing \"<#\" and \">#\" as a hex sequences");
add("html2wt", "Link containing an equals sign");
add("html2wt", "Link containing a tilde");
add("html2wt", "Link containing double-single-quotes '' (bug 4598)");
add("html2wt", "Link containing double-single-quotes '' in text (bug 4598 sanity check)");
add("html2wt", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check)");
add("html2wt", "Link with double quotes in title part (literal) and alternate part (interpreted)");
add("html2wt", "Broken image links with HTML captions (bug 39700)");
add("html2wt", "Plain link to URL");
add("html2wt", "Plain link to protocol-relative URL");
add("html2wt", "Plain link to page with question mark in title");
add("html2wt", "Piped link to URL");
add("html2wt", "BUG 2: [[page|http://url/]] should link to page, not http://url/");
add("html2wt", "BUG 337: Escaped self-links should be bold");
add("html2wt", "Self-link to section should not be bold");
add("html2wt", "Self-link to numeric title");
add("html2wt", "Link to numeric-equivalent title");
add("html2wt", "<nowiki> inside a link");
add("html2wt", "Non-breaking spaces in title");
add("html2wt", "Internal link with ca linktrail, surrounded by bold apostrophes (bug 27473 primary issue)");
add("html2wt", "Internal link with ca linktrail, surrounded by italic apostrophes (bug 27473 primary issue)");
add("html2wt", "Internal link with en linktrail: no apostrophes (bug 27473)");
add("html2wt", "Internal link with ca linktrail with apostrophes (bug 27473)");
add("html2wt", "Internal link with kaa linktrail with apostrophes (bug 27473)");
add("html2wt", "Internal link with is link prefix");
add("html2wt", "Internal link with is link trail and link prefix");
add("html2wt", "Parsoid-centric test: Whitespace in ext- and wiki-links should be preserved");
add("html2wt", "Inline interwiki link");
add("html2wt", "Inline interwiki link with empty title (bug 2372)");
add("html2wt", "Interwiki link encoding conversion (bug 1636)");
add("html2wt", "Interwiki link with fragment (bug 2130)");
add("html2wt", "Interlanguage link");
add("html2wt", "Double interlanguage link");
add("html2wt", "Interlanguage link, with prefix links");
add("html2wt", "Double interlanguage link, with prefix links (bug 8897)");
add("html2wt", "Parsoid-specific test: Wikilinks with &nbsp; should RT properly");
add("html2wt", "Parsoid: recognize interlanguage links without a target page");
add("html2wt", "Parsoid: recognize interwiki links without a target page");
add("html2wt", "Simple redirect to page");
add("html2wt", "Redirect to image page (1)");
add("html2wt", "Redirect to image page (2)");
add("html2wt", "Redirect to language");
add("html2wt", "Redirect to interwiki");
add("html2wt", "Non-English #REDIRECT");
add("html2wt", "<br> to <br />");
add("html2wt", "Incorrecly removing closing slashes from correctly formed XHTML");
add("html2wt", "Failing to transform badly formed HTML into correct XHTML");
add("html2wt", "Handling html with a div self-closing tag");
add("html2wt", "Handling html with a br self-closing tag");
add("html2wt", "Horizontal ruler (should it add that extra space?)");
add("html2wt", "Horizontal ruler -- eats additional dashes on the same line");
add("html2wt", "Common list");
add("html2wt", "Numbered list");
add("html2wt", "Mixed list");
add("html2wt", "Nested lists 1");
add("html2wt", "Nested lists 2");
add("html2wt", "Nested lists 3 (first element empty)");
add("html2wt", "Nested lists 4 (first element empty)");
add("html2wt", "Nested lists 6 (both elements empty)");
add("html2wt", "1. Lists with start-of-line-transparent tokens before bullets: Comments");
add("html2wt", "2. Lists with start-of-line-transparent tokens before bullets: Template close");
add("html2wt", "List items are not parsed correctly following a <pre> block (bug 785)");
add("html2wt", "List items from template");
add("html2wt", "List interrupted by empty line or heading");
add("html2wt", "Multiple list tags generated by templates");
add("html2wt", "Single-comment whitespace lines dont break lists, and neither do multi-comment whitespace lines");
add("html2wt", "Replacing whitespace with tabs still doesn't break the list (gerrit 78327)");
add("html2wt", "Parsoid: Test of whitespace serialization with Templated bullets");
add("html2wt", "Unbalanced closing block tags break a list\n(Parsoid-only since php parser generates broken html -- relies on Tidy to fix up)");
add("html2wt", "Unbalanced closing non-block tags don't break a list\n(Parsoid-only since php parser generates broken html -- relies on Tidy to fix up)");
add("html2wt", "Unclosed formatting tags that straddle lists are closed and reopened\n(Parsoid-only since php parser generates broken html -- relies on Tidy to fix up)");
add("html2wt", "List embedded in a non-block tag\n(Ugly Parsoid output -- worth fixing; Disabled for PHP parser since it relies on Tidy)");
add("html2wt", "Magic Word: {{CURRENTDAY}}");
add("html2wt", "Magic Word: {{CURRENTDAY2}}");
add("html2wt", "Magic Word: {{CURRENTDAYNAME}}");
add("html2wt", "Magic Word: {{CURRENTDOW}}");
add("html2wt", "Magic Word: {{CURRENTMONTH}}");
add("html2wt", "Magic Word: {{CURRENTMONTH1}}");
add("html2wt", "Magic Word: {{CURRENTMONTHABBREV}}");
add("html2wt", "Magic Word: {{CURRENTMONTHNAME}}");
add("html2wt", "Magic Word: {{CURRENTMONTHNAMEGEN}}");
add("html2wt", "Magic Word: {{CURRENTTIME}}");
add("html2wt", "Magic Word: {{CURRENTHOUR}}");
add("html2wt", "Magic Word: {{CURRENTWEEK}} (@bug 4594)");
add("html2wt", "Magic Word: {{CURRENTYEAR}}");
add("html2wt", "Magic Word: {{CURRENTTIMESTAMP}}");
add("html2wt", "Magic Words LOCAL (UTC)");
add("html2wt", "Magic Word: {{FULLPAGENAME}}");
add("html2wt", "Magic Word: {{FULLPAGENAMEE}}");
add("html2wt", "Magic Word: {{TALKSPACE}}");
add("html2wt", "Magic Word: {{TALKSPACE}}, same namespace");
add("html2wt", "Magic Word: {{TALKSPACE}}, main namespace");
add("html2wt", "Magic Word: {{TALKSPACEE}}");
add("html2wt", "Magic Word: {{SUBJECTSPACE}}");
add("html2wt", "Magic Word: {{SUBJECTSPACE}}, same namespace");
add("html2wt", "Magic Word: {{SUBJECTSPACE}}, main namespace");
add("html2wt", "Magic Word: {{SUBJECTSPACEE}}");
add("html2wt", "Magic Word: {{NAMESPACE}}");
add("html2wt", "Magic Word: {{NAMESPACEE}}");
add("html2wt", "Magic Word: {{NAMESPACENUMBER}}");
add("html2wt", "Magic Word: {{SUBPAGENAME}}");
add("html2wt", "Magic Word: {{SUBPAGENAMEE}}");
add("html2wt", "Magic Word: {{ROOTPAGENAME}}");
add("html2wt", "Magic Word: {{ROOTPAGENAMEE}}");
add("html2wt", "Magic Word: {{BASEPAGENAME}}");
add("html2wt", "Magic Word: {{BASEPAGENAMEE}}");
add("html2wt", "Magic Word: {{TALKPAGENAME}}");
add("html2wt", "Magic Word: {{TALKPAGENAMEE}}");
add("html2wt", "Magic Word: {{SUBJECTPAGENAME}}");
add("html2wt", "Magic Word: {{SUBJECTPAGENAMEE}}");
add("html2wt", "Magic Word: {{NUMBEROFFILES}}");
add("html2wt", "Magic Word: {{PAGENAME}}");
add("html2wt", "Magic Word: {{PAGENAME}} with metacharacters");
add("html2wt", "Magic Word: {{PAGENAME}} with metacharacters (bug 26781)");
add("html2wt", "Magic Word: {{PAGENAMEE}}");
add("html2wt", "Magic Word: {{PAGENAMEE}} with metacharacters (bug 26781)");
add("html2wt", "Magic Word: {{REVISIONID}}");
add("html2wt", "Magic Word: {{SCRIPTPATH}}");
add("html2wt", "Magic Word: {{STYLEPATH}}");
add("html2wt", "Magic Word: {{SERVER}}");
add("html2wt", "Magic Word: {{SERVERNAME}}");
add("html2wt", "Magic Word: {{SITENAME}}");
add("html2wt", "Case-sensitive magic words, when cased differently, should just be template transclusions");
add("html2wt", "Case-insensitive magic words should still work with weird casing.");
add("html2wt", "Namespace 1 {{ns:1}}");
add("html2wt", "Namespace 1 {{ns:01}}");
add("html2wt", "Namespace 0 {{ns:0}} (bug 4783)");
add("html2wt", "Namespace 0 {{ns:00}} (bug 4783)");
add("html2wt", "Namespace -1 {{ns:-1}}");
add("html2wt", "Namespace User {{ns:User}}");
add("html2wt", "Namespace User talk {{ns:User_talk}}");
add("html2wt", "Namespace User talk {{ns:uSeR tAlK}}");
add("html2wt", "Namespace File {{ns:File}}");
add("html2wt", "Namespace File {{ns:Image}}");
add("html2wt", "Namespace (lang=de) Benutzer {{ns:User}}");
add("html2wt", "Namespace (lang=de) Benutzer Diskussion {{ns:3}}");
add("html2wt", "Urlencode");
add("html2wt", "Magic links: internal link to RFC (bug 479)");
add("html2wt", "Magic links: RFC (bug 479)");
add("html2wt", "Magic links: ISBN (bug 1937)");
add("html2wt", "Magic links: PMID incorrectly converts space to underscore");
add("html2wt", "Nonexistent template");
add("html2wt", "Template with invalid target containing tags");
add("html2wt", "Template with invalid target containing unclosed tag");
add("html2wt", "Simple template");
add("html2wt", "Template with explicit namespace");
add("html2wt", "Template parameter");
add("html2wt", "Template unnamed parameter");
add("html2wt", "Template with template name as unnamed argument");
add("html2wt", "Template with template name as argument");
add("html2wt", "Template with template name as argument (2)");
add("html2wt", "Template with default value");
add("html2wt", "Template with default value (value set)");
add("html2wt", "Template redirect");
add("html2wt", "Template with argument in separate line");
add("html2wt", "Template with complex template as argument");
add("html2wt", "Template with thumb image (with link in description)");
add("html2wt", "Template with complex arguments");
add("html2wt", "BUG 553: link with two variables in a piped link");
add("html2wt", "Magic variable as template parameter");
add("html2wt", "Template parameter as link source");
add("html2wt", "Template-generated attribute string (k='v')");
add("html2wt", "Template passing argument to another template");
add("html2wt", "Template as link source");
add("html2wt", "Template infinite loop");
add("html2wt", "Template from main namespace");
add("html2wt", "BUG 529: Template with table, not included at beginning of line");
add("html2wt", "BUG 523: Template shouldn't eat newline (or add an extra one before table)");
add("html2wt", "BUG 41: Template parameters shown as broken links");
add("html2wt", "Template with targets containing wikilinks");
add("html2wt", "msgnw keyword");
add("html2wt", "int keyword");
add("html2wt", "<includeonly> and <noinclude> being included");
add("html2wt", "<onlyinclude> being included");
add("html2wt", "<onlyinclude> and <includeonly> being included");
add("html2wt", "<includeonly> and <noinclude> on a page");
add("html2wt", "Un-closed <noinclude>");
add("html2wt", "<onlyinclude> on a page");
add("html2wt", "Un-closed <onlyinclude>");
add("html2wt", "Self-closed noinclude, includeonly, onlyinclude tags");
add("html2wt", "Unbalanced includeonly and noinclude tags");
add("html2wt", "Bug 6563: Edit link generation for section shown by <includeonly>");
add("html2wt", "Bug 6563: Section extraction for section shown by <includeonly>");
add("html2wt", "Bug 6563: Edit link generation for section suppressed by <includeonly>");
add("html2wt", "Bug 6563: Section extraction for section suppressed by <includeonly>");
add("html2wt", "Un-closed <includeonly>");
add("html2wt", "0. includeonly around the entire attribute");
add("html2wt", "1. includeonly in html attr key");
add("html2wt", "2. includeonly in html attr value");
add("html2wt", "3. includeonly in part of an attr value");
add("html2wt", "Templates: Template Name/Arg clash: 1. Use of positional param");
add("html2wt", "Templates: Template Name/Arg clash: 2. Use of named param");
add("html2wt", "Templates: Template Name/Arg clash: 3. Use of named param with empty input");
add("html2wt", "Templates: 1. Simple use");
add("html2wt", "Templates: 2. Inside a block tag");
add("html2wt", "Templates: P-wrapping: 1a. Templates on consecutive lines");
add("html2wt", "Templates: P-wrapping: 1b. Templates on consecutive lines");
add("html2wt", "Templates: P-wrapping: 1c. Templates on consecutive lines");
add("html2wt", "Templates: Inline Text: 1. Multiple tmeplate uses");
add("html2wt", "Templates: Inline Text: 2. Back-to-back template uses");
add("html2wt", "Templates: Block Tags: 1. Multiple template uses");
add("html2wt", "Templates: Block Tags: 2. Back-to-back template uses");
add("html2wt", "Templates: Links: 1. Simple example");
add("html2wt", "Templates: Links: 2. Generation of link href");
add("html2wt", "Templates: Links: 3. Generation of part of a link href");
add("html2wt", "Templates: Links: 4. Multiple templates generating link href");
add("html2wt", "Templates: Links: 5. Generation of link text");
add("html2wt", "Templates: Links: 5. Nested templates (only outermost template should be marked)");
add("html2wt", "Templates: HTML Tag: 1. Generation of HTML attr. key");
add("html2wt", "Templates: HTML Tag: 2. Generation of HTML attr. value");
add("html2wt", "Templates: HTML Tag: 3. Generation of HTML attr key and value");
add("html2wt", "Templates: HTML Tag: 4. Generation of starting piece of HTML attr value");
add("html2wt", "Templates: HTML Tag: 5. Generation of middle piece of HTML attr value");
add("html2wt", "Templates: HTML Tag: 6. Generation of end piece of HTML attr value");
add("html2wt", "Templates: HTML Tag: 7. Generation of partial attribute key string");
add("html2wt", "Templates: HTML Tables: 1. Generating start of a HTML table");
add("html2wt", "Templates: HTML Tables: 2a. Generating middle of a HTML table");
add("html2wt", "Templates: HTML Tables: 2b. Generating middle of a HTML table");
add("html2wt", "Templates: HTML Tables: 3. Generating end of a HTML table");
add("html2wt", "Templates: HTML Tables: 4a. Generating a single tag of a HTML table");
add("html2wt", "Templates: HTML Tables: 4b. Generating a single tag of a HTML table");
add("html2wt", "Templates: HTML Tables: 4c. Generating a single tag of a HTML table");
add("html2wt", "Templates: HTML Tables: 4d. Generating a single tag of a HTML table");
add("html2wt", "Templates: HTML Tables: 4e. Generating a single tag of a HTML table");
add("html2wt", "Templates: HTML Tables: 4f. Generating a single tag of a HTML table");
add("html2wt", "Templates: Wiki Tables: 1a. Fostering of entire template content");
add("html2wt", "Templates: Wiki Tables: 1b. Fostering of entire template content");
add("html2wt", "Templates: Wiki Tables: 2. Fostering of partial template content");
add("html2wt", "Templates: Wiki Tables: 3. td-content via multiple templates");
add("html2wt", "Templates: Wiki Tables: 4. Templated tags, no content");
add("html2wt", "Templates: Wiki Tables: 5. Templated tags, regular td-tags");
add("html2wt", "Templates: Wiki Tables: 6. Templated tags, templated td-tags");
add("html2wt", "Templates: Lists: Multi-line list-items via templates");
add("html2wt", "Templates: Ugly nesting: 1. Quotes opened/closed across templates (echo)");
add("html2wt", "Templates: Ugly nesting: 4. Divs opened/closed across templates");
add("html2wt", "Templates: Ugly templates: 3. newline-only template parameter");
add("html2wt", "Templates: Ugly templates: 4. newline-only template parameter inconsistency");
add("html2wt", "Parser Functions: 1. Simple example");
add("html2wt", "Parser Functions: 2. Nested use (only outermost should be marked up)");
add("html2wt", "pre-save transform: subst:");
add("html2wt", "pre-save transform: normal template");
add("html2wt", "pre-save transform: nonexistent template");
add("html2wt", "pre-save transform: subst magic variables");
add("html2wt", "pre-save transform: subst: templates with parameters");
add("html2wt", "pre-save transform: nowiki in subst (bug 1188)");
add("html2wt", "pre-save transform: comment in subst (bug 1936)");
add("html2wt", "pre-save transform: unclosed tag");
add("html2wt", "pre-save transform: mixed tag case");
add("html2wt", "pre-save transform: unclosed comment in <nowiki>");
add("html2wt", "(confirming safety of fix for subst bug 1936)");
add("html2wt", "pre-save transform: <noinclude> in subst (bug 3298)");
add("html2wt", "pre-save transform: <onlyinclude> in subst (bug 3298)");
add("html2wt", "bug 22297: safesubst: works during PST");
add("html2wt", "bug 22297: safesubst: works during normal parse");
add("html2wt", "subst: does not work during normal parse");
add("html2wt", "pre-save transform: context links (\"pipe trick\")");
add("html2wt", "pre-save transform: context links (\"pipe trick\") with interwiki prefix");
add("html2wt", "pre-save transform: context links (\"pipe trick\") with parens in title");
add("html2wt", "pre-save transform: context links (\"pipe trick\") with comma in title");
add("html2wt", "pre-save transform: context links (\"pipe trick\") with parens and comma");
add("html2wt", "pre-save transform: context links (\"pipe trick\") with comma and parens");
add("html2wt", "pre-save transform: context links (\"pipe trick\") with namespace");
add("html2wt", "pre-save transform: context links (\"pipe trick\") with namespace and parens");
add("html2wt", "pre-save transform: context links (\"pipe trick\") with namespace and comma");
add("html2wt", "pre-save transform: context links (\"pipe trick\") with namespace, comma and parens");
add("html2wt", "pre-save transform: context links (\"pipe trick\") with namespace, parens and comma");
add("html2wt", "pre-save transform: context links (\"pipe trick\") with full-width parens and no space (Japanese and Chinese style, bug 30149)");
add("html2wt", "pre-save transform: context links (\"pipe trick\") with full-width parens and space (Japanese and Chinese style, bug 30149)");
add("html2wt", "pre-save transform: context links (\"pipe trick\") with parens and no space (Korean style, bug 30149)");
add("html2wt", "pre-save transform: context links (\"pipe trick\") with commas (bug 21660)");
add("html2wt", "pre-save transform: Signature expansion");
add("html2wt", "pre-save transform: Signature expansion in nowiki tags (bug 93)");
add("html2wt", "message transform: magic variables");
add("html2wt", "message transform: should not transform wiki markup");
add("html2wt", "message transform: <noinclude> in transcluded template (bug 4926)");
add("html2wt", "message transform: <onlyinclude> in transcluded template (bug 4926)");
add("html2wt", "{{#special:}} page name, known");
add("html2wt", "{{#special:}} page name with subpage, known");
add("html2wt", "{{#special:}} page name, unknown");
add("html2wt", "{{#speciale:}} page name, known");
add("html2wt", "{{#speciale:}} page name with subpage, known");
add("html2wt", "{{#speciale:}} page name, unknown");
add("html2wt", "Image with attributes from template (parsoid)");
add("html2wt", "Image with link tails (parsoid)");
add("html2wt", "Image with multiple captions -- only last one is accepted (parsoid)");
add("html2wt", "Image with width attribute at different positions (parsoid)");
add("html2wt", "Image with link parameter, wiki target (parsoid)");
add("html2wt", "Image with link parameter, wgExternalLinkTarget");
add("html2wt", "Image with link parameter, wgNoFollowLinks set to false");
add("html2wt", "Image with link parameter, wgNoFollowDomainExceptions");
add("html2wt", "Image with link parameter, wgExternalLinkTarget, unnamed parameter");
add("html2wt", "Image with link parameter (wiki target) and unnamed parameter (parsoid)");
add("html2wt", "Image with frame and link");
add("html2wt", "Image with frame and link and explicit alt");
add("html2wt", "Image with wiki markup in implicit alt");
add("html2wt", "Image with wiki markup in explicit alt");
add("html2wt", "Link to image page- image page normally doesn't exists, hence edit link\nAdd test with existing image page\n#<p><a href=\"/wiki/File:Test\" title=\"Image:Test\">Image:test</a>");
add("html2wt", "bug 18784  Link to non-existent image page with caption should use caption as link text");
add("html2wt", "Frameless image caption with a free URL");
add("html2wt", "Thumbnail image caption with a free URL");
add("html2wt", "Thumbnail image caption with a free URL and explicit alt");
add("html2wt", "SVG thumbnails with no language set");
add("html2wt", "SVG thumbnails with language de");
add("html2wt", "SVG thumbnails with invalid language code");
add("html2wt", "BUG 1887: A ISBN with a thumbnail");
add("html2wt", "BUG 1887: A RFC with a thumbnail");
add("html2wt", "BUG 1887: A mailto link with a thumbnail");
add("html2wt", "BUG 648: Frameless image caption with a link");
add("html2wt", "BUG 648: Frameless image caption with a link (suffix)");
add("html2wt", "BUG 648: Frameless image caption with an interwiki link");
add("html2wt", "BUG 648: Frameless image caption with a piped interwiki link");
add("html2wt", "Escape HTML special chars in image alt text");
add("html2wt", "BUG 499: Alt text should have &#1234;, not &amp;1234;");
add("html2wt", "Broken image caption with link");
add("html2wt", "Image caption containing another image");
add("html2wt", "Image caption containing a newline");
add("html2wt", "Parsoid: Image caption containing leading space\n(The leading space should not trigger nowiki escaping in wt2wt mode)");
add("html2wt", "Bug 3090: External links other than http: in image captions");
add("html2wt", "Custom class");
add("html2wt", "Localized image handling (1).");
add("html2wt", "Localized image handling (2).");
add("html2wt", "\"border\", \"frameless\" and \"class\" attributes on an image.");
add("html2wt", "Redirected image");
add("html2wt", "Missing image with uploads disabled");
add("html2wt", "Parsoid-specific image handling - simple image with size and middle alignment");
add("html2wt", "Parsoid-specific image handling - simple image with both sizes, a baseline alignment, and a caption");
add("html2wt", "Parsoid-specific image handling - simple image with border and size spec");
add("html2wt", "Parsoid-specific image handling - thumbnail with halign, valign, and caption");
add("html2wt", "Parsoid-specific image handling - thumbnail with specific size, halign, valign, and caption");
add("html2wt", "Parsoid-specific image handling - framed image with specific size and caption");
add("html2wt", "Parsoid-specific image handling - framed image with specific size, halign, valign, and caption");
add("html2wt", "Parsoid-specific image handling - frameless image with specific size, border, and caption");
add("html2wt", "Subpage link");
add("html2wt", "Subpage noslash link");
add("html2wt", "Disabled subpages");
add("html2wt", "BUG 561: {{/Subpage}}");
add("html2wt", "Link to category");
add("html2wt", "Simple category");
add("html2wt", "PAGESINCATEGORY invalid title fatal (r33546 fix)");
add("html2wt", "Category with different sort key");
add("html2wt", "Category with identical sort key");
add("html2wt", "Category with empty sort key");
add("html2wt", "Category with empty sort key and parentheses");
add("html2wt", "Category with link tail");
add("html2wt", "Category with template");
add("html2wt", "Category with template in sort key");
add("html2wt", "Category with template in sort key and title");
add("html2wt", "Category / paragraph interactions");
add("html2wt", "Inter-language links");
add("html2wt", "Duplicate interlanguage links (bug 24502)");
add("html2wt", "Basic section headings");
add("html2wt", "Section headings with TOC");
add("html2wt", "Handling of sections up to level 6 and beyond");
add("html2wt", "TOC regression (bug 9764)");
add("html2wt", "TOC with wgMaxTocLevel=3 (bug 6204)");
add("html2wt", "TOC with wgMaxTocLevel=3 and two level four headings (bug 6204)");
add("html2wt", "Resolving duplicate section names");
add("html2wt", "Resolving duplicate section names with differing case (bug 10721)");
add("html2wt", "Template with sections, __NOTOC__");
add("html2wt", "__NOEDITSECTION__ keyword");
add("html2wt", "Link inside a section heading");
add("html2wt", "TOC regression (bug 12077)");
add("html2wt", "BUG 1219 URL next to image (good)");
add("html2wt", "Short headings with trailing space should match behavior of Parser::doHeadings (bug 19910)");
add("html2wt", "Header with special characters (bug 25462)");
add("html2wt", "Headers with excess '=' characters\n(Are similar tests necessary beyond the 1st level?)");
add("html2wt", "HTML headers vs TOC (bug 23393)\n(__NOEDITSECTION__ for clearer output, doesn't matter here)");
add("html2wt", "BUG 1219 URL next to image (broken)");
add("html2wt", "Bug 1186 news: in the middle of text");
add("html2wt", "Namespaced link must have a title");
add("html2wt", "Namespaced link must have a title (bad fragment version)");
add("html2wt", "div with single-quoted attribute");
add("html2wt", "div with unquoted attribute");
add("html2wt", "div with illegal double attributes");
add("html2wt", "div with empty attribute value, space before equals");
add("html2wt", "div with empty attribute value, no space before equals");
add("html2wt", "HTML multiple attributes correction");
add("html2wt", "Table multiple attributes correction");
add("html2wt", "DIV IN UPPERCASE");
add("html2wt", "Pseudo-tag with URL 'name' renders as url link");
add("html2wt", "text with character entity: eacute");
add("html2wt", "Media link");
add("html2wt", "Media link with text");
add("html2wt", "Media link with nasty text\nfixme: doBlockLevels won't wrap this in a paragraph because it contains a div");
add("html2wt", "Media link to nonexistent file (bug 1702)");
add("html2wt", "Image link to nonexistent file (bug 1850 - good)");
add("html2wt", ":Image link to nonexistent file (bug 1850 - bad)");
add("html2wt", "Character reference normalization in link text (bug 1938)");
add("html2wt", "(bug 19451) Links should refer to the normalized form.");
add("html2wt", "Empty attribute crash test (bug 2067)");
add("html2wt", "Empty attribute crash test single-quotes (bug 2067)");
add("html2wt", "Attribute test: equals, then nothing");
add("html2wt", "Attribute test: unquoted value");
add("html2wt", "Attribute test: unquoted but illegal value (hash)");
add("html2wt", "Attribute test: no value");
add("html2wt", "Bug 2095: link with three closing brackets");
add("html2wt", "Bug 2095: link with pipe and three closing brackets");
add("html2wt", "Bug 2095: link with pipe and three closing brackets, version 2");
add("html2wt", "Bug 2304: HTML attribute safety (safe template; regression bug 2309)");
add("html2wt", "Bug 2304: HTML attribute safety (dangerous template; 2309)");
add("html2wt", "Bug 2304: HTML attribute safety (dangerous style template; 2309)");
add("html2wt", "Bug 2304: HTML attribute safety (safe parameter; 2309)");
add("html2wt", "Bug 2304: HTML attribute safety (unsafe parameter; 2309)");
add("html2wt", "Bug 2304: HTML attribute safety (unsafe breakout parameter; 2309)");
add("html2wt", "Bug 2304: HTML attribute safety (unsafe breakout parameter 2; 2309)");
add("html2wt", "Bug 3244: HTML attribute safety (extension; safe)");
add("html2wt", "Bug 3244: HTML attribute safety (extension; unsafe)");
add("html2wt", "MSIE CSS safety test: spurious slash");
add("html2wt", "MSIE CSS safety test: hex code");
add("html2wt", "MSIE CSS safety test: comment in url");
add("html2wt", "MSIE CSS safety test: comment in expression");
add("html2wt", "Table attribute legitimate extension");
add("html2wt", "Table attribute safety");
add("html2wt", "CSS line continuation 1");
add("html2wt", "CSS line continuation 2");
add("html2wt", "Expansion of multi-line templates in attribute values (bug 6255)");
add("html2wt", "Expansion of multi-line templates in attribute values (bug 6255 sanity check)");
add("html2wt", "Expansion of multi-line templates in attribute values (bug 6255 sanity check 2)");
add("html2wt", "Parser hook: empty input");
add("html2wt", "Parser hook: empty input using terminated empty elements");
add("html2wt", "Parser hook: empty input using terminated empty elements (space before)");
add("html2wt", "Parser hook: basic input");
add("html2wt", "Parser hook: case insensitive");
add("html2wt", "Parser hook: case insensitive, redux");
add("html2wt", "Parser hook: nested tags");
add("html2wt", "Parser hook: basic arguments");
add("html2wt", "Parser hook: argument containing a forward slash (bug 5344)");
add("html2wt", "Parser hook: empty input using terminated empty elements (bug 2374)");
add("html2wt", "Parser hook: basic arguments using terminated empty elements (bug 2374)");
add("html2wt", "Parser hook: static parser hook not inside a comment");
add("html2wt", "Parser hook: static parser hook inside a comment");
add("html2wt", "Nested template calls");
add("html2wt", "Sanitizer: Closing of open tags");
add("html2wt", "Sanitizer: Closing of open but not closed tags");
add("html2wt", "Sanitizer: Closing of closed but not open tags");
add("html2wt", "Sanitizer: Closing of closed but not open table tags");
add("html2wt", "Sanitizer: Escaping of spaces, multibyte characters, colons & other stuff in id=\"\"");
add("html2wt", "Sanitizer: Validating the contents of the id attribute (bug 4515)");
add("html2wt", "Sanitizer: Validating id attribute uniqueness (bug 4515, bug 6301)");
add("html2wt", "Sanitizer: Validating that <meta> and <link> work, but only for Microdata");
add("html2wt", "Language converter: output gets cut off unexpectedly (bug 5757)");
add("html2wt", "Self closed html pairs (bug 5487)");
add("html2wt", "Punctuation: nbsp before exclamation");
add("html2wt", "HTML bullet list, closed tags (bug 5497)");
add("html2wt", "HTML bullet list, unclosed tags (bug 5497)");
add("html2wt", "HTML ordered list, closed tags (bug 5497)");
add("html2wt", "HTML ordered list, unclosed tags (bug 5497)");
add("html2wt", "HTML nested bullet list, closed tags (bug 5497)");
add("html2wt", "HTML nested bullet list, open tags (bug 5497)");
add("html2wt", "HTML nested ordered list, closed tags (bug 5497)");
add("html2wt", "HTML nested ordered list, open tags (bug 5497)");
add("html2wt", "HTML ordered list item with parameters oddity");
add("html2wt", "bug 5918: autonumbering");
add("html2wt", "Fuzz testing: Parser13");
add("html2wt", "Fuzz testing: Parser14");
add("html2wt", "Fuzz testing: Parser14-table");
add("html2wt", "Fuzz testing: Parser16");
add("html2wt", "Fuzz testing: Parser21");
add("html2wt", "Fuzz testing: Parser22");
add("html2wt", "Fuzz testing: Parser24");
add("html2wt", "Fuzz testing: Parser25 (bug 6055)");
add("html2wt", "Fuzz testing: URL adjacent extension (with space, clean)");
add("html2wt", "Fuzz testing: URL adjacent extension (no space, dirty; nowiki)");
add("html2wt", "Fuzz testing: URL adjacent extension (no space, dirty; pre)");
add("html2wt", "Fuzz testing: image with bogus manual thumbnail");
add("html2wt", "Fuzz testing: encoded newline in generated HTML replacements (bug 6577)");
add("html2wt", "Parsing optional HTML elements (Bug 6171)");
add("html2wt", "Correct handling of <td>, <tr> (Bug 6171)");
add("html2wt", "Inline wiki vs wiki block nesting");
add("html2wt", "Inline HTML vs wiki block nesting");
add("html2wt", "Mixing markup for italics and bold");
add("html2wt", "Special page transclusion");
add("html2wt", "Special page transclusion twice (bug 5021)");
add("html2wt", "Transclusion of default MediaWiki message");
add("html2wt", "Transclusion of nonexistent MediaWiki message");
add("html2wt", "Transclusion of MediaWiki message with underscore");
add("html2wt", "Transclusion of MediaWiki message with space");
add("html2wt", "Section extraction test (section 0)");
add("html2wt", "Section extraction test (section 1)");
add("html2wt", "Section extraction test (section 2)");
add("html2wt", "Section extraction test (section 3)");
add("html2wt", "Section extraction test (section 4)");
add("html2wt", "Section extraction test (section 5)");
add("html2wt", "Section extraction test (section 6)");
add("html2wt", "Section extraction test (section 7)");
add("html2wt", "Section extraction test (section 8)");
add("html2wt", "Section extraction test (section 9)");
add("html2wt", "Section extraction test (section 10)");
add("html2wt", "Section extraction test (nonexistent section 11)");
add("html2wt", "Section extraction test with bogus heading (section 1)");
add("html2wt", "Section extraction test with bogus heading (section 2)");
add("html2wt", "Section extraction test with comment after heading (section 1)");
add("html2wt", "Section extraction test with comment after heading (section 2)");
add("html2wt", "Section extraction test with bogus <nowiki> heading (section 1)");
add("html2wt", "Section extraction test with bogus <nowiki> heading (section 2)");
add("html2wt", "Section extraction prefixed by comment (section 1)");
add("html2wt", "Section extraction prefixed by comment (section 2)");
add("html2wt", "Section extraction, mixed wiki and html (section 1)");
add("html2wt", "Section extraction, mixed wiki and html (section 2)");
add("html2wt", "Section extraction, heading surrounded by <noinclude>");
add("html2wt", "Sectiion with all-equals");
add("html2wt", "Section replacement test (section 0)");
add("html2wt", "Section replacement test (section 1)");
add("html2wt", "Section replacement test (section 2)");
add("html2wt", "Section replacement test (section 3)");
add("html2wt", "Section replacement test (section 4)");
add("html2wt", "Section replacement test (section 5)");
add("html2wt", "Section replacement test (section 6)");
add("html2wt", "Section replacement test (section 7)");
add("html2wt", "Section replacement test (section 8)");
add("html2wt", "Section replacement test (section 9)");
add("html2wt", "Section replacement test (section 10)");
add("html2wt", "Section replacement test with initial whitespace (bug 13728)");
add("html2wt", "Section extraction, heading followed by pre with 20 spaces (bug 6398)");
add("html2wt", "Section extraction, heading followed by pre with 19 spaces (bug 6398 sanity check)");
add("html2wt", "Section extraction, <pre> around bogus header (bug 10309)");
add("html2wt", "Section replacement, <pre> around bogus header (bug 10309)");
add("html2wt", "Handling of &#x0A; in URLs");
add("html2wt", "5 quotes, code coverage +1 line (parsoid)");
add("html2wt", "Special:Search page linking.");
add("html2wt", "Say the magic word");
add("html2wt", "Gallery");
add("html2wt", "Gallery (with options)");
add("html2wt", "Gallery with wikitext inside caption");
add("html2wt", "gallery (with showfilename option)");
add("html2wt", "Gallery (with namespace-less filenames)");
add("html2wt", "HTML Hex character encoding (spells the word \"JavaScript\")");
add("html2wt", "HTML Hex character encoding mixed case");
add("html2wt", "__FORCETOC__ override");
add("html2wt", "ISBN code coverage");
add("html2wt", "Double ISBN");
add("html2wt", "Bug 22905: <abbr> followed by ISBN followed by </a>");
add("html2wt", "Double RFC");
add("html2wt", "Double RFC with a wiki link");
add("html2wt", "RFC code coverage");
add("html2wt", "Centre-aligned image");
add("html2wt", "None-aligned image");
add("html2wt", "Width + Height sized image (using px) (height is ignored)");
add("html2wt", "Width-sized image (using px, no following whitespace)");
add("html2wt", "Width-sized image (using px, with following whitespace - test regression from r39467)");
add("html2wt", "Width-sized image (using px, with preceding whitespace - test regression from r39467)");
add("html2wt", "Images with the \"|\" character in the comment");
add("html2wt", "HTML with raw HTML ($wgRawHtml==true)");
add("html2wt", "Parents of subpages, one level up");
add("html2wt", "Parents of subpages, one level up, not named");
add("html2wt", "Parents of subpages, two levels up");
add("html2wt", "Parents of subpages, two levels up, without trailing slash or name.");
add("html2wt", "Parents of subpages, two levels up, with lots of extra trailing slashes.");
add("html2wt", "Transclusion of a sibling page (one level up)");
add("html2wt", "Transclusion of a child page");
add("html2wt", "Non-transclusion because of too many up levels");
add("html2wt", "Definition list code coverage");
add("html2wt", "Don't fall for the self-closing div");
add("html2wt", "MSGNW magic word");
add("html2wt", "RAW magic word");
add("html2wt", "Template caching");
add("html2wt", "Inclusion of !userCanEdit() content");
add("html2wt", "Out-of-order TOC heading levels");
add("html2wt", "ISBN with space-delimited number");
add("html2wt", "ISBN length");
add("html2wt", "ISBN with trailing year (bug 8110)");
add("html2wt", "anchorencode");
add("html2wt", "anchorencode trims spaces");
add("html2wt", "anchorencode deals with links");
add("html2wt", "anchorencode deals with templates");
add("html2wt", "anchorencode encodes like the TOC generator: (bug 18431)");
add("html2wt", "Bug 6200: blockquotes and paragraph formatting");
add("html2wt", "Bug 8293: Use of center tag ruins paragraph formatting");
add("html2wt", "Parsing of overlapping (improperly nested) inline html tags (Parsoid)");
add("html2wt", "Self-link in language variants");
add("html2wt", "Link to another existing title shouldn't be parsed as self-link even if it's a variant of this title");
add("html2wt", "Link to pages in language variants");
add("html2wt", "Multiple links to pages in language variants");
add("html2wt", "Simple template in language variants");
add("html2wt", "Template with explicit namespace in language variants");
add("html2wt", "Basic test for template parameter in language variants");
add("html2wt", "Simple category in language variants");
add("html2wt", "Don't convert blue categorylinks to another variant (bug 33210)");
add("html2wt", "Stripping -{}- tags (language variants)");
add("html2wt", "Prevent conversion with -{}- tags (language variants)");
add("html2wt", "Prevent conversion of text with -{}- tags (language variants)");
add("html2wt", "Prevent conversion of links with -{}- tags (language variants)");
add("html2wt", "-{}- tags within headlines (within html for parserConvert())");
add("html2wt", "Explicit definition of language variant alternatives");
add("html2wt", "Conversion around HTML tags");
add("html2wt", "Explicit session-wise language variant mapping (A flag and - flag)");
add("html2wt", "Explicit session-wise language variant mapping (H flag for hide)");
add("html2wt", "Adding explicit conversion rule for title (T flag)");
add("html2wt", "Testing that changing the language variant here in the tests actually works");
add("html2wt", "Recursive conversion of alt and title attrs shouldn't clear converter state");
add("html2wt", "Bug 24072: more test on conversion rule for title");
add("html2wt", "Partly disable title conversion if variant == main language code");
add("html2wt", "Partly disable title conversion if variant == main language code, more");
add("html2wt", "Raw output of variant escape tags (R flag)");
add("html2wt", "Nested using of manual convert syntax");
add("html2wt", "Proper conversion of text in external links");
add("html2wt", "Do not convert roman numbers to language variants");
add("html2wt", "Don't convert raw rule \"-{R|=&gt;}-\" to \"=>\"");
add("html2wt", "Bug 529: Uncovered bullet");
add("html2wt", "Bug 529: Uncovered bullet leaving empty list, normally removed by tidy");
add("html2wt", "Bug 529: Uncovered table already at line-start");
add("html2wt", "Bug 529: Uncovered bullet in parser function result");
add("html2wt", "Bug 5678: Double-parsed template argument");
add("html2wt", "Bug 5678: Double-parsed template invocation");
add("html2wt", "Case insensitivity of parser functions for non-ASCII characters (bug 8143)");
add("html2wt", "Morwen/13: Unclosed link followed by heading");
add("html2wt", "HHP2.1: Heuristics for headings in preprocessor parenthetical structures");
add("html2wt", "HHP2.2: Heuristics for headings in preprocessor parenthetical structures");
add("html2wt", "Paragraphs inside divs (no extra line breaks)");
add("html2wt", "Paragraphs inside divs (extra line break on close)");
add("html2wt", "Paragraphs inside divs (extra line break on open and close)");
add("html2wt", "Nesting tags, paragraphs on lines which begin with <div>");
add("html2wt", "Bug 6200: paragraphs inside blockquotes (no extra line breaks)");
add("html2wt", "Bug 6200: paragraphs inside blockquotes (extra line break on close)");
add("html2wt", "Bug 6200: paragraphs inside blockquotes (extra line break on open and close)");
add("html2wt", "Paragraphs inside blockquotes/divs (no extra line breaks)");
add("html2wt", "Paragraphs inside blockquotes/divs (extra line break on close)");
add("html2wt", "Paragraphs inside blockquotes/divs (extra line break on open and close)");
add("html2wt", "Interwiki links trounced by replaceExternalLinks after early LinkHolderArray expansion");
add("html2wt", "Free external link invading image caption");
add("html2wt", "Bug 15196: localised external link numbers");
add("html2wt", "Multibyte character in padleft");
add("html2wt", "Multibyte character in padright");
add("html2wt", "formatdate parser function");
add("html2wt", "formatdate parser function, with default format");
add("html2wt", "Spacing of numbers in formatted dates");
add("html2wt", "formatdate parser function, with default format and on a page of which the content language is always English and different from the wiki content language");
add("html2wt", "Edit comment with link");
add("html2wt", "Edit comment with link and link text");
add("html2wt", "Edit comment with link and link text with suffix");
add("html2wt", "Edit comment with section link (non-local, eg in history list)");
add("html2wt", "Edit comment with section link and text before it (non-local, eg in history list)");
add("html2wt", "Edit comment with section link (local, eg in diff view)");
add("html2wt", "Edit comment with subpage link (bug 14080)");
add("html2wt", "Edit comment with subpage link and link text (bug 14080)");
add("html2wt", "Edit comment with bogus subpage link in non-subpage NS (bug 14080)");
add("html2wt", "Edit comment with bare anchor link (local, as on diff)");
add("html2wt", "Edit comment with bare anchor link (non-local, as on history)");
add("html2wt", "Anchor starting with underscore");
add("html2wt", "Space normalisation on autocomment (bug 22784)");
add("html2wt", "percent-encoding and + signs in comments (Bug 26410)");
add("html2wt", "Bad images - basic functionality");
add("html2wt", "Bad images - bug 16039: text after bad image disappears");
add("html2wt", "Verify that displaytitle works (bug #22501) no displaytitle");
add("html2wt", "Verify that displaytitle works (bug #22501) RestrictDisplayTitle=false");
add("html2wt", "Verify that displaytitle works (bug #22501) RestrictDisplayTitle=true mismatch");
add("html2wt", "Verify that displaytitle works (bug #22501) RestrictDisplayTitle=true matching");
add("html2wt", "Verify that displaytitle works (bug #22501) AllowDisplayTitle=false");
add("html2wt", "Verify that displaytitle works (bug #22501) AllowDisplayTitle=false no DISPLAYTITLE");
add("html2wt", "Verify that displaytitle handles inline CSS styles (bug 26547) - rejected value");
add("html2wt", "Verify that displaytitle handles inline CSS styles (bug 26547) - accepted value");
add("html2wt", "preload: check <noinclude> and <includeonly>");
add("html2wt", "preload: check <onlyinclude>");
add("html2wt", "preload: can pass tags through if we want to");
add("html2wt", "preload: check that it doesn't try to do tricks");
add("html2wt", "Play a bit with r67090 and bug 3158");
add("html2wt", "HTML5 data attributes");
add("html2wt", "percent-encoding and + signs in internal links (Bug 26410)");
add("html2wt", "Special characters in embedded file links (bug 27679)");
add("html2wt", "Confirm that 'apos' named character reference doesn't make it to output (not legal in HTML 4)");
add("html2wt", "Bug 19052 U+3000 IDEOGRAPHIC SPACE should terminate free external links");
add("html2wt", "Bug 19052 U+3000 IDEOGRAPHIC SPACE should terminate bracketed external links");
add("html2wt", "Bug 19052 U+3000 IDEOGRAPHIC SPACE should terminate external images links");
add("html2wt", "Bug 31098 Template which includes system messages which includes the template");
add("html2wt", "Bug31490 Turkish: ucfirst 'blah'");
add("html2wt", "Bug31490 Turkish: ucfirst 'ix'");
add("html2wt", "Bug31490 Turkish: lcfirst 'BLAH'");
add("html2wt", "Bug31490 Turkish: ucfırst (with a dotless i)");
add("html2wt", "Bug31490 ucfırst (with a dotless i) with English language");
add("html2wt", "Bug 26375: TOC with italics");
add("html2wt", "Bug 26375: TOC with bold");
add("html2wt", "Bug 33845: Headings become cursive in TOC when they contain an image");
add("html2wt", "Bug 33845 (2): Headings become bold in TOC when they contain a blockquote");
add("html2wt", "Unclosed tags in TOC");
add("html2wt", "Multiple tags in TOC");
add("html2wt", "Tags with parameters in TOC");
add("html2wt", "span tags with directionality in TOC");
add("html2wt", "Bug 32057: Title needed when expanding <h> nodes.");
add("html2wt", "Strip marker in urlencode");
add("html2wt", "Strip marker in lc");
add("html2wt", "Strip marker in uc");
add("html2wt", "Strip marker in formatNum");
add("html2wt", "Check noCommafy in formatNum");
add("html2wt", "Strip marker in grammar");
add("html2wt", "Strip marker in padleft");
add("html2wt", "Strip marker in padright");
add("html2wt", "Strip marker in anchorencode");
add("html2wt", "nowiki inside link inside heading (bug 18295)");
add("html2wt", "new support for bdi element (bug 31817)");
add("html2wt", "Ignore pipe between table row attributes");
add("html2wt", "Gallery override link with WikiLink (bug 34852)");
add("html2wt", "Gallery override link with absolute external link (bug 34852)");
add("html2wt", "Gallery override link with malicious javascript (bug 34852)");
add("html2wt", "Gallery with invalid title as link (bug 43964)");
add("html2wt", "Language parser function");
add("html2wt", "Padleft and padright as substr");
add("html2wt", "Special parser function");
add("html2wt", "Bug 34939 - Case insensitive link parsing ([HttP://])");
add("html2wt", "Bug 34939 - Case insensitive link parsing (HttP://)");
add("html2wt", "Ref: 3. spaces in ref-names should be ignored");
add("html2wt", "Ref: 5. body should accept generic wikitext");
add("html2wt", "Ref: 6. indent-pres should not be output in ref-body");
add("html2wt", "Ref: 7. No p-wrapping in ref-body");
add("html2wt", "Ref: 8. transclusion wikitext has lower precedence");
add("html2wt", "Ref: 9. unclosed comments should not leak out of ref-body");
add("html2wt", "Ref: 10. Unclosed HTML tags should not leak out of ref-body");
add("html2wt", "References: 2. references tag with group only outputs references from that group");
add("html2wt", "References: 4. only referenced group should be cleared after processing references");
add("html2wt", "References: 5. ref tags in references should be processed while ignoring all other content");
add("html2wt", "Lists: 1. Nested inside html");
add("html2wt", "Lists: 2. Inside definition lists");
add("html2wt", "Lists: 3. Only bullets at start of text should be escaped");
add("html2wt", "Lists: 4. No escapes needed");
add("html2wt", "Lists: 5. No unnecessary escapes");
add("html2wt", "Tables: 1b. No escaping needed");
add("html2wt", "Tables: 1c. No escaping needed");
add("html2wt", "Tables: 1d. No escaping needed");
add("html2wt", "Tables: 4d. No escaping needed");
add("html2wt", "Links 2. WikiLinks: Escapes needed");
add("html2wt", "1. Leading whitespace in SOL context should be escaped");
add("html2wt", "HTML tag with 'unnecessary' entity encoding in attributes");
add("html2wt", "HTML tag with broken attribute value quoting");
add("html2wt", "Parsoid-only: HTML tag with broken attribute value quoting");
add("html2wt", "Table with broken attribute value quoting");
add("html2wt", "Table with broken attribute value quoting on consecutive lines");
add("html2wt", "Parsoid-only: Table with broken attribute value quoting on consecutive lines");
add("html2wt", "Parsoid-only: Don't wrap broken template tags in <nowiki> on wt2wt (Bug 42353)");
add("html2wt", "Parsoid-only: Don't wrap broken template tags in <nowiki> on wt2wt (Bug 42353)");
add("html2wt", "Accept empty td cell attribute");
add("html2wt", "Non-empty attributes in th-cells");
add("html2wt", "Accept empty attributes in th-cells");
add("html2wt", "Empty table rows go away");
add("html2wt", "RT-ed inter-element separators should be valid separators");
add("html2wt", "Trailing newlines in a deep dom-subtree that ends a wikitext line should be migrated out\n(Parsoid-only since PHP parser relies on Tidy for correct output)");
add("html2wt", "Empty TD followed by TD with tpl-generated attribute");
add("html2wt", "Indented table with an empty td");
add("html2wt", "Empty TR followed by a template-generated TR\n(Parsoid-specific since PHP parser doesn't handle this mixed tbl-wikitext)");
add("html2wt", "Empty TR followed by mixed-ws-comment line should RT correctly");
add("html2wt", "Multi-line image caption generated by templates with/without trailing newlines");
add("html2wt", "Improperly nested inline or quotes tags with whitespace in between");


// Blacklist for selser
add("selser", "Paragraphs with extra newline spacing [[2],0,1,0,2,0,[3],0,3,[3]]");
add("selser", "Paragraphs with newline spacing with comment lines in between [4,4,[4,3,0],0,0,2,0,4,2,3,[3,4,3,3,3,4,3],3,0,2,0,0,4,3,4,0,2,3,0,0,0,2,4,3,4,0,[2],2,0,0,[0,2],0,4,3,4,0,2,4,1]");
add("selser", "Paragraphs with newline spacing with comment lines in between [4,3,3,0,3,2,[0,4,0,0],0,0,0,[3,0,2,0,0,0,0],2,2,0,4,0,4,0,[2],0,2,0,[3],0,0,0,2,0,0,0,0,3,2,0,2,2,3,2,2,2,1,3,0]");
add("selser", "Paragraphs with newline spacing with comment lines in between [1,2,3,0,0,2,[3,3,0,0],2,0,0,[4,0,4,0,0,4,3],4,0,3,1,3,4,0,[3],0,0,2,2,3,0,0,[2],0,3,0,[3],2,0,0,2,0,0,4,3,0,4,2,0]");
add("selser", "Paragraphs with newline spacing with comment lines in between [2,0,[2,0,0],0,4,3,1,0,2,0,3,2,4,4,4,2,3,4,0,2,3,4,0,0,0,0,0,3,1,0,4,2,2,2,[0,3],0,4,0,4,0,4,2,0]");
add("selser", "Paragraphs with newline spacing with comment lines in between [0,0,2,0,0,3,0,0,4,0,[4,0,2,0,0,0,3],0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,[2],0,2,0,3,0,0,4,2,3,3,2,0,4,2,0,2]");
add("selser", "Paragraphs with newline spacing with comment lines in between [0,0,[2,2,3],0,3,3,0,0,2,4,[0,0,3,2,2,0,2],2,3,4,1,4,0,0,[3],0,2,4,2,2,4,4,0,0,0,0,2,0,2,2,1,3,1,3,4,2,2,0,0]");
add("selser", "Paragraphs with newline spacing with comment lines in between [0,0,[3,0,2],0,0,0,[0,0,3,2],3,0,3,3,0,3,3,3,2,3,0,4,0,0,3,0,3,0,2,4,0,0,0,[3],0,3,3,2,3,0,0,[3],0,0,0,3]");
add("selser", "Paragraphs with newline spacing with comment lines in between [0,3,3,2,4,0,3,2,4,3,[0,3,4,0,0,2,0],4,0,0,1,0,0,2,2,3,0,3,0,0,3,0,4,3,2,2,4,4,4,0,3,2,0,0,4,0,0,0,0]");
add("selser", "Paragraphs with newline spacing with non-empty white-space lines in between [0,3,[4],3,0,3,0,3,2,0,2,3,0]");
add("selser", "Paragraphs with newline spacing with non-empty white-space lines in between [0,2,3,0,[3],0,0,0,4,0,[0,4],4,4]");
add("selser", "Paragraphs with newline spacing with non-empty white-space lines in between [3,2,4,4,0,0,0,4,[4],0,2,3,2]");
add("selser", "Paragraphs with newline spacing with non-empty mixed comment and white-space lines in between [3,2,[0,0,3],0,0,0,1,0,3,0,2,0,0,0,3,0,3,4,2,3,[2],0,0,4,2,0,2,3,0]");
add("selser", "Paragraphs with newline spacing with non-empty mixed comment and white-space lines in between [4,3,[4,2,4],3,3,3,[4,0,0,4],2,0,3,1,0,0,0,3,0,[2],0,0,3,3,0,0,0,3,3,[0,4],0,3]");
add("selser", "Paragraphs with newline spacing with non-empty mixed comment and white-space lines in between [0,3,4,3,0,0,[4,0,0,3],0,2,0,0,0,3,3,4,2,4,4,2,3,4,0,0,2,0,0,0,0,2]");
add("selser", "Paragraphs with newline spacing with non-empty mixed comment and white-space lines in between [0,0,[2,0,3],4,0,4,2,3,0,3,[2],0,0,3,0,0,0,3,0,3,0,0,3,0,3,0,2,3,0]");
add("selser", "Paragraphs with newline spacing with non-empty mixed comment and white-space lines in between [0,0,2,0,0,3,4,0,0,0,1,3,0,0,3,3,[4],0,2,2,0,2,2,0,0,4,2,3,4]");
add("selser", "Extra newlines: More paragraphs with indented comment [1,0,4,0,2]");
add("selser", "Extra newlines: More paragraphs with indented comment [[2],3,4,2,2]");
add("selser", "Extra newlines: More paragraphs with indented comment [0,3,0,4,2]");
add("selser", "Italics and possessives (1) [1]");
add("selser", "Italics and possessives (1) [2]");
add("selser", "Italics and possessives (1) [[4,[[4],0],0]]");
add("selser", "Italics and possessives (1) [[2,2,3]]");
add("selser", "Italics and possessives (1) [[0,2,4]]");
add("selser", "Italics and possessives (1) [[2,[[3],0],0]]");
add("selser", "Italics and possessives (1) [[3,0,0]]");
add("selser", "Italics and possessives (2) [[2,0,[4],0]]");
add("selser", "Italics and possessives (2) [1]");
add("selser", "Italics and possessives (2) [[2,3,0,0]]");
add("selser", "Italics and possessives (2) [[[[4]],4,0,3]]");
add("selser", "Italics and possessives (2) [[[[4]],0,0,0]]");
add("selser", "Italics and possessives (2) [2]");
add("selser", "Italics and possessives (2) [[4,0,[2],3]]");
add("selser", "Italics and possessives (2) [[1,4,[2],0]]");
add("selser", "Italics and possessives (2) [[0,0,[3],0]]");
add("selser", "Italics and possessives (2) [[[[2]],3,2,0]]");
add("selser", "Italics and possessives (2) [[4,0,0,2]]");
add("selser", "Italics and possessives (2) [[2,4,[3],4]]");
add("selser", "Italics and possessives (3) [[2,[3],0,0,4,3,3,0,4]]");
add("selser", "Italics and possessives (3) [[0,[2],0,2,0,2,2,2,2]]");
add("selser", "Italics and possessives (3) [1]");
add("selser", "Italics and possessives (3) [[0,[4],3,4,4,[2,[2]],3,[4],0]]");
add("selser", "Italics and possessives (3) [[3,0,0,1,0,2,0,0,0]]");
add("selser", "Italics and possessives (3) [2]");
add("selser", "Italics and possessives (3) [[0,2,2,2,0,3,3,4,0]]");
add("selser", "Italics and possessives (3) [[0,2,0,[3],4,[4,1],0,0,0]]");
add("selser", "Italics and possessives (3) [[0,2,0,1,3,2,0,2,0]]");
add("selser", "Italics and possessives (3) [[0,0,0,[3],4,[0,1],3,4,3]]");
add("selser", "Italics and possessives (3) [[2,[4],0,3,0,[0,1],0,[3],2]]");
add("selser", "Italics and possessives (3) [[0,2,0,0,2,3,3,0,0]]");
add("selser", "Italics and possessives (3) [[0,[3],0,1,3,1,0,2,0]]");
add("selser", "Italics and possessives (3) [[0,0,0,1,3,4,0,0,0]]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,3) [1]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,3) [[[2]]]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,3) [2]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,3) [[2]]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,3) [[[4]]]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,3) [[[3]]]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,4) [[[4]]]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,4) [[[2]]]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,4) [1]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,4) [[2]]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,4) [2]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,4) [[[3]]]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,5) (parsoid) [1]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,5) (parsoid) [[[4],0]]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,5) (parsoid) [[4,0]]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,5) (parsoid) [[3,0]]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,5) (parsoid) [2]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,5) (parsoid) [[[2],0]]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,5) (parsoid) [[1,2]]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,5) (parsoid) [[1,0]]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,5) (parsoid) [[0,2]]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,5) (parsoid) [[[3],2]]");
add("selser", "Italics and bold: 2-quote opening sequence: (2,5) (parsoid) [[2,2]]");
add("selser", "Italics and bold: 3-quote opening sequence: (3,4) [[2]]");
add("selser", "Italics and bold: 3-quote opening sequence: (3,4) [2]");
add("selser", "Italics and bold: 3-quote opening sequence: (3,4) [[[4]]]");
add("selser", "Italics and bold: 3-quote opening sequence: (3,4) [1]");
add("selser", "Italics and bold: 3-quote opening sequence: (3,4) [[[3]]]");
add("selser", "Italics and bold: 3-quote opening sequence: (3,4) [[[2]]]");
add("selser", "Italics and bold: 3-quote opening sequence: (3,5) (parsoid) [1]");
add("selser", "Italics and bold: 3-quote opening sequence: (3,5) (parsoid) [2]");
add("selser", "Italics and bold: 3-quote opening sequence: (3,5) (parsoid) [[1,0]]");
add("selser", "Italics and bold: 3-quote opening sequence: (3,5) (parsoid) [[4,2]]");
add("selser", "Italics and bold: 3-quote opening sequence: (3,5) (parsoid) [[1,2]]");
add("selser", "Italics and bold: 3-quote opening sequence: (3,5) (parsoid) [[[4],0]]");
add("selser", "Italics and bold: 3-quote opening sequence: (3,5) (parsoid) [[[3],0]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,2) [2]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,2) [[0,[4]]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,2) [[0,[2]]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,2) [[2,0]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,2) [[4,[3]]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,2) [[2,[4]]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,2) [[4,0]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,4) [2]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,4) [[2,2]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,4) [[0,[4]]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,4) [[2,[2]]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,4) [[2,0]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,4) [1]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,4) [[4,[3]]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,4) [[0,2]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,4) [[3,2]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,4) [[3,[2]]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,4) [[0,[3]]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,4) [[3,0]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,4) [[4,0]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,5) (parsoid) [[0,3,0]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,5) (parsoid) [[4,0,0]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,5) (parsoid) [2]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,5) (parsoid) [[0,[4],0]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,5) (parsoid) [[0,4,0]]");
add("selser", "Italics and bold: 4-quote opening sequence: (4,5) (parsoid) [[0,[3],0]]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,2) [1]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,2) [2]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,2) [[[[3]]]]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,2) [[[[4]]]]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,2) [[[[2]]]]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,2) [[2]]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,3) [[[[2]]]]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,3) [1]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,3) [[[[3]]]]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,3) [2]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,3) [[[[4]]]]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,3) [[2]]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,4) [2]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,4) [[2]]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,4) [1]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,4) [[[[3]]]]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,4) [[[[2]]]]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,4) [[1]]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,4) [[[2]]]");
add("selser", "Italics and bold: 5-quote opening sequence: (5,4) [[[[4]]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,2) [[2]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,2) [[1]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,2) [[[2,0]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,2) [[[2,2]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,2) [[[0,[3]]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,2) [1]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,2) [2]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,2) [[[2,[4]]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,2) [[[3,2]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,2) [[[0,[2]]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,2) [[[3,[2]]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,2) [[[0,2]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,3) [1]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,3) [[[3,0]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,3) [[2]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,3) [2]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,3) [[[0,[4]]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,3) [[[3,[4]]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,3) [[[4,[4]]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,4) [[[4,2]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,4) [[2]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,4) [2]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,4) [[[2,0]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,4) [1]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,4) [[[3,[2]]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,4) [[[4,0]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,4) [[[0,[3]]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,4) [[1]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,4) [[[2,2]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,4) [[[4,[3]]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,4) [[[3,0]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,4) [[[4,[2]]]]");
add("selser", "Italics and bold: multiple quote sequences: (2,4,4) [[[0,2]]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,2) (parsoid) [1]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,2) (parsoid) [[4,0,0]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,2) (parsoid) [[[2],0,1]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,2) (parsoid) [[3,0,0]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,2) (parsoid) [[[3],0,0]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,2) (parsoid) [[[4],0,0]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,2) (parsoid) [[[4],3,0]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,2) (parsoid) [2]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,2) (parsoid) [[0,2,0]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,2) (parsoid) [[0,0,1]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,2) (parsoid) [[2,2,0]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,2) (parsoid) [[1,3,2]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,3) (parsoid) [[[3],3,4]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,3) (parsoid) [1]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,3) (parsoid) [[4,0,0]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,3) (parsoid) [[[2],3,0]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,3) (parsoid) [[0,3,0]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,3) (parsoid) [[0,2,4]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,3) (parsoid) [2]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,3) (parsoid) [[1,0,0]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,3) (parsoid) [[0,3,4]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,3) (parsoid) [[[4],4,3]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,3) (parsoid) [[2,2,2]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,3) (parsoid) [[2,3,0]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,3) (parsoid) [[[2],4,1]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,3) (parsoid) [[0,2,1]]");
add("selser", "Italics and bold: multiple quote sequences: (3,4,3) (parsoid) [[2,3,1]]");
add("selser", "Italics and bold: other quote tests: (3,2,3,2) [1]");
add("selser", "Italics and bold: other quote tests: (3,2,3,2) [[[0,2],1]]");
add("selser", "Italics and bold: other quote tests: (3,2,3,2) [[1,[3]]]");
add("selser", "Italics and bold: other quote tests: (3,2,3,2) [[[2,3],[3]]]");
add("selser", "Italics and bold: other quote tests: (3,2,3,2) [[[0,[2]],[4]]]");
add("selser", "Italics and bold: other quote tests: (3,2,3,2) [[[2,0],[4]]]");
add("selser", "Italics and bold: other quote tests: (3,2,3,2) [[[2,[2]],1]]");
add("selser", "Italics and bold: other quote tests: (3,2,3,2) [[[4,0],[4]]]");
add("selser", "Italics and bold: other quote tests: (3,2,3,2) [[3,0]]");
add("selser", "Italics and bold: other quote tests: (3,2,3,2) [[[4,3],0]]");
add("selser", "Italics and bold: other quote tests: (3,2,3,2) [[2,[2]]]");
add("selser", "Italics and bold: other quote tests: (3,2,3,2) [[[0,[2]],3]]");
add("selser", "Italics and bold: other quote tests: (3,2,3,2) [[2,[3]]]");
add("selser", "Italics and bold: other quote tests: (3,2,3,2) [2]");
add("selser", "Italics and bold: other quote tests: (3,2,3,2) [[4,0]]");
add("selser", "Italics and bold: other quote tests: (3,2,3,2) [[[3,0],2]]");
add("selser", "Italics and bold: other quote tests: (3,2,3,2) [[1,2]]");
add("selser", "Italicized possessive [1]");
add("selser", "Italicized possessive [2]");
add("selser", "Italicized possessive [[4,2,0]]");
add("selser", "Italicized possessive [[4,0,0]]");
add("selser", "Italicized possessive [[0,2,4]]");
add("selser", "Italicized possessive [[2,2,3]]");
add("selser", "Italicized possessive [[3,2,0]]");
add("selser", "Italicized possessive [[3,[0,2],0]]");
add("selser", "Parsoid only: Quote balancing context should be restricted to td/th cells on the same wikitext line\n(Requires tidy for PHP parser output to be fixed up) [1]");
add("selser", "Parsoid only: Quote balancing context should be restricted to td/th cells on the same wikitext line\n(Requires tidy for PHP parser output to be fixed up) [[4,[[4,0,2,[1],0],4]]]");
add("selser", "Parsoid only: Quote balancing context should be restricted to td/th cells on the same wikitext line\n(Requires tidy for PHP parser output to be fixed up) [[0,[[[4],2,2,[1],3],3]]]");
add("selser", "Parsoid only: Quote balancing context should be restricted to td/th cells on the same wikitext line\n(Requires tidy for PHP parser output to be fixed up) [[0,[[0,[3],0,1,0],0]]]");
add("selser", "Parsoid only: Quote balancing context should be restricted to td/th cells on the same wikitext line\n(Requires tidy for PHP parser output to be fixed up) [[0,[[[2],2,0,3,4],3]]]");
add("selser", "Parsoid only: Quote balancing context should be restricted to td/th cells on the same wikitext line\n(Requires tidy for PHP parser output to be fixed up) [2]");
add("selser", "Parsoid only: Quote balancing context should be restricted to td/th cells on the same wikitext line\n(Requires tidy for PHP parser output to be fixed up) [[0,[[4,2,3,0,2],0]]]");
add("selser", "Parsoid only: Quote balancing context should be restricted to td/th cells on the same wikitext line\n(Requires tidy for PHP parser output to be fixed up) [[0,[[1,2,0,1,[[2]]],0]]]");
add("selser", "Parsoid only: Quote balancing context should be restricted to td/th cells on the same wikitext line\n(Requires tidy for PHP parser output to be fixed up) [[0,[1,4]]]");
add("selser", "Parsoid only: Quote balancing context should be restricted to td/th cells on the same wikitext line\n(Requires tidy for PHP parser output to be fixed up) [[3,[2,4]]]");
add("selser", "Parsoid only: Quote balancing context should be restricted to td/th cells on the same wikitext line\n(Requires tidy for PHP parser output to be fixed up) [[4,1]]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [[4],0,0,0,2,0,[4],0,[2],2,0]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [4,0,0,2,[3],2,0,0,0,0,0]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [4,0,4,0,2,2,[3],0,1,0,[4]]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [0,3,4,0,0,0,[3],0,1,3,1]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [1,0,[4],4,[3],4,0,4,0,4,0]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [[3],3,[3],3,4,3,4,4,4,2,3]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [0,0,[3],0,0,4,1,0,3,0,4]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [0,0,4,0,0,0,1,0,0,0,[3]]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [3,0,[2],4,1,2,0,3,0,3,[4]]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [[4],0,0,0,[2],0,[2],0,0,4,1]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [4,2,3,0,1,2,2,3,[2],3,2]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [1,0,3,2,3,4,[4],0,2,3,[4]]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [0,2,0,0,[3],2,1,0,1,0,3]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [2,0,[3],4,[4],4,[2],4,4,0,2]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [3,0,2,0,1,2,3,3,0,0,[4]]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [0,4,4,4,1,2,3,0,0,4,1]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [[3],0,2,0,3,0,[4],0,[4],2,2]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [[4],0,[2],2,3,3,1,0,0,0,4]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [0,2,3,0,[3],2,2,0,0,2,1]");
add("selser", "Non-word characters don't terminate tag names (bug 17663, 40670, 52022) [[2],3,3,0,4,2,0,3,0,0,2]");
add("selser", "Comment semantics: unclosed comment at end [3]");
add("selser", "Comment semantics: unclosed comment at end [4]");
add("selser", "Comment semantics: unclosed comment at end [2]");
add("selser", "Tabs don't trigger preformatted text [4,[3]]");
add("selser", "Tabs don't trigger preformatted text [3,2]");
add("selser", "Tabs don't trigger preformatted text [4,2]");
add("selser", "Tabs don't trigger preformatted text [2,[2]]");
add("selser", "Tabs don't trigger preformatted text [0,[3]]");
add("selser", "Tabs don't trigger preformatted text [3,0]");
add("selser", "Tabs don't trigger preformatted text [0,2]");
add("selser", "Tabs don't trigger preformatted text [0,[2]]");
add("selser", "Tabs don't trigger preformatted text [3,[3]]");
add("selser", "Tabs don't trigger preformatted text [2,0]");
add("selser", "Tabs don't trigger preformatted text [2,2]");
add("selser", "Tabs don't trigger preformatted text [4,0]");
add("selser", "<nowiki> inside <pre> (bug 13238) [4,2,2,0,0]");
add("selser", "<nowiki> inside <pre> (bug 13238) [0,0,4,0,[[4],0,2,4]]");
add("selser", "<nowiki> inside <pre> (bug 13238) [3,0,3,3,2]");
add("selser", "<nowiki> inside <pre> (bug 13238) [2,0,4,0,[[2],0,2,4]]");
add("selser", "<nowiki> inside <pre> (bug 13238) [[3],4,[2,4,0],3,[[2],4,3,4]]");
add("selser", "<nowiki> inside <pre> (bug 13238) [0,0,3,0,[[2],2,0,0]]");
add("selser", "<nowiki> inside <pre> (bug 13238) [0,3,3,0,2]");
add("selser", "<nowiki> inside <pre> (bug 13238) [4,0,[4,0,0],0,1]");
add("selser", "<nowiki> inside <pre> (bug 13238) [4,0,[2,2,4],0,[[3],3,2,0]]");
add("selser", "<nowiki> inside <pre> (bug 13238) [[4],4,3,3,[0,3,0,0]]");
add("selser", "<nowiki> inside <pre> (bug 13238) [2,2,[2,0,3],0,[0,3,0,0]]");
add("selser", "<nowiki> and <pre> preference (first one wins) [3,0,2,0,1,2]");
add("selser", "<nowiki> and <pre> preference (first one wins) [[4],0,3,0,0,0]");
add("selser", "<nowiki> and <pre> preference (first one wins) [3,4,3,0,2,0]");
add("selser", "<nowiki> and <pre> preference (first one wins) [[2],0,1,0,2,4]");
add("selser", "<nowiki> and <pre> preference (first one wins) [[4],0,1,3,1,0]");
add("selser", "<nowiki> and <pre> preference (first one wins) [4,0,2,0,[0,4],4]");
add("selser", "<nowiki> and <pre> preference (first one wins) [[2],2,4,2,[[4],0],0]");
add("selser", "<nowiki> and <pre> preference (first one wins) [0,0,[2,2],0,2,0]");
add("selser", "<nowiki> and <pre> preference (first one wins) [2,4,[2,0],4,[[3],0],0]");
add("selser", "2a. Indent-Pre and tables [4,[0,[[3,0,3,3,[4],2],0]]]");
add("selser", "2c. Indent-Pre and tables (bug 42252) [[0,0,3,2]]");
add("selser", "4. Multiple spaces at start-of-line [2,0,0,2]");
add("selser", "4. Multiple spaces at start-of-line [2,2,0,2]");
add("selser", "4. Multiple spaces at start-of-line [0,3,0,2]");
add("selser", "5. White-space in indent-pre\nNOTE: the white-space char on 2nd line is significant [0,2]");
add("selser", "5. White-space in indent-pre\nNOTE: the white-space char on 2nd line is significant [0,[4,0,3]]");
add("selser", "5. White-space in indent-pre\nNOTE: the white-space char on 2nd line is significant [4,1]");
add("selser", "5. White-space in indent-pre\nNOTE: the white-space char on 2nd line is significant [2,[0,0,2]]");
add("selser", "5. White-space in indent-pre\nNOTE: the white-space char on 2nd line is significant [3,[3,0,0]]");
add("selser", "5. White-space in indent-pre\nNOTE: the white-space char on 2nd line is significant [0,[2,0,2]]");
add("selser", "5. White-space in indent-pre\nNOTE: the white-space char on 2nd line is significant [0,[2,0,0]]");
add("selser", "5. White-space in indent-pre\nNOTE: the white-space char on 2nd line is significant [0,[4,0,2]]");
add("selser", "5. White-space in indent-pre\nNOTE: the white-space char on 2nd line is significant [3,2]");
add("selser", "6. Pre-blocks should extend across lines with leading WS even when there is no wrappable content [0,[0,0,3],0,1,2,1]");
add("selser", "6. Pre-blocks should extend across lines with leading WS even when there is no wrappable content [0,2,0,1,0,[4]]");
add("selser", "6. Pre-blocks should extend across lines with leading WS even when there is no wrappable content [0,[2,0,4],0,4,3,[4]]");
add("selser", "6. Pre-blocks should extend across lines with leading WS even when there is no wrappable content [2,2,0,4,3,0]");
add("selser", "6. Pre-blocks should extend across lines with leading WS even when there is no wrappable content [0,[4,4,0],2,4,0,2]");
add("selser", "6. Pre-blocks should extend across lines with leading WS even when there is no wrappable content [0,[0,2,0],4,0,2,4]");
add("selser", "6. Pre-blocks should extend across lines with leading WS even when there is no wrappable content [3,[2,0,0],3,3,4,2]");
add("selser", "6. Pre-blocks should extend across lines with leading WS even when there is no wrappable content [2,[2,3,3],0,[4],0,[2]]");
add("selser", "6. Pre-blocks should extend across lines with leading WS even when there is no wrappable content [0,[0,0,2],0,0,0,[2]]");
add("selser", "6. Pre-blocks should extend across lines with leading WS even when there is no wrappable content [2,[0,4,0],2,[2],0,2]");
add("selser", "6. Pre-blocks should extend across lines with leading WS even when there is no wrappable content [0,2,0,[4],0,[2]]");
add("selser", "6. Pre-blocks should extend across lines with leading WS even when there is no wrappable content [4,2,3,1,3,2]");
add("selser", "6. Pre-blocks should extend across lines with leading WS even when there is no wrappable content [0,0,0,[4],0,2]");
add("selser", "HTML-pre: 1. embedded newlines [0,0,0,0,2,4,[4]]");
add("selser", "HTML-pre: 1. embedded newlines [0,2,[4],0,[4],3,2]");
add("selser", "HTML-pre: 1. embedded newlines [1,0,[3],2,0,4,0]");
add("selser", "HTML-pre: 1. embedded newlines [3,4,0,2,[2],2,0]");
add("selser", "HTML-pre: 1. embedded newlines [3,3,[4],0,2,0,0]");
add("selser", "HTML-pre: 1. embedded newlines [3,0,[4],0,0,4,1]");
add("selser", "HTML-pre: 1. embedded newlines [[3],0,4,4,0,3,0]");
add("selser", "HTML-pre: 1. embedded newlines [1,3,[4],0,0,4,0]");
add("selser", "HTML-pre: 1. embedded newlines [3,3,2,3,0,0,4]");
add("selser", "HTML-pre: 1. embedded newlines [0,0,0,0,0,3,0]");
add("selser", "HTML-pre: 1. embedded newlines [0,0,[4],0,[2],4,[3]]");
add("selser", "HTML-pre: 1. embedded newlines [[3],2,0,3,1,0,[2]]");
add("selser", "HTML-pre: 1. embedded newlines [2,0,3,0,[4],0,0]");
add("selser", "HTML-pre: 1. embedded newlines [3,0,[2],0,[4],0,1]");
add("selser", "HTML-pre: 1. embedded newlines [[4],2,0,2,2,4,0]");
add("selser", "HTML-pre: 1. embedded newlines [0,0,3,0,[2],4,[2]]");
add("selser", "HTML-pre: 1. embedded newlines [0,4,0,2,0,0,1]");
add("selser", "HTML-pre: 1. embedded newlines [0,0,[2],3,0,4,4]");
add("selser", "HTML-pre: 1. embedded newlines [0,3,[4],3,0,3,[2]]");
add("selser", "Simple definition [[[3,2],3]]");
add("selser", "Definition list with URL link [[[4,2,2],4]]");
add("selser", "Definition list with URL link [[1,0]]");
add("selser", "Definition list with URL link [[1,[3]]]");
add("selser", "Definition lists: self-closed tag [2]");
add("selser", "Definition lists: self-closed tag [1]");
add("selser", "Definition lists: self-closed tag [[[4,2,4,0],[2]]]");
add("selser", "Definition lists: self-closed tag [[[4,0,2,0],4]]");
add("selser", "Definition lists: self-closed tag [[[2,2,0,3],[3]]]");
add("selser", "Definition lists: self-closed tag [[[0,0,0,[3]],0]]");
add("selser", "Definition lists: self-closed tag [[[0,1,4,[2]],2]]");
add("selser", "Definition lists: self-closed tag [[[0,0,0,1],0]]");
add("selser", "Definition lists: self-closed tag [[[3,0,0,1],2]]");
add("selser", "Definition lists: self-closed tag [[[2,1,3,0],1]]");
add("selser", "Definition lists: self-closed tag [[2,3]]");
add("selser", "Definition lists: self-closed tag [[[0,0,2,[4]],3]]");
add("selser", "Definition lists: self-closed tag [[1,0]]");
add("selser", "Definition Lists: Indentation: Missing 1st level [[[2]]]");
add("selser", "Definition Lists: Indentation: Missing 1st level [[1]]");
add("selser", "Definition Lists: Indentation: Missing 1st level [[[1]]]");
add("selser", "Definition Lists: Indentation: Missing 1st level [[[[2]]]]");
add("selser", "Definition Lists: Indentation: Multi-level indent [[1]]");
add("selser", "Definition Lists: Indentation: Multi-level indent [[[[1]]]]");
add("selser", "Definition Lists: Indentation: Multi-level indent [[[[2]]]]");
add("selser", "Definition Lists: Indentation: Multi-level indent [[[1]]]");
add("selser", "Definition Lists: Indentation: Multi-level indent [[[2]]]");
add("selser", "Definition Lists: Indentation: Multi-level indent [[[[[2]]]]]");
add("selser", "Definition Lists: Hacky use to indent tables [[1],4,[2]]");
add("selser", "Definition Lists: Hacky use to indent tables [[[1]],0,[2]]");
add("selser", "Definition Lists: Hacky use to indent tables [[[[2]]],0,0]");
add("selser", "Definition Lists: Hacky use to indent tables [[1],3,0]");
add("selser", "Table / list interaction: indented table with lists in table contents [[[[2,[[3,[2,2]],2,2,0]]]]]");
add("selser", "Definition Lists: Nesting: Multi-level (Parsoid only) [[[3,2],[3],0,1]]");
add("selser", "Definition Lists: Nesting: Multi-level (Parsoid only) [[2,2,0,1]]");
add("selser", "Definition Lists: Nesting: Multi-level (Parsoid only) [[2,[4],2,1]]");
add("selser", "Definition Lists: Nesting: Multi-level (Parsoid only) [[[4,1],[4],0,[2]]]");
add("selser", "Definition Lists: Nesting: Test 2 (Parsoid only) [[[4],0,[2]]]");
add("selser", "Definition Lists: Nesting: Test 2 (Parsoid only) [[1,2,[[2]]]]");
add("selser", "Definition Lists: Nesting: Test 3 (Parsoid only) [[[[0,4,3]]]]");
add("selser", "Definition Lists: Nesting: Test 3 (Parsoid only) [[1]]");
add("selser", "Definition Lists: Nesting: Test 3 (Parsoid only) [[[2]]]");
add("selser", "Definition Lists: Nesting: Test 3 (Parsoid only) [[[[0,0,1]]]]");
add("selser", "Definition Lists: Nesting: Test 3 (Parsoid only) [[[[1,2,1]]]]");
add("selser", "Definition Lists: Nesting: Test 3 (Parsoid only) [[[[0,0,[1]]]]]");
add("selser", "Definition Lists: Nesting: Test 3 (Parsoid only) [[[[0,0,[3]]]]]");
add("selser", "Definition Lists: Nesting: Test 3 (Parsoid only) [[[[[3],3,2]]]]");
add("selser", "Definition Lists: Nesting: Test 3 (Parsoid only) [[[[1,0,[[[1]]]]]]]");
add("selser", "Definition Lists: Nesting: Test 4 [[[[2]]]]");
add("selser", "Definition Lists: Nesting: Test 4 [[1]]");
add("selser", "Definition Lists: Nesting: Test 4 [[[2]]]");
add("selser", "Definition Lists: Nesting: Test 4 [[[[1]]]]");
add("selser", "Definition Lists: Nesting: Test 4 [[[1]]]");
add("selser", "Definition Lists: Nesting: Test 4 [[[[[2]]]]]");
add("selser", "Definition Lists: Nesting: Test 4 [[[[[1]]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 1 (parsoid) [[1]]");
add("selser", "Definition Lists: Mixed Lists: Test 1 (parsoid) [[[[0,3,1,3,3]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 1 (parsoid) [[[[2,0,4,0,0]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 1 (parsoid) [[[[[2],4,[3],2,0]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 1 (parsoid) [[[[[1],0,[[4]],2,3]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 1 (parsoid) [[[[2,3,[1],2,2]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 1 (parsoid) [[[2]]]");
add("selser", "Definition Lists: Mixed Lists: Test 1 (parsoid) [[[[2,2,3,3,0]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 1 (parsoid) [[[1]]]");
add("selser", "Definition Lists: Mixed Lists: Test 1 (parsoid) [[[[[[2]],0,3,0,3]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 2 [[1]]");
add("selser", "Definition Lists: Mixed Lists: Test 2 [[[2]]]");
add("selser", "Definition Lists: Mixed Lists: Test 2 [[[[[4],3,2]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 2 [[[[[4],0,3]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 2 [[[[[3],0,2]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 2 [[[[0,3,1]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 2 [[[[[4],4,3]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 2 [[[[2,2,0]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 2 [[[1]]]");
add("selser", "Definition Lists: Mixed Lists: Test 3 [[1]]");
add("selser", "Definition Lists: Mixed Lists: Test 3 [[[2]]]");
add("selser", "Definition Lists: Mixed Lists: Test 3 [[[1]]]");
add("selser", "Definition Lists: Mixed Lists: Test 3 [[[[[1]]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 3 [[[[[2]]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 3 [[[[1]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 3 [[[[[[1]]]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 4 [[[2]]]");
add("selser", "Definition Lists: Mixed Lists: Test 4 [[[[[3,[4]],1,0,0,4]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 4 [[[[4,[4],2,1,2]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 4 [[1]]");
add("selser", "Definition Lists: Mixed Lists: Test 4 [[[1]]]");
add("selser", "Definition Lists: Mixed Lists: Test 5 [[[1]]]");
add("selser", "Definition Lists: Mixed Lists: Test 5 [[1]]");
add("selser", "Definition Lists: Mixed Lists: Test 5 [[[[2]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 5 [[[2]]]");
add("selser", "Definition Lists: Mixed Lists: Test 6 [[[1]]]");
add("selser", "Definition Lists: Mixed Lists: Test 6 [[1]]");
add("selser", "Definition Lists: Mixed Lists: Test 6 [[[2]]]");
add("selser", "Definition Lists: Mixed Lists: Test 6 [[[[1]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 6 [[[[2]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 7 [[[2]]]");
add("selser", "Definition Lists: Mixed Lists: Test 7 [[1]]");
add("selser", "Definition Lists: Mixed Lists: Test 7 [[[[2,2,0]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 7 [[[1]]]");
add("selser", "Definition Lists: Mixed Lists: Test 7 [[[[0,4,3]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 7 [[[[0,2,4]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 7 [[[[2,0,3]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 8 [[[[[4]],3,[3]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 8 [[1]]");
add("selser", "Definition Lists: Mixed Lists: Test 8 [[[1,2,1]]]");
add("selser", "Definition Lists: Mixed Lists: Test 8 [[[1,4,[2]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 8 [[[1,2,[[[[4]]]]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 8 [[[[[2]],0,3]]]");
add("selser", "Definition Lists: Mixed Lists: Test 8 [[[[3],2,[1]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 8 [[[0,3,[2]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 8 [[[1,0,3]]]");
add("selser", "Definition Lists: Mixed Lists: Test 8 [[[[[2]],4,2]]]");
add("selser", "Definition Lists: Mixed Lists: Test 9 [[1]]");
add("selser", "Definition Lists: Mixed Lists: Test 9 [[[[[3,2],2]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 9 [[[[2,0]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 9 [[[1]]]");
add("selser", "Definition Lists: Mixed Lists: Test 9 [[[[1,4]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 10 [[1]]");
add("selser", "Definition Lists: Mixed Lists: Test 10 [[[[[[2,0]]]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 10 [[[1]]]");
add("selser", "Definition Lists: Mixed Lists: Test 10 [[[[1]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 10 [[[[[[2,[3]]]]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 10 [[[[[[1,3]]]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 11 (parsoid) [[[1]]]");
add("selser", "Definition Lists: Mixed Lists: Test 11 (parsoid) [[[2]]]");
add("selser", "Definition Lists: Mixed Lists: Test 11 (parsoid) [[1]]");
add("selser", "Definition Lists: Mixed Lists: Test 11 (parsoid) [[[[2]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 11 (parsoid) [[[[1]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 11 (parsoid) [[[[[2]]]]]");
add("selser", "Definition Lists: Mixed Lists: Test 11 (parsoid) [[[[[[[[1]]]]]]]]");
add("selser", "Definition Lists: Weird Ones: Test 1 (parsoid) [[[[1]]]]");
add("selser", "Definition Lists: Weird Ones: Test 1 (parsoid) [[1]]");
add("selser", "Definition Lists: Weird Ones: Test 1 (parsoid) [[[[[[2]]]]]]");
add("selser", "Definition Lists: Weird Ones: Test 1 (parsoid) [[[[[2]]]]]");
add("selser", "Definition Lists: Weird Ones: Test 1 (parsoid) [[[1]]]");
add("selser", "Definition Lists: Weird Ones: Test 1 (parsoid) [[[2]]]");
add("selser", "External links: open square bracket forbidden in URL (named) (bug 4377) [[[2]]]");
add("selser", "External links: open square bracket forbidden in URL (named) (bug 4377) [2]");
add("selser", "External links: open square bracket forbidden in URL (named) (bug 4377) [1]");
add("selser", "External links: open square bracket forbidden in URL (named) (bug 4377) [[[3]]]");
add("selser", "External links: open square bracket forbidden in URL (named) (bug 4377) [[[4]]]");
add("selser", "External links: open square bracket forbidden in URL (named) (bug 4377) [[2]]");
add("selser", "External links: Clickable images [[4,[2]]]");
add("selser", "External links: Clickable images [[0,1]]");
add("selser", "External links: Clickable images [2]");
add("selser", "External links: Clickable images [1]");
add("selser", "External links: Clickable images [[0,2]]");
add("selser", "External links: Clickable images [[4,2]]");
add("selser", "External links: Clickable images [[2,[2]]]");
add("selser", "External links: Clickable images [[3,2]]");
add("selser", "External links: Clickable images [[3,0]]");
add("selser", "External links: Clickable images [[4,0]]");
add("selser", "External links: Clickable images [[2,2]]");
add("selser", "BUG 289: \">\"-token in bracketed URL [2]");
add("selser", "BUG 289: \">\"-token in bracketed URL [1]");
add("selser", "BUG 289: \">\"-token in bracketed URL [[[3]]]");
add("selser", "BUG 289: \">\"-token in bracketed URL [[[2]]]");
add("selser", "BUG 289: \">\"-token in bracketed URL [[2]]");
add("selser", "BUG 289: \">\"-token in bracketed URL [[[4]]]");
add("selser", "BUG 289: literal \">\"-token in bracketed URL [[[[2],0]]]");
add("selser", "BUG 289: literal \">\"-token in bracketed URL [1]");
add("selser", "BUG 289: literal \">\"-token in bracketed URL [[[0,2]]]");
add("selser", "BUG 289: literal \">\"-token in bracketed URL [[[[4],2]]]");
add("selser", "BUG 289: literal \">\"-token in bracketed URL [2]");
add("selser", "BUG 289: literal \">\"-token in bracketed URL [[2]]");
add("selser", "BUG 289: literal \">\"-token in bracketed URL [[[[3],2]]]");
add("selser", "BUG 289: literal \">\"-token in bracketed URL [[[[3],3]]]");
add("selser", "BUG 289: literal \">\"-token in bracketed URL [[[0,3]]]");
add("selser", "BUG 289: literal double quote in bracketed URL [2]");
add("selser", "BUG 289: literal double quote in bracketed URL [[2]]");
add("selser", "BUG 289: literal double quote in bracketed URL [[[3]]]");
add("selser", "BUG 289: literal double quote in bracketed URL [[[2]]]");
add("selser", "BUG 289: literal double quote in bracketed URL [1]");
add("selser", "BUG 289: literal double quote in bracketed URL [[[4]]]");
add("selser", "External links: multiple legal whitespace is fine, Magnus. Don't break it please. (bug 5081) [2]");
add("selser", "External links: multiple legal whitespace is fine, Magnus. Don't break it please. (bug 5081) [[[2]]]");
add("selser", "External links: multiple legal whitespace is fine, Magnus. Don't break it please. (bug 5081) [1]");
add("selser", "External links: multiple legal whitespace is fine, Magnus. Don't break it please. (bug 5081) [[2]]");
add("selser", "External links: multiple legal whitespace is fine, Magnus. Don't break it please. (bug 5081) [[[4]]]");
add("selser", "External links: multiple legal whitespace is fine, Magnus. Don't break it please. (bug 5081) [[[3]]]");
add("selser", "External links: wiki links within external link (Bug 3695) [[4,[2],4]]");
add("selser", "External links: wiki links within external link (Bug 3695) [[0,0,3]]");
add("selser", "External links: wiki links within external link (Bug 3695) [2]");
add("selser", "External links: wiki links within external link (Bug 3695) [[1,0,0]]");
add("selser", "External links: wiki links within external link (Bug 3695) [1]");
add("selser", "External links: wiki links within external link (Bug 3695) [[0,[2],4]]");
add("selser", "External links: wiki links within external link (Bug 3695) [[0,1,0]]");
add("selser", "External links: wiki links within external link (Bug 3695) [[3,[3],3]]");
add("selser", "External links: wiki links within external link (Bug 3695) [[1,[4],3]]");
add("selser", "External links: wiki links within external link (Bug 3695) [[0,[4],2]]");
add("selser", "External links: wiki links within external link (Bug 3695) [[0,[3],4]]");
add("selser", "External links: wiki links within external link (Bug 3695) [[2,0,3]]");
add("selser", "External links: wiki links within external link (Bug 3695) [[0,2,4]]");
add("selser", "External links: wiki links within external link (Bug 3695) [[0,0,4]]");
add("selser", "External links: wiki links within external link (Bug 3695) [[2,3,0]]");
add("selser", "External links: wiki links within external link (Bug 3695) [[0,2,0]]");
add("selser", "External links: wiki links within external link (Bug 3695) [[0,4,0]]");
add("selser", "External links: wiki links within external link (Bug 3695) [[3,2,0]]");
add("selser", "Bug 2702: Mismatched <i>, <b> and <a> tags are invalid [[3,0,[2],0,3,4,3,0,0,[1]]]");
add("selser", "Bug 2702: Mismatched <i>, <b> and <a> tags are invalid [1]");
add("selser", "Bug 2702: Mismatched <i>, <b> and <a> tags are invalid [2]");
add("selser", "Bug 2702: Mismatched <i>, <b> and <a> tags are invalid [[0,2,[3],2,3,2,2,0,0,[[3,3]]]]");
add("selser", "Bug 2702: Mismatched <i>, <b> and <a> tags are invalid [[2,0,4,4,1,2,[3,[4]],4,0,[[0,2]]]]");
add("selser", "Bug 2702: Mismatched <i>, <b> and <a> tags are invalid [[4,0,0,0,[4,4],4,[0,3],[1],0,[[0,[4]]]]]");
add("selser", "Bug 2702: Mismatched <i>, <b> and <a> tags are invalid [[1,3,2,3,[2,4],0,[4,0],[4],0,4]]");
add("selser", "Bug 2702: Mismatched <i>, <b> and <a> tags are invalid [[[3],0,[2],0,3,2,[4,2],3,0,1]]");
add("selser", "Bug 2702: Mismatched <i>, <b> and <a> tags are invalid [[3,0,3,2,[3,4],4,2,0,0,[1]]]");
add("selser", "Bug 2702: Mismatched <i>, <b> and <a> tags are invalid [[2,2,[2],2,[0,3],0,[0,3],[3],0,[[0,3]]]]");
add("selser", "Bug 2702: Mismatched <i>, <b> and <a> tags are invalid [[[2],4,[[4]],0,4,0,[4,2],2,3,[4]]]");
add("selser", "Bug 2702: Mismatched <i>, <b> and <a> tags are invalid [[2,0,3,0,2,3,[0,3],2,0,1]]");
add("selser", "Bug 2702: Mismatched <i>, <b> and <a> tags are invalid [[4,2,0,0,4,0,1,[4],2,[1]]]");
add("selser", "Bug 2702: Mismatched <i>, <b> and <a> tags are invalid [[0,0,3,0,4,3,0,[1],0,[3]]]");
add("selser", "Bug 2702: Mismatched <i>, <b> and <a> tags are invalid [[2,4,0,4,[2,1],2,[3,2],1,0,[[0,2]]]]");
add("selser", "Bug 2702: Mismatched <i>, <b> and <a> tags are invalid [[0,0,[4],4,[0,2],4,[0,4],[4],0,[[0,1]]]]");
add("selser", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check) [1]");
add("selser", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check) [[[2,[3]],4,3]]");
add("selser", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check) [[3,2,4]]");
add("selser", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check) [[[0,2],[3,3],[3]]]");
add("selser", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check) [[2,[0,2],0]]");
add("selser", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check) [[4,0,[4]]]");
add("selser", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check) [[[2,0],1,1]]");
add("selser", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check) [[2,[3,1],0]]");
add("selser", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check) [2]");
add("selser", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check) [[3,[2,[4]],1]]");
add("selser", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check) [[[3,0],4,0]]");
add("selser", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check) [[3,0,0]]");
add("selser", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check) [[4,0,3]]");
add("selser", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check) [[[2,0],[0,2],3]]");
add("selser", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check) [[4,[3,0],[4]]]");
add("selser", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check) [[[0,1],[3,[3]],0]]");
add("selser", "External link containing double-single-quotes in text embedded in italics (bug 4598 sanity check) [[3,3,0]]");
add("selser", "External link containing double-single-quotes with no space separating the url from text in italics [[0,1,2]]");
add("selser", "External link containing double-single-quotes with no space separating the url from text in italics [2]");
add("selser", "External link containing double-single-quotes with no space separating the url from text in italics [1]");
add("selser", "External link containing double-single-quotes with no space separating the url from text in italics [[2,0,0]]");
add("selser", "External link containing double-single-quotes with no space separating the url from text in italics [[[[4],4],2,0]]");
add("selser", "External link containing double-single-quotes with no space separating the url from text in italics [[2,[3],0]]");
add("selser", "External link containing double-single-quotes with no space separating the url from text in italics [[0,0,4]]");
add("selser", "External link containing double-single-quotes with no space separating the url from text in italics [[[4,0],0,3]]");
add("selser", "External link containing double-single-quotes with no space separating the url from text in italics [[[3,3],[4],0]]");
add("selser", "External link containing double-single-quotes with no space separating the url from text in italics [[[[2],0],2,0]]");
add("selser", "External link containing double-single-quotes with no space separating the url from text in italics [[0,[3],3]]");
add("selser", "External link containing double-single-quotes with no space separating the url from text in italics [[3,[3],3]]");
add("selser", "External link containing double-single-quotes with no space separating the url from text in italics [[[0,4],4,3]]");
add("selser", "External link containing double-single-quotes with no space separating the url from text in italics [[4,0,3]]");
add("selser", "External link containing double-single-quotes with no space separating the url from text in italics [[[1,2],2,4]]");
add("selser", "Unclosed and unmatched quotes (parsoid) [[2],0,1,0,3,4,4,4,1,3,2,3,2,0,4,3,4,0,3,0,3]");
add("selser", "Unclosed and unmatched quotes (parsoid) [4,0,1,0,3,0,3,0,1,3,2,0,0,3,2,0,[[3],3,0,0,0,0],2,[[3,4],2,0],0,[2,[2],3]]");
add("selser", "Unclosed and unmatched quotes (parsoid) [4,0,2,4,3,3,1,3,[[3]],0,2,0,0,4,0,0,1,4,[2,1,0],0,2]");
add("selser", "Unclosed and unmatched quotes (parsoid) [2,0,[[2,0,3]],2,[3],0,1,3,4,4,2,3,[4],0,3,0,[4,3,[3],0,[3],0],0,[[0,1],3,0],4,4]");
add("selser", "Unclosed and unmatched quotes (parsoid) [[2],0,[4],0,2,0,2,0,2,3,2,0,0,0,3,0,[0,0,2,0,0,4],2,2,0,0]");
add("selser", "Unclosed and unmatched quotes (parsoid) [[2],0,[[4,2,[2]]],0,4,4,2,3,[2],0,[1],2,3,0,0,4,[1,2,[2],4,[4],0],0,1,0,1]");
add("selser", "Unclosed and unmatched quotes (parsoid) [3,3,4,0,[[4]],3,3,4,2,4,[4],0,[3],0,2,4,2,4,1,2,0]");
add("selser", "Unclosed and unmatched quotes (parsoid) [[4],3,3,2,[[4]],3,0,2,1,4,[[4]],4,2,0,2,0,1,0,[[0,2],3,4],0,3]");
add("selser", "Unclosed and unmatched quotes (parsoid) [[4],3,2,0,0,0,0,0,3,0,[[4]],3,3,0,0,4,4,4,3,0,4]");
add("selser", "Unclosed and unmatched quotes (parsoid) [[2],0,0,0,[1],0,[4,2],0,[1],2,[3],0,0,4,0,0,[4,4,[2],0,[3],2],0,3,0,[2,1,0]]");
add("selser", "Unclosed and unmatched quotes (parsoid) [1,0,[1],4,1,0,3,4,4,2,[[4]],0,0,0,0,0,1,0,[1,[4],2],0,3]");
add("selser", "Unclosed and unmatched quotes (parsoid) [1,3,3,4,3,2,4,3,1,0,3,4,2,0,0,0,[4,0,3,3,4,3],2,[[4,4],4,3],0,[0,[4],4]]");
add("selser", "Unclosed and unmatched quotes (parsoid) [4,0,[[2,4,[4]]],0,4,0,[4,0],0,[[4]],0,3,3,4,4,0,2,[2,2,[4],2,0,0],4,[0,2,3],0,[0,[3],0]]");
add("selser", "Unclosed and unmatched quotes (parsoid) [4,2,[[[4],0,4]],0,[[2]],0,[0,2],3,1,2,3,0,3,0,0,2,[4,3,2,0,1,4],3,[3,2,0],0,[0,1,3]]");
add("selser", "Unclosed and unmatched quotes (parsoid) [[[4,0,1]],0,2,3,[3],3,1,2,[4],0,2,3,1,0,0,2,[[2],4,0,0,1,0],4,2,2,4]");
add("selser", "Unclosed and unmatched quotes (parsoid) [[1],4,4,0,3,0,1,3,4,0,[[3]],4,4,0,0,0,[3,0,[4],3,[4],3],0,4,0,0]");
add("selser", "Unclosed and unmatched quotes (parsoid) [[[3,2,0]],2,[4],3,1,0,2,0,2,0,2,4,4,4,0,2,4,4,[3,4,3],0,[3,4,3]]");
add("selser", "Unclosed and unmatched quotes (parsoid) [1,0,[2],0,0,2,[3,0],4,1,0,0,0,0,4,2,3,[[3],0,1,4,3,0],0,[[0,1],2,0],3,[4,[3],0]]");
add("selser", "Unclosed and unmatched quotes (parsoid) [3,3,3,4,4,2,3,0,0,0,0,4,4,0,0,0,[0,0,[2],0,[3],0],4,4,3,[2,4,4]]");
add("selser", "Unclosed and unmatched quotes (parsoid) [2,4,[3],0,4,0,1,2,4,2,[1],4,3,0,4,0,4,2,1,0,3]");
add("selser", "A table with captions with non-default spaced attributes and a table row [[3,2,3,[4],4,[2,4]]]");
add("selser", "A table with captions with non-default spaced attributes and a table row [[0,2,4,0,3,[4,0]]]");
add("selser", "A table with captions with non-default spaced attributes and a table row [[2,0,2,3,3,3]]");
add("selser", "A table with captions with non-default spaced attributes and a table row [2]");
add("selser", "A table with captions with non-default spaced attributes and a table row [[4,[3],2,0,3,[[3,4],4]]]");
add("selser", "A table with captions with non-default spaced attributes and a table row [[2,2,0,4,2,[0,4]]]");
add("selser", "A table with captions with non-default spaced attributes and a table row [[0,[2],0,0,0,[[0,2],0]]]");
add("selser", "A table with captions with non-default spaced attributes and a table row [[2,0,3,[2],0,[2,0]]]");
add("selser", "A table with captions with non-default spaced attributes and a table row [1]");
add("selser", "A table with captions with non-default spaced attributes and a table row [[0,[2],0,2,3,[[2,0],0]]]");
add("selser", "A table with captions with non-default spaced attributes and a table row [[3,4,3,0,0,1]]");
add("selser", "A table with captions with non-default spaced attributes and a table row [[2,3,0,[3],2,[[2,[3]],2]]]");
add("selser", "A table with captions with non-default spaced attributes and a table row [[0,0,0,1,4,3]]");
add("selser", "A table with captions with non-default spaced attributes and a table row [[0,4,2,[3],4,[[2,2],0]]]");
add("selser", "A table with captions with non-default spaced attributes and a table row [[0,0,2,[3],3,[[0,4],0]]]");
add("selser", "Table td-cell syntax variations [2]");
add("selser", "Table td-cell syntax variations [[4,[1,4]]]");
add("selser", "Table td-cell syntax variations [1]");
add("selser", "Table td-cell syntax variations [[3,[2,0]]]");
add("selser", "Table td-cell syntax variations [[2,1]]");
add("selser", "Table td-cell syntax variations [[0,[[1,0,[4],2,2,[4],0,[3],0],0]]]");
add("selser", "Table td-cell syntax variations [[4,[[2,0,2,[3],4,0,3,[3],1],2]]]");
add("selser", "Table td-cell syntax variations [[0,[[4,0,0,1,0,0,0,4,4],0]]]");
add("selser", "Table td-cell syntax variations [[0,[1,4]]]");
add("selser", "Table td-cell syntax variations [[0,[[1,4,0,2,2,0,4,0,0],3]]]");
add("selser", "Table td-cell syntax variations [[0,2]]");
add("selser", "Multiplication table [[0,[2],2,2]]");
add("selser", "Multiplication table [[4,1,4,[[0,[0,1,4],3,1,0],0,2,0,1,0,[0,2,2,2,2,[2]],0,3,0,[4,0,0,3,0,4],0]]]");
add("selser", "Allow +/- in 2nd and later cells in a row, in 1st cell when td-attrs are present, or in 1st cell when there is a space between \"|\" and +/-  [[4,[[0,0,4,3],4,[2,4,[2],[3],2,[3],[2],1],3,4,0]]]");
add("selser", "Allow +/- in 2nd and later cells in a row, in 1st cell when td-attrs are present, or in 1st cell when there is a space between \"|\" and +/-  [1]");
add("selser", "Allow +/- in 2nd and later cells in a row, in 1st cell when td-attrs are present, or in 1st cell when there is a space between \"|\" and +/-  [2]");
add("selser", "Allow +/- in 2nd and later cells in a row, in 1st cell when td-attrs are present, or in 1st cell when there is a space between \"|\" and +/-  [[2,1]]");
add("selser", "Allow +/- in 2nd and later cells in a row, in 1st cell when td-attrs are present, or in 1st cell when there is a space between \"|\" and +/-  [[0,1]]");
add("selser", "Allow +/- in 2nd and later cells in a row, in 1st cell when td-attrs are present, or in 1st cell when there is a space between \"|\" and +/-  [[2,[[0,4,0,[4]],0,1,2,[0,2,4,[2]],0]]]");
add("selser", "Allow +/- in 2nd and later cells in a row, in 1st cell when td-attrs are present, or in 1st cell when there is a space between \"|\" and +/-  [[0,2]]");
add("selser", "Allow +/- in 2nd and later cells in a row, in 1st cell when td-attrs are present, or in 1st cell when there is a space between \"|\" and +/-  [[3,[[3,1,0,[4]],3,4,2,[0,4,0,0],4]]]");
add("selser", "Allow +/- in 2nd and later cells in a row, in 1st cell when td-attrs are present, or in 1st cell when there is a space between \"|\" and +/-  [[0,[[3,2,0,0],0,[2,0,1,[2],0,0,0,2],0,[0,[4],0,0],0]]]");
add("selser", "Allow +/- in 2nd and later cells in a row, in 1st cell when td-attrs are present, or in 1st cell when there is a space between \"|\" and +/-  [[2,[[3,[2],4,3],2,[4,2,0,0,2,3,4,2],0,2,0]]]");
add("selser", "Table rowspan [[3,2]]");
add("selser", "Table rowspan [[0,1]]");
add("selser", "Table rowspan [[2,[[2,0,3,0,4],0,[0,0,0,3],2]]]");
add("selser", "Table rowspan [2]");
add("selser", "Table rowspan [1]");
add("selser", "Table rowspan [[0,[1,0,2,0]]]");
add("selser", "Table rowspan [[2,2]]");
add("selser", "Table rowspan [[0,[1,0,2,2]]]");
add("selser", "Table rowspan [[3,[1,0,[0,2,0,4],2]]]");
add("selser", "Table rowspan [[0,[[4,0,4,0,1],0,1,2]]]");
add("selser", "Table rowspan [[4,1]]");
add("selser", "Table rowspan [[0,[2,0,4,0]]]");
add("selser", "Table rowspan [[2,1]]");
add("selser", "Table rowspan [[3,[1,0,[0,1,0,2],4]]]");
add("selser", "Nested table [[0,[1,4]]]");
add("selser", "Nested table [[0,2]]");
add("selser", "Nested table [2]");
add("selser", "Nested table [[2,[4,2]]]");
add("selser", "Nested table [[4,1]]");
add("selser", "Nested table [1]");
add("selser", "Nested table [[3,2]]");
add("selser", "Nested table [[2,1]]");
add("selser", "Nested table [[3,[3,0]]]");
add("selser", "Nested table [[0,[[[4,[4]],2,1,3,[3]],2]]]");
add("selser", "Nested table [[3,[1,4]]]");
add("selser", "Nested table [[0,[[1,2,[3,4],0,4],2]]]");
add("selser", "Nested table [[0,[1,2]]]");
add("selser", "Nested table [[0,1]]");
add("selser", "Nested table [[0,[[2,0,[4,[0,[0,0,[0,3],2]]],0,0],4]]]");
add("selser", "Invalid attributes in table cell (bug 1830) [1]");
add("selser", "Invalid attributes in table cell (bug 1830) [[4,1]]");
add("selser", "Invalid attributes in table cell (bug 1830) [2]");
add("selser", "Invalid attributes in table cell (bug 1830) [[0,2]]");
add("selser", "Invalid attributes in table cell (bug 1830) [[2,[1,0]]]");
add("selser", "Invalid attributes in table cell (bug 1830) [[0,1]]");
add("selser", "Invalid attributes in table cell (bug 1830) [[0,[2,0]]]");
add("selser", "Invalid attributes in table cell (bug 1830) [[2,1]]");
add("selser", "Invalid attributes in table cell (bug 1830) [[3,[[2],0]]]");
add("selser", "Invalid attributes in table cell (bug 1830) [[0,[1,3]]]");
add("selser", "Table security: embedded pipes (http://lists.wikimedia.org/mailman/htdig/wikitech-l/2006-April/022293.html) [2]");
add("selser", "Table attributes with empty value [2]");
add("selser", "Table attributes with empty value [[3,[[[3]],0]]]");
add("selser", "Table attributes with empty value [1]");
add("selser", "Table attributes with empty value [[0,[1,3]]]");
add("selser", "Table attributes with empty value [[3,2]]");
add("selser", "Table attributes with empty value [[2,0]]");
add("selser", "Table attributes with empty value [[2,1]]");
add("selser", "Table attributes with empty value [[0,[1,2]]]");
add("selser", "Wikitext table with a lot of comments [[0,4,3,[0,0,0,0,2,0,3,0]]]");
add("selser", "Implicit <td> after a |-\n(PHP parser relies on Tidy to add the missing <td> tags) [[3,[2,0]]]");
add("selser", "Implicit <td> after a |-\n(PHP parser relies on Tidy to add the missing <td> tags) [1]");
add("selser", "Implicit <td> after a |-\n(PHP parser relies on Tidy to add the missing <td> tags) [[4,1]]");
add("selser", "Implicit <td> after a |-\n(PHP parser relies on Tidy to add the missing <td> tags) [[0,2]]");
add("selser", "Implicit <td> after a |-\n(PHP parser relies on Tidy to add the missing <td> tags) [[0,[0,3]]]");
add("selser", "Implicit <td> after a |-\n(PHP parser relies on Tidy to add the missing <td> tags) [2]");
add("selser", "Implicit <td> after a |-\n(PHP parser relies on Tidy to add the missing <td> tags) [[4,2]]");
add("selser", "Implicit <td> after a |-\n(PHP parser relies on Tidy to add the missing <td> tags) [[0,[[2,[4]],0]]]");
add("selser", "Implicit <td> after a |-\n(PHP parser relies on Tidy to add the missing <td> tags) [[0,[2,0]]]");
add("selser", "Pres should be recognized in an explicit <td> context, but not in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [[0,[1,2,0,4]]]");
add("selser", "Pres should be recognized in an explicit <td> context, but not in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [1]");
add("selser", "Pres should be recognized in an explicit <td> context, but not in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [2]");
add("selser", "Pres should be recognized in an explicit <td> context, but not in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [[0,1]]");
add("selser", "Pres should be recognized in an explicit <td> context, but not in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [[0,[[3,2],4,0,0]]]");
add("selser", "Pres should be recognized in an explicit <td> context, but not in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [[4,1]]");
add("selser", "Pres should be recognized in an explicit <td> context, but not in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [[3,2]]");
add("selser", "Pres should be recognized in an explicit <td> context, but not in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [[0,[1,0,1,4]]]");
add("selser", "Pres should be recognized in an explicit <td> context, but not in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [[0,2]]");
add("selser", "Pres should be recognized in an explicit <td> context, but not in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [[0,[4,3,0,0]]]");
add("selser", "Pres should be recognized in an explicit <td> context, but not in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [[4,2]]");
add("selser", "Pres should be recognized in an explicit <td> context, but not in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [[0,[[4,1],4,1,0]]]");
add("selser", "Lists should be recognized in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [[0,2]]");
add("selser", "Lists should be recognized in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [1]");
add("selser", "Lists should be recognized in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [[2,[[0,2],0]]]");
add("selser", "Lists should be recognized in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [2]");
add("selser", "Lists should be recognized in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [[0,[2,2]]]");
add("selser", "Lists should be recognized in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [[0,[[2,0],0]]]");
add("selser", "Lists should be recognized in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [[0,[1,0]]]");
add("selser", "Lists should be recognized in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [[2,2]]");
add("selser", "Lists should be recognized in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [[4,[2,3]]]");
add("selser", "Lists should be recognized in an implicit <td> context\n(PHP parser relies on Tidy to add the missing <td> tags) [[3,2]]");
add("selser", "Link with HTML entity in suffix / tail [[4,1,0,0,2]]");
add("selser", "Link with HTML entity in suffix / tail [[4,1,0,[4],2]]");
add("selser", "Link with HTML entity in suffix / tail [[0,0,0,2,4]]");
add("selser", "Link with HTML entity in suffix / tail [[1,[2],0,[2],4]]");
add("selser", "Link containing \"#<\" and \"#>\" % as a hex sequences- these are valid section anchors\nExample for such a section: == < == [[[2],4]]");
add("selser", "Link containing \"#<\" and \"#>\" % as a hex sequences- these are valid section anchors\nExample for such a section: == < == [[[4],4]]");
add("selser", "Link containing \"#<\" and \"#>\" % as a hex sequences- these are valid section anchors\nExample for such a section: == < == [[[3],4]]");
add("selser", "Link containing \"<#\" and \">#\" as a hex sequences [[2,2]]");
add("selser", "Link containing \"<#\" and \">#\" as a hex sequences [[0,2]]");
add("selser", "Link containing \"<#\" and \">#\" as a hex sequences [[[3],4]]");
add("selser", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check) [[[2,0],2,[2]]]");
add("selser", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check) [[1,3,1]]");
add("selser", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check) [[[4,0],1,4]]");
add("selser", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check) [[[3,[2]],0,0]]");
add("selser", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check) [[[0,3],1,0]]");
add("selser", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check) [2]");
add("selser", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check) [[[4,[3]],3,4]]");
add("selser", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check) [[1,4,1]]");
add("selser", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check) [[[2,2],[0,[3]],3]]");
add("selser", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check) [[[0,[2]],4,[2]]]");
add("selser", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check) [[[0,[4]],[3,0],2]]");
add("selser", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check) [[[3,3],2,0]]");
add("selser", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check) [[[0,[3]],[4,4],3]]");
add("selser", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check) [1]");
add("selser", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check) [[2,1,2]]");
add("selser", "Link containing double-single-quotes '' in text embedded in italics (bug 4598 sanity check) [[4,0,2]]");
add("selser", "BUG 2: [[page|http://url/]] should link to page, not http://url/ [2]");
add("selser", "BUG 2: [[page|http://url/]] should link to page, not http://url/ [1]");
add("selser", "BUG 2: [[page|http://url/]] should link to page, not http://url/ [[2,0]]");
add("selser", "BUG 2: [[page|http://url/]] should link to page, not http://url/ [[2,2]]");
add("selser", "BUG 2: [[page|http://url/]] should link to page, not http://url/ [[2,[3]]]");
add("selser", "BUG 2: [[page|http://url/]] should link to page, not http://url/ [[0,4]]");
add("selser", "BUG 2: [[page|http://url/]] should link to page, not http://url/ [[0,2]]");
add("selser", "BUG 2: [[page|http://url/]] should link to page, not http://url/ [[0,[2]]]");
add("selser", "BUG 2: [[page|http://url/]] should link to page, not http://url/ [[0,[3]]]");
add("selser", "BUG 2: [[page|http://url/]] should link to page, not http://url/ [[2,3]]");
add("selser", "Internal link with is link prefix [[4,2,2]]");
add("selser", "Internal link with is link prefix [[3,2,4]]");
add("selser", "Internal link with is link trail and link prefix [[[0,2],2,0,0,2,2,[0,2],4,1]]");
add("selser", "Internal link with is link trail and link prefix [[3,3,[0,3],0,3,0,2,4,[3,0,0]]]");
add("selser", "Internal link with is link trail and link prefix [[4,3,0,4,[2,2],4,4,0,2]]");
add("selser", "Parsoid-centric test: Whitespace in ext- and wiki-links should be preserved [3,2,[[4,2]],3,4,3,2]");
add("selser", "Parsoid-centric test: Whitespace in ext- and wiki-links should be preserved [0,3,1,0,1,0,1]");
add("selser", "Parsoid-centric test: Whitespace in ext- and wiki-links should be preserved [[[2]],0,[[2,3]],3,4,4,0]");
add("selser", "Parsoid-centric test: Whitespace in ext- and wiki-links should be preserved [[[3]],4,2,2,2,4,0]");
add("selser", "Parsoid-centric test: Whitespace in ext- and wiki-links should be preserved [4,4,[2],0,1,3,[[2]]]");
add("selser", "Parsoid-centric test: Whitespace in ext- and wiki-links should be preserved [2,4,[2],4,2,0,4]");
add("selser", "Parsoid-centric test: Whitespace in ext- and wiki-links should be preserved [0,0,[2],0,4,2,1]");
add("selser", "Parsoid-centric test: Whitespace in ext- and wiki-links should be preserved [3,0,1,3,0,0,[[[2]]]]");
add("selser", "Parsoid-centric test: Whitespace in ext- and wiki-links should be preserved [4,3,4,2,[[4]],0,3]");
add("selser", "Parsoid-centric test: Whitespace in ext- and wiki-links should be preserved [2,4,2,0,[2],2,4]");
add("selser", "Parsoid-centric test: Whitespace in ext- and wiki-links should be preserved [3,4,2,2,2,0,4]");
add("selser", "Parsoid-centric test: Whitespace in ext- and wiki-links should be preserved [0,2,1,3,[[4]],3,0]");
add("selser", "Parsoid-centric test: Whitespace in ext- and wiki-links should be preserved [3,4,4,2,2,4,0]");
add("selser", "Parsoid-centric test: Whitespace in ext- and wiki-links should be preserved [1,2,[[2,0]],0,[2],2,[[[2]]]]");
add("selser", "Interlanguage link, with prefix links [[3,2]]");
add("selser", "Interlanguage link, with prefix links [[2,2]]");
add("selser", "Double interlanguage link, with prefix links (bug 8897) [[0,1,0,2]]");
add("selser", "Double interlanguage link, with prefix links (bug 8897) [[4,0,2,2]]");
add("selser", "Double interlanguage link, with prefix links (bug 8897) [[0,2,0,4]]");
add("selser", "Parsoid-specific test: Wikilinks with &nbsp; should RT properly [[2]]");
add("selser", "Non-English #REDIRECT [3,2]");
add("selser", "Non-English #REDIRECT [0,2]");
add("selser", "Non-English #REDIRECT [4,2]");
add("selser", "Handling html with a div self-closing tag [0,0,4,0,1]");
add("selser", "Handling html with a div self-closing tag [0,2,0,2,[0,1,2,4,3,1]]");
add("selser", "Handling html with a div self-closing tag [4,0,0,0,[2,2,0,0,0,2]]");
add("selser", "Handling html with a div self-closing tag [0,0,1,4,2]");
add("selser", "Handling html with a div self-closing tag [3,3,0,3,[0,0,4,0,0,4]]");
add("selser", "Handling html with a div self-closing tag [0,4,0,2,2]");
add("selser", "Handling html with a div self-closing tag [0,0,0,2,4]");
add("selser", "Handling html with a div self-closing tag [0,3,0,4,1]");
add("selser", "Handling html with a div self-closing tag [2,4,0,0,[0,1,4,0,2,0]]");
add("selser", "Handling html with a div self-closing tag [2,3,4,2,[2,0,0,0,0,3]]");
add("selser", "Handling html with a div self-closing tag [0,4,3,0,[3,0,0,0,0,0]]");
add("selser", "Handling html with a div self-closing tag [1,0,0,0,4]");
add("selser", "Handling html with a div self-closing tag [0,0,4,0,0]");
add("selser", "Handling html with a div self-closing tag [0,0,3,0,2]");
add("selser", "Handling html with a br self-closing tag [[0,2,2,0,0,3,0,4,0,0,0]]");
add("selser", "Handling html with a br self-closing tag [2]");
add("selser", "Handling html with a br self-closing tag [1]");
add("selser", "Handling html with a br self-closing tag [[0,2,2,3,0,2,1,0,4,2,2]]");
add("selser", "Handling html with a br self-closing tag [[0,4,4,4,3,0,4,2,0,2,0]]");
add("selser", "Handling html with a br self-closing tag [[0,0,2,4,0,2,3,2,0,4,0]]");
add("selser", "Handling html with a br self-closing tag [[2,0,0,3,0,0,0,4,0,0,0]]");
add("selser", "Handling html with a br self-closing tag [[3,0,0,2,4,4,0,0,0,3,2]]");
add("selser", "Handling html with a br self-closing tag [[0,4,1,4,1,0,0,0,0,3,0]]");
add("selser", "Handling html with a br self-closing tag [[2,2,0,2,0,0,0,0,0,0,1]]");
add("selser", "Handling html with a br self-closing tag [[0,0,0,4,2,4,1,0,3,0,0]]");
add("selser", "Handling html with a br self-closing tag [[1,0,4,0,0,4,0,2,0,0,0]]");
add("selser", "Handling html with a br self-closing tag [[0,0,0,2,1,0,0,2,4,0,0]]");
add("selser", "Handling html with a br self-closing tag [[0,0,0,4,0,0,2,0,3,0,4]]");
add("selser", "Handling html with a br self-closing tag [[0,3,0,2,0,4,0,2,0,3,3]]");
add("selser", "Handling html with a br self-closing tag [[1,3,0,0,4,0,2,0,0,3,0]]");
add("selser", "Handling html with a br self-closing tag [[4,0,0,0,3,2,0,3,0,3,0]]");
add("selser", "Handling html with a br self-closing tag [[3,0,3,0,2,0,3,3,0,2,0]]");
add("selser", "Horizontal ruler (should it add that extra space?) [2,2,0,2,0,3]");
add("selser", "Horizontal ruler (should it add that extra space?) [3,0,4,2,0,2]");
add("selser", "Horizontal ruler (should it add that extra space?) [0,4,3,4,2,0]");
add("selser", "Horizontal ruler (should it add that extra space?) [2,0,0,2,4,3]");
add("selser", "Horizontal ruler (should it add that extra space?) [1,4,3,0,0,0]");
add("selser", "Horizontal ruler (should it add that extra space?) [1,0,0,0,2,0]");
add("selser", "Horizontal ruler (should it add that extra space?) [2,3,0,0,0,4]");
add("selser", "Horizontal ruler (should it add that extra space?) [0,4,1,4,0,0]");
add("selser", "Horizontal ruler (should it add that extra space?) [3,3,1,0,0,0]");
add("selser", "Horizontal ruler (should it add that extra space?) [4,0,0,3,2,3]");
add("selser", "Horizontal ruler (should it add that extra space?) [1,3,0,3,0,0]");
add("selser", "Horizontal ruler (should it add that extra space?) [0,0,0,0,0,4]");
add("selser", "Horizontal ruler (should it add that extra space?) [0,0,1,0,0,3]");
add("selser", "Horizontal ruler (should it add that extra space?) [0,0,0,4,0,0]");
add("selser", "Horizontal ruler (should it add that extra space?) [0,0,0,3,4,2]");
add("selser", "Mixed list [4,2,[1]]");
add("selser", "Mixed list [[[2,2,0,0,0,[[4]]],3,4,4,3],0,[1]]");
add("selser", "Mixed list [1,0,[1]]");
add("selser", "Mixed list [[2,3,[2,[[0,[[3,1]]],0,3],2,4],2,4],3,[[2]]]");
add("selser", "Mixed list [[2,4,[0,[[4,[2]],0,[0,[0,2,0]]],4,[1]],2,[0,[2]]],3,[1]]");
add("selser", "Nested lists 2 [[[2],2,0]]");
add("selser", "Nested lists 2 [[[[2]],0,[3]]]");
add("selser", "Nested lists 2 [[1,0,0]]");
add("selser", "Nested lists 2 [[1,4,[3]]]");
add("selser", "Nested lists 2 [[1,2,[2]]]");
add("selser", "Nested lists 2 [[[2],0,2]]");
add("selser", "Nested lists 2 [[[1],0,0]]");
add("selser", "Nested lists 3 (first element empty) [2]");
add("selser", "Nested lists 3 (first element empty) [1]");
add("selser", "Nested lists 3 (first element empty) [[[2,[[3]]]]]");
add("selser", "Nested lists 3 (first element empty) [[[0,[[3]]]]]");
add("selser", "Nested lists 3 (first element empty) [[2]]");
add("selser", "Nested lists 3 (first element empty) [[[4,[[4]]]]]");
add("selser", "Nested lists 3 (first element empty) [[[3,[[4]]]]]");
add("selser", "Nested lists 4 (first element empty) [[1,2,0]]");
add("selser", "Nested lists 4 (first element empty) [[1,0,0]]");
add("selser", "Nested lists 4 (first element empty) [[1,3,4]]");
add("selser", "Nested lists 4 (first element empty) [[1,0,[3]]]");
add("selser", "Nested lists 5 (both elements empty) [[[[2]],4,4]]");
add("selser", "Nested lists 5 (both elements empty) [[1,0,3]]");
add("selser", "Nested lists 5 (both elements empty) [[1,0,0]]");
add("selser", "Nested lists 5 (both elements empty) [[[1],0,0]]");
add("selser", "Nested lists 5 (both elements empty) [[[2],0,4]]");
add("selser", "Nested lists 6 (both elements empty) [1]");
add("selser", "Nested lists 6 (both elements empty) [2]");
add("selser", "Nested lists 6 (both elements empty) [[[2,0]]]");
add("selser", "Nested lists 6 (both elements empty) [[[4,0]]]");
add("selser", "Nested lists 6 (both elements empty) [[2]]");
add("selser", "Nested lists 7 (skip initial nesting levels) [[1]]");
add("selser", "Nested lists 7 (skip initial nesting levels) [[[1]]]");
add("selser", "Nested lists 7 (skip initial nesting levels) [[[[[2]]]]]");
add("selser", "Nested lists 7 (skip initial nesting levels) [[[2]]]");
add("selser", "Nested lists 7 (skip initial nesting levels) [[[[[1]]]]]");
add("selser", "List interrupted by empty line or heading [[1],0,[1],2,3,0,0]");
add("selser", "List interrupted by empty line or heading [[[4]],4,[[1]],0,[3],2,2]");
add("selser", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack) [1,2,[3,2,[3],0]]");
add("selser", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack) [[1,0,0,0,0,0,[0,2,2],2],2,[2,0,[4],4]]");
add("selser", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack) [[4,2,[3],0,0,0,[4,2,3],3],0,2]");
add("selser", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack) [[3,0,0,0,0,0,[2,0,0],0],0,[0,0,1,0]]");
add("selser", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack) [[4,3,2,0,0,0,3,4],4,2]");
add("selser", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack) [[0,2,0,2,0,0,4,4],0,[2,0,0,0]]");
add("selser", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack) [[0,4,[4],4,0,0,4,1],2,1]");
add("selser", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack) [[2,0,1,2,0,4,4,[2]],0,[2,1,3,4]]");
add("selser", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack) [[4,0,2,4,0,2,3,3],4,4]");
add("selser", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack) [[1,3,[4],2,0,4,[0,0,4],0],4,1]");
add("selser", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack) [[1,0,[4],0,0,0,1,2],0,0]");
add("selser", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack) [1,0,3]");
add("selser", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack) [[[4],3,1,0,0,0,[2,2,4],0],4,3]");
add("selser", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack) [[3,4,4,0,0,4,[2,4,4],0],0,3]");
add("selser", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack) [2,0,2]");
add("selser", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack) [2,2,1]");
add("selser", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack) [[[3],3,1,0,0,3,[2,0,0],4],0,[3,0,1,2]]");
add("selser", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack) [1,3,2]");
add("selser", "Test the li-hack\n(Cannot test this with PHP parser since it relies on Tidy for the hack) [[0,0,[3],0,0,0,[4,0,0],0],0,2]");
add("selser", "Unbalanced closing non-block tags don't break a list\n(Parsoid-only since php parser generates broken html -- relies on Tidy to fix up) [0,0,[[4,0],0,[4]]]");
add("selser", "Unbalanced closing non-block tags don't break a list\n(Parsoid-only since php parser generates broken html -- relies on Tidy to fix up) [1,3,2]");
add("selser", "Unbalanced closing non-block tags don't break a list\n(Parsoid-only since php parser generates broken html -- relies on Tidy to fix up) [[3],0,[1,3,[2]]]");
add("selser", "Unbalanced closing non-block tags don't break a list\n(Parsoid-only since php parser generates broken html -- relies on Tidy to fix up) [2,3,[2,0,0]]");
add("selser", "Unbalanced closing non-block tags don't break a list\n(Parsoid-only since php parser generates broken html -- relies on Tidy to fix up) [4,0,[0,4,0]]");
add("selser", "Unbalanced closing non-block tags don't break a list\n(Parsoid-only since php parser generates broken html -- relies on Tidy to fix up) [[1],0,1]");
add("selser", "Unbalanced closing non-block tags don't break a list\n(Parsoid-only since php parser generates broken html -- relies on Tidy to fix up) [[4],0,[3,3,[3]]]");
add("selser", "Unbalanced closing non-block tags don't break a list\n(Parsoid-only since php parser generates broken html -- relies on Tidy to fix up) [1,0,2]");
add("selser", "Unbalanced closing non-block tags don't break a list\n(Parsoid-only since php parser generates broken html -- relies on Tidy to fix up) [0,0,[4,3,[4]]]");
add("selser", "Unbalanced closing non-block tags don't break a list\n(Parsoid-only since php parser generates broken html -- relies on Tidy to fix up) [0,3,1]");
add("selser", "List embedded in a non-block tag\n(Ugly Parsoid output -- worth fixing; Disabled for PHP parser since it relies on Tidy) [2,4,4,0]");
add("selser", "Magic Word: {{CURRENTMONTH1}} [[4]]");
add("selser", "Magic Word: {{CURRENTMONTH1}} [[2]]");
add("selser", "Magic Word: {{CURRENTMONTH1}} [[3]]");
add("selser", "Magic Words LOCAL (UTC) [1]");
add("selser", "Magic Words LOCAL (UTC) [[1,3,0,3,0,0,[2,0],0,0,2,[4,0],0,0,0,4,0,[3,0],0,[2,0],0,0,4,2,0,1,2,0]]");
add("selser", "Magic Words LOCAL (UTC) [[4,0,0,0,0,0,4,4,0,3,[4,0],2,0,3,2,0,4,0,0,0,0,0,0,0,2,4,3]]");
add("selser", "Magic Words LOCAL (UTC) [[1,0,0,4,1,4,[3,0],0,1,3,[2,0],3,2,0,0,0,0,0,0,2,[3,0],0,4,0,0,0,1]]");
add("selser", "Magic Words LOCAL (UTC) [[1,2,0,0,3,0,0,0,3,3,[3,0],2,3,2,2,0,[2,0],3,3,0,0,2,0,0,3,3,2]]");
add("selser", "Magic Words LOCAL (UTC) [2]");
add("selser", "Magic Words LOCAL (UTC) [[[4,0],4,[2],0,[4,0],4,4,0,1,4,2,0,1,3,3,4,1,0,[3,0],0,0,4,[3,0],4,2,0,0]]");
add("selser", "Magic Words LOCAL (UTC) [[0,0,[3],4,2,0,[3,0],0,3,0,2,0,0,0,[3,0],0,4,3,[3,0],0,0,2,0,4,2,0,[2,0]]]");
add("selser", "Magic Words LOCAL (UTC) [[1,0,0,4,4,0,4,4,[4,0],4,0,0,0,0,4,0,1,3,4,2,[3,0],2,3,0,[2,0],0,[2,0]]]");
add("selser", "Magic Words LOCAL (UTC) [[2,0,[4],3,2,3,[2,0],2,[3,0],0,[3,0],0,2,0,4,0,1,0,0,0,2,0,0,0,4,0,[4,0]]]");
add("selser", "Magic Words LOCAL (UTC) [[0,0,0,0,4,2,[4,0],0,1,2,[4,0],0,1,2,0,3,1,3,4,0,3,3,2,0,0,2,[3,0]]]");
add("selser", "Magic Word: {{TALKSPACEE}} [[4]]");
add("selser", "Magic Word: {{TALKSPACEE}} [[3]]");
add("selser", "Magic Word: {{TALKSPACEE}} [[2]]");
add("selser", "Magic Word: {{SUBJECTSPACEE}} [[2]]");
add("selser", "Magic Word: {{SUBJECTSPACEE}} [[4]]");
add("selser", "Magic Word: {{SUBJECTSPACEE}} [[3]]");
add("selser", "Magic Word: {{SUBPAGENAME}} [[2]]");
add("selser", "Magic Word: {{SUBPAGENAME}} [[3]]");
add("selser", "Magic Word: {{SUBPAGENAME}} [[4]]");
add("selser", "Magic Word: {{SUBPAGENAMEE}} [[3]]");
add("selser", "Magic Word: {{SUBPAGENAMEE}} [[2]]");
add("selser", "Magic Word: {{SUBPAGENAMEE}} [[4]]");
add("selser", "Magic Word: {{ROOTPAGENAME}} [[2]]");
add("selser", "Magic Word: {{ROOTPAGENAME}} [[3]]");
add("selser", "Magic Word: {{ROOTPAGENAME}} [[4]]");
add("selser", "Magic Word: {{ROOTPAGENAMEE}} [[3]]");
add("selser", "Magic Word: {{ROOTPAGENAMEE}} [[2]]");
add("selser", "Magic Word: {{ROOTPAGENAMEE}} [[4]]");
add("selser", "Magic Word: {{BASEPAGENAME}} [[3]]");
add("selser", "Magic Word: {{BASEPAGENAME}} [[4]]");
add("selser", "Magic Word: {{BASEPAGENAME}} [[2]]");
add("selser", "Magic Word: {{BASEPAGENAMEE}} [[2]]");
add("selser", "Magic Word: {{BASEPAGENAMEE}} [[3]]");
add("selser", "Magic Word: {{BASEPAGENAMEE}} [[4]]");
add("selser", "Magic Word: {{TALKPAGENAMEE}} [[4]]");
add("selser", "Magic Word: {{TALKPAGENAMEE}} [[2]]");
add("selser", "Magic Word: {{TALKPAGENAMEE}} [[3]]");
add("selser", "Magic Word: {{SUBJECTPAGENAME}} [[4]]");
add("selser", "Magic Word: {{SUBJECTPAGENAME}} [[3]]");
add("selser", "Magic Word: {{SUBJECTPAGENAME}} [[2]]");
add("selser", "Magic Word: {{SUBJECTPAGENAMEE}} [[2]]");
add("selser", "Magic Word: {{SUBJECTPAGENAMEE}} [[3]]");
add("selser", "Magic Word: {{SUBJECTPAGENAMEE}} [[4]]");
add("selser", "Magic Word: {{REVISIONID}} [[3]]");
add("selser", "Magic Word: {{REVISIONID}} [[2]]");
add("selser", "Magic Word: {{REVISIONID}} [[4]]");
add("selser", "Magic Word: {{STYLEPATH}} [[3]]");
add("selser", "Magic Word: {{STYLEPATH}} [[4]]");
add("selser", "Magic Word: {{STYLEPATH}} [[2]]");
add("selser", "Case-sensitive magic words, when cased differently, should just be template transclusions [[4]]");
add("selser", "Case-sensitive magic words, when cased differently, should just be template transclusions [[3]]");
add("selser", "Case-sensitive magic words, when cased differently, should just be template transclusions [[2]]");
add("selser", "Nonexistent template [[4]]");
add("selser", "Nonexistent template [[2]]");
add("selser", "Nonexistent template [[3]]");
add("selser", "Template with targets containing wikilinks [0,2,1,0,0]");
add("selser", "Template with targets containing wikilinks [0,0,0,0,[3]]");
add("selser", "Template with targets containing wikilinks [0,0,3,0,2]");
add("selser", "Template with targets containing wikilinks [0,0,0,3,0]");
add("selser", "Template with targets containing wikilinks [0,0,2,0,[3]]");
add("selser", "Template with targets containing wikilinks [0,3,3,3,0]");
add("selser", "Template with targets containing wikilinks [1,4,0,0,[2]]");
add("selser", "Template with targets containing wikilinks [0,2,3,3,[4]]");
add("selser", "Template with targets containing wikilinks [0,3,4,0,[2]]");
add("selser", "Template with targets containing wikilinks [0,0,2,2,[3]]");
add("selser", "Template with targets containing wikilinks [2,3,2,0,0]");
add("selser", "msgnw keyword [[4]]");
add("selser", "msgnw keyword [[2]]");
add("selser", "msgnw keyword [[3]]");
add("selser", "2. includeonly in html attr value [[0,0,3,0,0]]");
add("selser", "2. includeonly in html attr value [[0,0,4,0,0]]");
add("selser", "2. includeonly in html attr value [2]");
add("selser", "2. includeonly in html attr value [[0,0,2,0,0]]");
add("selser", "2. includeonly in html attr value [1]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [0,4,3,3,0,0,3,1]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [0,[3],0,0,3,0,4,2]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [4,1,3,2,2,2,0,2]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [0,4,2,4,2,1,0,1]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [3,[[3]],3,2,0,4,0,4]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [1,3,0,4,0,0,0,[[[[3]]]]]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [3,2,3,2,2,0,0,[[[[2]]]]]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [1,2,0,0,4,0,0,1]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [0,1,4,0,0,0,1,[1]]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [4,3,0,2,2,0,0,[2]]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [2,3,4,2,3,0,0,0]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [4,1,0,2,0,0,3,2]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [0,3,2,4,3,3,0,4]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [0,2,4,4,4,4,2,0]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [0,3,2,0,2,4,0,2]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [2,3,2,2,0,0,0,[[4]]]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [0,1,4,0,0,0,1,[2]]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [0,[2],0,2,2,0,0,[1]]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [0,[[3]],2,0,0,4,0,[[[4]]]]");
add("selser", "Templates: HTML Tables: 5. Proper fostering of categories from inside [0,4,4,0,0,3,2,[3]]");
add("selser", "pre-save transform: nonexistent template [[4]]");
add("selser", "pre-save transform: nonexistent template [[3]]");
add("selser", "pre-save transform: nonexistent template [[2]]");
add("selser", "pre-save transform: mixed tag case [2]");
add("selser", "pre-save transform: mixed tag case [[[3]]]");
add("selser", "pre-save transform: mixed tag case [[[4]]]");
add("selser", "pre-save transform: mixed tag case [1]");
add("selser", "pre-save transform: mixed tag case [[2]]");
add("selser", "pre-save transform: mixed tag case [[[2]]]");
add("selser", "pre-save transform: Signature expansion [2]");
add("selser", "pre-save transform: Signature expansion [[4,3,[3,3,0,4],4,4,0,2]]");
add("selser", "pre-save transform: Signature expansion [1]");
add("selser", "pre-save transform: Signature expansion [[2,4,3,0,0,0,4]]");
add("selser", "pre-save transform: Signature expansion [[2,0,[3,0,4,2],2,[4,0,0],0,3]]");
add("selser", "pre-save transform: Signature expansion [[3,0,2,3,3,0,[4,3,0,4]]]");
add("selser", "pre-save transform: Signature expansion [[[2],2,[0,0,4,4],4,[0,3,0],2,2]]");
add("selser", "pre-save transform: Signature expansion [[0,4,[0,0,3,0],4,[2,0,2],3,[0,2,0,1]]]");
add("selser", "pre-save transform: Signature expansion [[[4],0,[3,3,4,1],0,[4,0,0],2,4]]");
add("selser", "pre-save transform: Signature expansion [[[4],0,[4,2,0,4],3,[3,2,0],3,4]]");
add("selser", "pre-save transform: Signature expansion [[2,0,1,0,2,0,[4,4,3,0]]]");
add("selser", "pre-save transform: Signature expansion [[2,0,3,0,[2,0,0],0,[0,4,0,0]]]");
add("selser", "pre-save transform: Signature expansion [[3,3,2,0,1,0,4]]");
add("selser", "pre-save transform: Signature expansion [[0,3,3,0,[4,3,4],3,[3,4,0,1]]]");
add("selser", "pre-save transform: Signature expansion [[1,3,[3,0,3,0],0,4,0,3]]");
add("selser", "pre-save transform: Signature expansion in nowiki tags (bug 93) [[3],3,2,0,0,3,0,[4,3,2],0,2,4,0,0,[0,0,0,4,0,0,0,0],0,0]");
add("selser", "pre-save transform: Signature expansion in nowiki tags (bug 93) [2,0,4,2,3,1,3,3,0,[0,[4],0],0,0,0,[0,2,0,1,2,0,0,0],0,0]");
add("selser", "pre-save transform: Signature expansion in nowiki tags (bug 93) [0,3,1,0,3,2,2,[1,4,3],0,[4,[4],0],2,[0,3],3,4,4,2]");
add("selser", "pre-save transform: Signature expansion in nowiki tags (bug 93) [4,2,4,2,4,0,0,1,0,[0,1,1],0,[0,3],2,3,2,2]");
add("selser", "pre-save transform: Signature expansion in nowiki tags (bug 93) [1,3,3,3,0,0,0,[0,3,0],0,[0,2,0],0,2,2,2,4,4]");
add("selser", "pre-save transform: Signature expansion in nowiki tags (bug 93) [3,2,[[3]],0,4,0,2,2,4,2,3,0,2,3,3,[2,1,3]]");
add("selser", "pre-save transform: Signature expansion in nowiki tags (bug 93) [4,4,2,0,3,0,0,[1,[3],0],0,4,3,0,0,2,0,[2,2,0]]");
add("selser", "pre-save transform: Signature expansion in nowiki tags (bug 93) [4,0,[1],0,3,0,3,3,2,[4,2,3],2,1,0,[0,2,0,1,2,2,0,0],0,2]");
add("selser", "pre-save transform: Signature expansion in nowiki tags (bug 93) [1,3,[2],0,0,0,2,0,0,2,0,0,3,2,0,[0,2,2]]");
add("selser", "Image with multiple captions -- only last one is accepted (parsoid) [[0,[4]]]");
add("selser", "Image with multiple captions -- only last one is accepted (parsoid) [[0,[2]]]");
add("selser", "Image with multiple captions -- only last one is accepted (parsoid) [[0,[3]]]");
add("selser", "SVG thumbnails with language de [[0,[2]]]");
add("selser", "SVG thumbnails with language de [[0,[4]]]");
add("selser", "SVG thumbnails with language de [[0,[3]]]");
add("selser", "SVG thumbnails with invalid language code [[0,[2]]]");
add("selser", "SVG thumbnails with invalid language code [[0,[4]]]");
add("selser", "SVG thumbnails with invalid language code [[0,[3]]]");
add("selser", "BUG 561: {{/Subpage}} [[3]]");
add("selser", "BUG 561: {{/Subpage}} [[4]]");
add("selser", "BUG 561: {{/Subpage}} [[2]]");
add("selser", "Handling of sections up to level 6 and beyond [1,2,1,2,1,0,[3],2,2,4,[2],4,0,0,1,0,0,3,1]");
add("selser", "Handling of sections up to level 6 and beyond [[2],0,3,3,4,4,4,3,0,2,1,0,4,2,[3],0,[3],4,4]");
add("selser", "Handling of sections up to level 6 and beyond [1,0,1,0,0,3,2,3,0,0,4,0,[4],0,1,0,0,4,0]");
add("selser", "Handling of sections up to level 6 and beyond [1,0,1,4,3,2,3,4,0,0,0,0,0,0,[2],4,0,0,0]");
add("selser", "Handling of sections up to level 6 and beyond [2,2,[4],3,[3],3,[2],3,0,2,3,0,[4],3,1,2,3,0,2]");
add("selser", "Handling of sections up to level 6 and beyond [3,0,0,0,0,4,[3],0,[2],2,0,0,[4],3,[2],0,3,0,[4]]");
add("selser", "Handling of sections up to level 6 and beyond [1,0,[4],0,4,0,0,0,0,2,0,0,0,3,2,3,3,0,3]");
add("selser", "Handling of sections up to level 6 and beyond [[3],0,4,4,[4],0,4,0,[2],2,1,0,0,2,2,2,[3],0,3]");
add("selser", "Handling of sections up to level 6 and beyond [[4],4,2,0,0,3,2,4,[2],3,[3],0,[4],0,0,4,[2],4,3]");
add("selser", "Handling of sections up to level 6 and beyond [4,0,[3],0,3,3,[2],2,4,0,4,4,3,4,0,0,2,2,2]");
add("selser", "Handling of sections up to level 6 and beyond [1,3,1,0,0,0,4,0,0,3,[3],0,3,4,2,0,0,4,[4]]");
add("selser", "Handling of sections up to level 6 and beyond [3,4,0,0,[3],0,2,2,0,3,1,0,2,2,[2],3,4,3,0]");
add("selser", "Handling of sections up to level 6 and beyond [0,0,4,0,1,2,[3],0,2,0,[4],3,[3],2,[4],0,2,2,[2]]");
add("selser", "Handling of sections up to level 6 and beyond [3,0,3,0,4,4,2,0,1,4,0,3,[3],0,4,4,[4],0,2]");
add("selser", "Handling of sections up to level 6 and beyond [[2],0,3,0,[4],4,0,3,0,2,0,0,1,0,0,2,[4],3,0]");
add("selser", "Handling of sections up to level 6 and beyond [[3],0,2,0,[3],0,2,0,3,3,2,0,2,3,0,0,3,3,3]");
add("selser", "Handling of sections up to level 6 and beyond [0,0,1,3,1,3,4,2,[2],3,3,4,1,0,0,2,0,4,1]");
add("selser", "Handling of sections up to level 6 and beyond [0,0,4,0,4,0,0,0,4,0,0,2,[3],4,0,0,[3],0,3]");
add("selser", "Handling of sections up to level 6 and beyond [0,0,1,4,4,4,[2],4,1,0,[4],0,[2],4,[4],0,[3],0,[4]]");
add("selser", "Handling of sections up to level 6 and beyond [[4],2,3,2,3,2,1,2,1,2,2,4,4,0,1,0,[4],0,[4]]");
add("selser", "div with single-quoted attribute [2]");
add("selser", "div with single-quoted attribute [[4]]");
add("selser", "div with single-quoted attribute [[2]]");
add("selser", "div with single-quoted attribute [[3]]");
add("selser", "div with unquoted attribute [2]");
add("selser", "div with unquoted attribute [[4]]");
add("selser", "div with unquoted attribute [[3]]");
add("selser", "div with unquoted attribute [[2]]");
add("selser", "div with illegal double attributes [2]");
add("selser", "div with illegal double attributes [[4]]");
add("selser", "div with illegal double attributes [[3]]");
add("selser", "div with illegal double attributes [[2]]");
add("selser", "div with empty attribute value, space before equals [[2]]");
add("selser", "div with empty attribute value, space before equals [2]");
add("selser", "div with empty attribute value, space before equals [[4]]");
add("selser", "div with empty attribute value, space before equals [[3]]");
add("selser", "div with empty attribute value, no space before equals [[4]]");
add("selser", "div with empty attribute value, no space before equals [[2]]");
add("selser", "div with empty attribute value, no space before equals [[3]]");
add("selser", "div with empty attribute value, no space before equals [2]");
add("selser", "HTML multiple attributes correction [2]");
add("selser", "HTML multiple attributes correction [[3]]");
add("selser", "HTML multiple attributes correction [[4]]");
add("selser", "HTML multiple attributes correction [[2]]");
add("selser", "Table multiple attributes correction [2]");
add("selser", "Table multiple attributes correction [1]");
add("selser", "Table multiple attributes correction [[4,[[[2]],0]]]");
add("selser", "Table multiple attributes correction [[0,2]]");
add("selser", "Table multiple attributes correction [[2,[1,2]]]");
add("selser", "Table multiple attributes correction [[0,[1,3]]]");
add("selser", "Table multiple attributes correction [[3,1]]");
add("selser", "Table multiple attributes correction [[4,1]]");
add("selser", "Table multiple attributes correction [[2,1]]");
add("selser", "Table multiple attributes correction [[3,2]]");
add("selser", "Table multiple attributes correction [[0,[2,0]]]");
add("selser", "Media link with nasty text\nfixme: doBlockLevels won't wrap this in a paragraph because it contains a div [[0,2]]");
add("selser", "Media link with nasty text\nfixme: doBlockLevels won't wrap this in a paragraph because it contains a div [2]");
add("selser", "Media link with nasty text\nfixme: doBlockLevels won't wrap this in a paragraph because it contains a div [1]");
add("selser", "Media link with nasty text\nfixme: doBlockLevels won't wrap this in a paragraph because it contains a div [[4,0]]");
add("selser", "Media link with nasty text\nfixme: doBlockLevels won't wrap this in a paragraph because it contains a div [[2,2]]");
add("selser", "Media link with nasty text\nfixme: doBlockLevels won't wrap this in a paragraph because it contains a div [[0,[2]]]");
add("selser", "Media link with nasty text\nfixme: doBlockLevels won't wrap this in a paragraph because it contains a div [[4,2]]");
add("selser", "Media link with nasty text\nfixme: doBlockLevels won't wrap this in a paragraph because it contains a div [[2,[3]]]");
add("selser", "Media link with nasty text\nfixme: doBlockLevels won't wrap this in a paragraph because it contains a div [[3,0]]");
add("selser", "Media link with nasty text\nfixme: doBlockLevels won't wrap this in a paragraph because it contains a div [[2,[4]]]");
add("selser", "Empty attribute crash test (bug 2067) [[[4]]]");
add("selser", "Empty attribute crash test (bug 2067) [1]");
add("selser", "Empty attribute crash test (bug 2067) [[[2]]]");
add("selser", "Empty attribute crash test (bug 2067) [2]");
add("selser", "Empty attribute crash test (bug 2067) [[[3]]]");
add("selser", "Empty attribute crash test (bug 2067) [[2]]");
add("selser", "Empty attribute crash test single-quotes (bug 2067) [1]");
add("selser", "Empty attribute crash test single-quotes (bug 2067) [[[2]]]");
add("selser", "Empty attribute crash test single-quotes (bug 2067) [2]");
add("selser", "Empty attribute crash test single-quotes (bug 2067) [[[4]]]");
add("selser", "Empty attribute crash test single-quotes (bug 2067) [[2]]");
add("selser", "Empty attribute crash test single-quotes (bug 2067) [[[3]]]");
add("selser", "Attribute test: equals, then nothing [[[2]]]");
add("selser", "Attribute test: equals, then nothing [1]");
add("selser", "Attribute test: equals, then nothing [[2]]");
add("selser", "Attribute test: equals, then nothing [2]");
add("selser", "Attribute test: equals, then nothing [[[4]]]");
add("selser", "Attribute test: equals, then nothing [[[3]]]");
add("selser", "Attribute test: unquoted value [2]");
add("selser", "Attribute test: unquoted value [[[3]]]");
add("selser", "Attribute test: unquoted value [[[2]]]");
add("selser", "Attribute test: unquoted value [1]");
add("selser", "Attribute test: unquoted value [[2]]");
add("selser", "Attribute test: unquoted value [[[4]]]");
add("selser", "Attribute test: unquoted but illegal value (hash) [[2]]");
add("selser", "Attribute test: unquoted but illegal value (hash) [1]");
add("selser", "Attribute test: unquoted but illegal value (hash) [[[2]]]");
add("selser", "Attribute test: unquoted but illegal value (hash) [2]");
add("selser", "Attribute test: unquoted but illegal value (hash) [[[3]]]");
add("selser", "Attribute test: unquoted but illegal value (hash) [[[4]]]");
add("selser", "Bug 2095: link with pipe and three closing brackets, version 2 [[0,4]]");
add("selser", "Bug 2095: link with pipe and three closing brackets, version 2 [1]");
add("selser", "Bug 2095: link with pipe and three closing brackets, version 2 [2]");
add("selser", "Bug 2095: link with pipe and three closing brackets, version 2 [[3,[2]]]");
add("selser", "Bug 2095: link with pipe and three closing brackets, version 2 [[0,[2]]]");
add("selser", "Bug 2095: link with pipe and three closing brackets, version 2 [[0,[4]]]");
add("selser", "Bug 2095: link with pipe and three closing brackets, version 2 [[2,3]]");
add("selser", "Bug 2095: link with pipe and three closing brackets, version 2 [[3,2]]");
add("selser", "Bug 2095: link with pipe and three closing brackets, version 2 [[0,1]]");
add("selser", "Bug 2095: link with pipe and three closing brackets, version 2 [[1,[3]]]");
add("selser", "Bug 2095: link with pipe and three closing brackets, version 2 [[2,0]]");
add("selser", "Bug 2095: link with pipe and three closing brackets, version 2 [[2,4]]");
add("selser", "Bug 2095: link with pipe and three closing brackets, version 2 [[4,0]]");
add("selser", "Table attribute legitimate extension [[0,1]]");
add("selser", "Table attribute legitimate extension [[0,[1,4]]]");
add("selser", "Table attribute legitimate extension [2]");
add("selser", "Table attribute legitimate extension [[3,2]]");
add("selser", "Table attribute legitimate extension [[2,[[2],0]]]");
add("selser", "Table attribute legitimate extension [1]");
add("selser", "Table attribute legitimate extension [[0,[[[2]],2]]]");
add("selser", "Table attribute legitimate extension [[2,[1,4]]]");
add("selser", "Table attribute legitimate extension [[2,[[[2]],0]]]");
add("selser", "Table attribute legitimate extension [[2,1]]");
add("selser", "Table attribute safety [[4,1]]");
add("selser", "Table attribute safety [[4,[0,2]]]");
add("selser", "Table attribute safety [[3,2]]");
add("selser", "Table attribute safety [1]");
add("selser", "Table attribute safety [2]");
add("selser", "Table attribute safety [[0,2]]");
add("selser", "Table attribute safety [[0,[[[2]],0]]]");
add("selser", "Table attribute safety [[0,[2,0]]]");
add("selser", "Table attribute safety [[0,[0,3]]]");
add("selser", "Table attribute safety [[0,[1,2]]]");
add("selser", "Sanitizer: Closing of closed but not open tags [2]");
add("selser", "Sanitizer: Closing of closed but not open table tags [2]");
add("selser", "Sanitizer: Closing of closed but not open table tags [4]");
add("selser", "Sanitizer: Closing of closed but not open table tags [3]");
add("selser", "Sanitizer: Validating the contents of the id attribute (bug 4515) [1]");
add("selser", "Sanitizer: Validating the contents of the id attribute (bug 4515) [2]");
add("selser", "Sanitizer: Validating the contents of the id attribute (bug 4515) [[2]]");
add("selser", "Sanitizer: Validating that <meta> and <link> work, but only for Microdata [[2,[0,0,2,0,0,0,0],0]]");
add("selser", "Sanitizer: Validating that <meta> and <link> work, but only for Microdata [2]");
add("selser", "Sanitizer: Validating that <meta> and <link> work, but only for Microdata [[0,[2,0,2,0,0,0,3],3]]");
add("selser", "Sanitizer: Validating that <meta> and <link> work, but only for Microdata [[4,[3,0,0,0,0,0,0],0]]");
add("selser", "Sanitizer: Validating that <meta> and <link> work, but only for Microdata [[0,[0,0,4,0,0,0,0],2]]");
add("selser", "Sanitizer: Validating that <meta> and <link> work, but only for Microdata [[0,[4,0,3,0,0,0,0],0]]");
add("selser", "Sanitizer: Validating that <meta> and <link> work, but only for Microdata [[0,[2,0,0,0,0,0,0],0]]");
add("selser", "Sanitizer: Validating that <meta> and <link> work, but only for Microdata [[0,[0,0,0,0,3,0,3],0]]");
add("selser", "Sanitizer: Validating that <meta> and <link> work, but only for Microdata [1]");
add("selser", "Sanitizer: Validating that <meta> and <link> work, but only for Microdata [[2,2,0]]");
add("selser", "Sanitizer: Validating that <meta> and <link> work, but only for Microdata [[3,[0,0,4,0,3,0,0],4]]");
add("selser", "Sanitizer: Validating that <meta> and <link> work, but only for Microdata [[0,2,0]]");
add("selser", "Fuzz testing: Parser13 [2]");
add("selser", "Fuzz testing: Parser13 [1]");
add("selser", "Fuzz testing: Parser13 [[2,2]]");
add("selser", "Fuzz testing: Parser13 [[4,2]]");
add("selser", "Fuzz testing: Parser13 [[0,1]]");
add("selser", "Fuzz testing: Parser13 [[0,2]]");
add("selser", "Fuzz testing: Parser13 [[0,[1]]]");
add("selser", "Fuzz testing: Parser13 [[4,[1]]]");
add("selser", "Fuzz testing: Parser13 [[4,0]]");
add("selser", "Fuzz testing: Parser13 [[2,0]]");
add("selser", "Fuzz testing: Parser14-table [1,0,0]");
add("selser", "Fuzz testing: Parser14-table [4,4,0]");
add("selser", "Fuzz testing: Parser14-table [0,2,0]");
add("selser", "Fuzz testing: Parser14-table [4,0,0]");
add("selser", "Fuzz testing: Parser14-table [1,0,2]");
add("selser", "Fuzz testing: Parser14-table [[3],0,0]");
add("selser", "Fuzz testing: Parser14-table [3,0,0]");
add("selser", "Fuzz testing: Parser14-table [1,2,2]");
add("selser", "Fuzz testing: Parser14-table [2,4,2]");
add("selser", "Fuzz testing: Parser14-table [4,0,2]");
add("selser", "Fuzz testing: Parser14-table [[2],3,0]");
add("selser", "Fuzz testing: Parser14-table [2,4,0]");
add("selser", "Fuzz testing: Parser14-table [0,4,0]");
add("selser", "Fuzz testing: Parser16 [2]");
add("selser", "Fuzz testing: Parser16 [[0,[[0,2,0,0]]]]");
add("selser", "Fuzz testing: Parser16 [[0,[[[3],0,2,4]]]]");
add("selser", "Fuzz testing: Parser16 [[0,[[0,2,4,2]]]]");
add("selser", "Fuzz testing: Parser21 [[0,[[[4,[4],0],0,0]]]]");
add("selser", "Fuzz testing: Parser21 [2]");
add("selser", "Fuzz testing: Parser22 [[4],0,0]");
add("selser", "Fuzz testing: Parser22 [1,2,2]");
add("selser", "Fuzz testing: Parser22 [1,3,0]");
add("selser", "Fuzz testing: Parser22 [[1],0,0]");
add("selser", "Fuzz testing: Parser22 [[[3]],0,0]");
add("selser", "Fuzz testing: Parser22 [2,0,0]");
add("selser", "Fuzz testing: Parser22 [3,2,2]");
add("selser", "Fuzz testing: Parser22 [[4],0,2]");
add("selser", "Fuzz testing: Parser22 [[2],0,0]");
add("selser", "Fuzz testing: Parser22 [[1],4,2]");
add("selser", "Fuzz testing: Parser22 [3,0,0]");
add("selser", "Fuzz testing: Parser22 [1,0,2]");
add("selser", "Fuzz testing: Parser24 [[0,2],3]");
add("selser", "Fuzz testing: Parser24 [[[4],3],[0,0,3]]");
add("selser", "Fuzz testing: Parser24 [3,2]");
add("selser", "Fuzz testing: Parser24 [[[3],0],2]");
add("selser", "Fuzz testing: Parser24 [2,4]");
add("selser", "Fuzz testing: Parser24 [0,2]");
add("selser", "Fuzz testing: Parser24 [1,2]");
add("selser", "Fuzz testing: Parser24 [[3,0],2]");
add("selser", "Fuzz testing: Parser24 [[1,2],2]");
add("selser", "Fuzz testing: Parser25 (bug 6055) [2]");
add("selser", "Fuzz testing: Parser25 (bug 6055) [1]");
add("selser", "Fuzz testing: Parser25 (bug 6055) [[0,2,2]]");
add("selser", "Fuzz testing: Parser25 (bug 6055) [[0,3,0]]");
add("selser", "Fuzz testing: Parser25 (bug 6055) [[0,0,[3]]]");
add("selser", "Fuzz testing: Parser25 (bug 6055) [[0,0,2]]");
add("selser", "Fuzz testing: Parser25 (bug 6055) [[0,3,2]]");
add("selser", "Fuzz testing: Parser25 (bug 6055) [[0,4,2]]");
add("selser", "Fuzz testing: Parser25 (bug 6055) [[0,0,[4]]]");
add("selser", "Fuzz testing: Parser25 (bug 6055) [[0,2,[2]]]");
add("selser", "Fuzz testing: Parser25 (bug 6055) [[0,4,0]]");
add("selser", "Fuzz testing: Parser25 (bug 6055) [[0,2,0]]");
add("selser", "Correct handling of <td>, <tr> (Bug 6171) [[2,[[2,0,0,2,0,[3],3],2]]]");
add("selser", "Inline wiki vs wiki block nesting [2,0,1]");
add("selser", "Inline wiki vs wiki block nesting [1,3,[3]]");
add("selser", "Inline wiki vs wiki block nesting [[[2]],4,3]");
add("selser", "Inline wiki vs wiki block nesting [[[4]],0,1]");
add("selser", "Inline wiki vs wiki block nesting [[[4]],0,[3]]");
add("selser", "Inline wiki vs wiki block nesting [0,0,4]");
add("selser", "Inline wiki vs wiki block nesting [0,3,[4]]");
add("selser", "Inline wiki vs wiki block nesting [[2],4,2]");
add("selser", "Inline wiki vs wiki block nesting [0,0,2]");
add("selser", "Inline wiki vs wiki block nesting [[[3]],0,[3]]");
add("selser", "Mixing markup for italics and bold [[4,2,3]]");
add("selser", "Mixing markup for italics and bold [1]");
add("selser", "Mixing markup for italics and bold [2]");
add("selser", "Mixing markup for italics and bold [[2,[4],[0,[4]]]]");
add("selser", "Mixing markup for italics and bold [[0,0,[4,[4]]]]");
add("selser", "Mixing markup for italics and bold [[0,2,1]]");
add("selser", "Mixing markup for italics and bold [[0,0,4]]");
add("selser", "Mixing markup for italics and bold [[3,[3],[4,0]]]");
add("selser", "Mixing markup for italics and bold [[2,0,[3,[2]]]]");
add("selser", "Mixing markup for italics and bold [[2,2,[3,0]]]");
add("selser", "Transclusion of default MediaWiki message [[2]]");
add("selser", "Transclusion of default MediaWiki message [[4]]");
add("selser", "Transclusion of default MediaWiki message [[3]]");
add("selser", "Transclusion of nonexistent MediaWiki message [[2]]");
add("selser", "Transclusion of nonexistent MediaWiki message [[4]]");
add("selser", "Transclusion of nonexistent MediaWiki message [[3]]");
add("selser", "Transclusion of MediaWiki message with underscore [[2]]");
add("selser", "Transclusion of MediaWiki message with underscore [[3]]");
add("selser", "Transclusion of MediaWiki message with underscore [[4]]");
add("selser", "Transclusion of MediaWiki message with space [[3]]");
add("selser", "Transclusion of MediaWiki message with space [[4]]");
add("selser", "Transclusion of MediaWiki message with space [[2]]");
add("selser", "Handling of &#x0A; in URLs [[[2]]]");
add("selser", "Handling of &#x0A; in URLs [[[[2]]]]");
add("selser", "Handling of &#x0A; in URLs [[[1]]]");
add("selser", "Handling of &#x0A; in URLs [[1]]");
add("selser", "5 quotes, code coverage +1 line (parsoid) [2]");
add("selser", "5 quotes, code coverage +1 line (parsoid) [[1]]");
add("selser", "5 quotes, code coverage +1 line (parsoid) [1]");
add("selser", "5 quotes, code coverage +1 line (parsoid) [[[2]]]");
add("selser", "5 quotes, code coverage +1 line (parsoid) [[2]]");
add("selser", "Say the magic word [[0,0,4,0,[4,0],0,0,0,3,4,1,0,[3],3,0,3,[3],4,1,4,0,0,[4],0,4,4,0,0,1,0,[3,0],2,[4,0],0,[3,0],0,3,0,4,3,1,0,1]]");
add("selser", "Say the magic word [[0,0,[3,0],3,[3,0],0,[2,0],0,[4],4,3,3,0,0,[3],0,0,4,[3],2,2,4,3,2,0,3,0,0,[4,0],3,[3,0],3,1,4,4,3,2,2,[4,0],2,[2],3,0]]");
add("selser", "Say the magic word [2]");
add("selser", "Say the magic word [1]");
add("selser", "Say the magic word [[[2,0],4,0,0,[4,0],4,1,3,0,0,1,0,2,3,1,3,4,0,1,4,3,4,[2],0,3,0,3,3,[4,0],0,0,4,3,2,0,0,[2],0,2,4,2,2,0]]");
add("selser", "Say the magic word [[[2,0],0,2,3,[3,0],4,2,0,0,4,3,0,0,2,[4],0,0,0,0,2,3,4,[4],0,3,0,0,3,2,2,3,0,1,4,3,3,4,2,0,3,4,4,3]]");
add("selser", "Say the magic word [[2,2,0,4,[2,0],0,[2,0],0,0,3,4,0,3,3,0,0,0,0,4,2,0,0,[3],4,4,3,[4],3,1,0,[3,0],0,[3,0],2,[2,0],2,[4],4,1,3,0,0,[4]]]");
add("selser", "Say the magic word [[1,2,0,0,0,4,0,4,0,3,0,4,0,2,2,0,1,3,1,4,[4,0],3,[2],3,0,0,3,0,[2,0],0,4,0,[4,0],0,0,0,2,2,0,0,0,4,0]]");
add("selser", "Say the magic word [[[4,0],4,4,0,0,0,3,2,[4],2,0,2,0,0,[2],0,2,4,4,3,0,0,[4],0,0,0,1,2,[4,0],0,[3,0],0,[3,0],2,[3,0],2,[4],0,0,0,3,4,[4]]]");
add("selser", "Say the magic word [[[3,0],3,3,0,[2,0],2,0,0,[3],3,0,0,4,2,2,4,0,0,4,4,[2,0],0,4,3,[3],2,4,2,0,0,4,0,1,0,0,0,4,0,3,0,0,3,1]]");
add("selser", "Say the magic word [[3,2,1,0,0,2,0,4,[2],2,4,2,4,2,3,4,0,3,0,4,[3,0],2,0,0,3,4,3,4,[2,0],0,4,3,2,4,0,0,0,4,1,0,[2],2,[3]]]");
add("selser", "Say the magic word [[0,0,0,0,[2,0],0,[3,0],0,2,4,1,0,0,2,4,0,0,0,2,0,0,0,0,0,[4],0,4,2,3,0,2,3,0,2,2,0,0,2,[4,0],3,1,3,3]]");
add("selser", "Say the magic word [[[3,0],0,3,3,[4,0],2,4,0,[2],3,[3],2,2,0,3,0,[2],0,3,0,3,0,1,4,3,0,0,0,[2,0],0,1,3,0,4,3,0,0,0,3,2,4,4,4]]");
add("selser", "Say the magic word [[2,0,[2,0],2,1,0,0,0,4,3,0,2,1,4,2,0,[4],0,2,3,3,3,0,0,2,3,4,0,2,3,3,0,0,3,2,2,[3],2,[3,0],3,0,0,1]]");
add("selser", "Say the magic word [[4,3,2,0,[4,0],0,0,0,3,2,0,2,1,2,4,2,[4],0,4,2,0,4,[2],0,0,3,[4],3,0,4,3,2,3,2,[3,0],0,1,0,2,0,0,0,0]]");
add("selser", "Say the magic word [[[3,0],4,2,0,[2,0],3,0,3,0,0,3,2,[2],0,[2],0,[2],4,[3],3,0,3,2,0,2,4,0,2,[3,0],0,1,2,[4,0],0,[3,0],0,1,2,0,0,4,0,0]]");
add("selser", "Say the magic word [[0,0,[2,0],2,0,0,[3,0],0,0,0,2,3,4,0,3,3,[4],0,2,3,4,3,3,3,3,0,0,4,[3,0],3,4,0,[3,0],0,4,0,2,0,1,0,3,0,2]]");
add("selser", "Say the magic word [[3,0,1,0,[3,0],4,[4,0],0,3,4,1,3,1,0,0,0,0,0,3,0,3,4,3,0,1,0,0,4,[2,0],4,4,0,2,0,4,2,[3],0,3,2,[3],3,[2]]]");
add("selser", "ISBN code coverage [2]");
add("selser", "ISBN code coverage [[[3],2,0]]");
add("selser", "ISBN code coverage [1]");
add("selser", "ISBN code coverage [[[4],2,0]]");
add("selser", "ISBN code coverage [[[4],3,4]]");
add("selser", "ISBN code coverage [[0,[2],2]]");
add("selser", "ISBN code coverage [[0,3,0]]");
add("selser", "ISBN code coverage [[2,4,3]]");
add("selser", "ISBN code coverage [[[3],4,0]]");
add("selser", "ISBN code coverage [[2,0,4]]");
add("selser", "ISBN code coverage [[[2],1,2]]");
add("selser", "ISBN code coverage [[[2],4,0]]");
add("selser", "RFC code coverage [[[2],3,2]]");
add("selser", "RFC code coverage [2]");
add("selser", "RFC code coverage [[2,0,4]]");
add("selser", "RFC code coverage [[0,[4],0]]");
add("selser", "RFC code coverage [1]");
add("selser", "RFC code coverage [[0,[2],4]]");
add("selser", "RFC code coverage [[0,2,0]]");
add("selser", "RFC code coverage [[2,1,0]]");
add("selser", "RFC code coverage [[[3],[2],4]]");
add("selser", "RFC code coverage [[[2],2,0]]");
add("selser", "RFC code coverage [[[2],[3],3]]");
add("selser", "dt/dd/dl test [[1]]");
add("selser", "dt/dd/dl test [[[1]]]");
add("selser", "dt/dd/dl test [[[[[1]]]]]");
add("selser", "dt/dd/dl test [[[[[[2]]]]]]");
add("selser", "dt/dd/dl test [[[[1]]]]");
add("selser", "dt/dd/dl test [[[2]]]");
add("selser", "Images with the \"|\" character in the comment [[0,[4]]]");
add("selser", "Images with the \"|\" character in the comment [[0,[2]]]");
add("selser", "Images with the \"|\" character in the comment [[0,[3]]]");
add("selser", "Transclusion of a sibling page (one level up) [[4]]");
add("selser", "Transclusion of a sibling page (one level up) [[2]]");
add("selser", "Transclusion of a sibling page (one level up) [[3]]");
add("selser", "Transclusion of a child page [[3]]");
add("selser", "Transclusion of a child page [[4]]");
add("selser", "Transclusion of a child page [[2]]");
add("selser", "Non-transclusion because of too many up levels [[4]]");
add("selser", "Non-transclusion because of too many up levels [[3]]");
add("selser", "Non-transclusion because of too many up levels [[2]]");
add("selser", "Definition list code coverage [[1,1,4,[0,3],4,0,2,0]]");
add("selser", "Don't fall for the self-closing div [[4]]");
add("selser", "Don't fall for the self-closing div [[3]]");
add("selser", "Don't fall for the self-closing div [2]");
add("selser", "Don't fall for the self-closing div [[2]]");
add("selser", "MSGNW magic word [[3]]");
add("selser", "MSGNW magic word [[2]]");
add("selser", "MSGNW magic word [[4]]");
add("selser", "RAW magic word [[3]]");
add("selser", "RAW magic word [[2]]");
add("selser", "RAW magic word [[4]]");
add("selser", "Parsing of overlapping (improperly nested) inline html tags (Parsoid) [2]");
add("selser", "Parsing of overlapping (improperly nested) inline html tags (Parsoid) [[[[3]]]]");
add("selser", "Parsing of overlapping (improperly nested) inline html tags (Parsoid) [[[[2]]]]");
add("selser", "Parsing of overlapping (improperly nested) inline html tags (Parsoid) [[[[4]]]]");
add("selser", "Simple template in language variants [[2]]");
add("selser", "Simple template in language variants [[4]]");
add("selser", "Simple template in language variants [[3]]");
add("selser", "Template with explicit namespace in language variants [[4]]");
add("selser", "Template with explicit namespace in language variants [[3]]");
add("selser", "Template with explicit namespace in language variants [[2]]");
add("selser", "Basic test for template parameter in language variants [[4]]");
add("selser", "Basic test for template parameter in language variants [[3]]");
add("selser", "Basic test for template parameter in language variants [[2]]");
add("selser", "Case insensitivity of parser functions for non-ASCII characters (bug 8143) [[4]]");
add("selser", "Case insensitivity of parser functions for non-ASCII characters (bug 8143) [[3]]");
add("selser", "Case insensitivity of parser functions for non-ASCII characters (bug 8143) [[2]]");
add("selser", "Free external link invading image caption [[0,[4]]]");
add("selser", "Free external link invading image caption [[0,[3]]]");
add("selser", "Free external link invading image caption [[0,[2]]]");
add("selser", "preload: check that it doesn't try to do tricks [[2]]");
add("selser", "preload: check that it doesn't try to do tricks [2]");
add("selser", "preload: check that it doesn't try to do tricks [[[4,0,0,1,4,0]]]");
add("selser", "preload: check that it doesn't try to do tricks [[[2,0,0,4,0,0]]]");
add("selser", "preload: check that it doesn't try to do tricks [[[0,0,0,4,0,0]]]");
add("selser", "preload: check that it doesn't try to do tricks [[[4,3,2,0,4,0]]]");
add("selser", "preload: check that it doesn't try to do tricks [1]");
add("selser", "preload: check that it doesn't try to do tricks [[[0,0,4,0,0,0]]]");
add("selser", "preload: check that it doesn't try to do tricks [[[0,0,0,2,0,0]]]");
add("selser", "preload: check that it doesn't try to do tricks [[[3,0,0,2,2,0]]]");
add("selser", "preload: check that it doesn't try to do tricks [[[0,4,0,3,3,0]]]");
add("selser", "preload: check that it doesn't try to do tricks [[[0,4,0,2,0,0]]]");
add("selser", "preload: check that it doesn't try to do tricks [[[0,2,2,[3],3,0]]]");
add("selser", "preload: check that it doesn't try to do tricks [[[0,4,0,3,4,0]]]");
add("selser", "preload: check that it doesn't try to do tricks [[[2,4,2,3,0,0]]]");
add("selser", "preload: check that it doesn't try to do tricks [[[4,0,3,1,0,0]]]");
add("selser", "HTML5 data attributes [4,2,[2]]");
add("selser", "HTML5 data attributes [1,2,0]");
add("selser", "HTML5 data attributes [[4],3,2]");
add("selser", "HTML5 data attributes [[2],3,[4]]");
add("selser", "HTML5 data attributes [[3],3,[4]]");
add("selser", "HTML5 data attributes [[[2]],3,0]");
add("selser", "HTML5 data attributes [3,2,2]");
add("selser", "HTML5 data attributes [3,0,0]");
add("selser", "HTML5 data attributes [2,0,2]");
add("selser", "HTML5 data attributes [[4],0,0]");
add("selser", "percent-encoding and + signs in internal links (Bug 26410) [[0,2,3,2,1,2,[3],4,1,0,1,2,0,0,0,3,0,3,1,0,[4]]]");
add("selser", "percent-encoding and + signs in internal links (Bug 26410) [[[2],4,0,0,2,0,0,0,3,0,0,3,1,0,2,0,0,3,[2],4,0]]");
add("selser", "percent-encoding and + signs in internal links (Bug 26410) [[4,2,0,4,0,0,1,0,4,0,[2],0,[3],0,3,0,0,0,0,3,3]]");
add("selser", "percent-encoding and + signs in internal links (Bug 26410) [[4,0,[3],0,0,0,4,2,1,0,3,0,[4],4,4,0,0,0,2,0,3]]");
add("selser", "percent-encoding and + signs in internal links (Bug 26410) [[2,0,0,0,0,0,[3],0,3,4,3,0,0,4,1,4,0,4,[4],0,1]]");
add("selser", "percent-encoding and + signs in internal links (Bug 26410) [[[2],0,3,0,1,0,0,0,1,0,0,2,0,0,0,0,0,0,0,4,[3]]]");
add("selser", "percent-encoding and + signs in internal links (Bug 26410) [1]");
add("selser", "percent-encoding and + signs in internal links (Bug 26410) [2]");
add("selser", "percent-encoding and + signs in internal links (Bug 26410) [[4,0,0,4,0,4,2,0,[3],0,0,0,[4],3,0,4,0,2,4,2,4]]");
add("selser", "percent-encoding and + signs in internal links (Bug 26410) [[1,0,2,0,0,0,[3],4,0,2,[3],0,3,4,1,4,0,4,[2],0,2]]");
add("selser", "percent-encoding and + signs in internal links (Bug 26410) [[1,2,[2],0,4,2,[3],0,1,0,[2],0,1,4,[3],2,0,0,[2],0,1]]");
add("selser", "percent-encoding and + signs in internal links (Bug 26410) [[[3],0,0,4,0,3,4,4,4,2,0,4,[3],2,3,3,0,0,0,2,0]]");
add("selser", "percent-encoding and + signs in internal links (Bug 26410) [[[2],4,[2],0,2,0,4,3,2,0,[4],0,0,0,0,2,0,4,0,4,0]]");
add("selser", "percent-encoding and + signs in internal links (Bug 26410) [[4,0,[4],0,[2],0,0,2,3,0,1,0,3,0,0,2,0,0,[2],4,4]]");
add("selser", "percent-encoding and + signs in internal links (Bug 26410) [[[2],4,[3],2,[3],4,0,3,3,0,0,0,[2],0,3,4,0,0,[4],2,0]]");
add("selser", "percent-encoding and + signs in internal links (Bug 26410) [[0,0,[3],0,2,4,4,0,4,0,0,2,0,4,1,0,0,2,[2],3,1]]");
add("selser", "percent-encoding and + signs in internal links (Bug 26410) [[[3],0,4,2,[3],0,2,4,[4],2,2,2,0,2,4,2,0,4,1,0,3]]");
add("selser", "percent-encoding and + signs in internal links (Bug 26410) [[1,2,[2],3,[4],0,[3],2,1,2,1,2,1,0,[4],0,0,0,0,0,[2]]]");
add("selser", "Bug 19052 U+3000 IDEOGRAPHIC SPACE should terminate bracketed external links [2]");
add("selser", "Bug 19052 U+3000 IDEOGRAPHIC SPACE should terminate bracketed external links [1]");
add("selser", "Bug 19052 U+3000 IDEOGRAPHIC SPACE should terminate bracketed external links [[[4]]]");
add("selser", "Bug 19052 U+3000 IDEOGRAPHIC SPACE should terminate bracketed external links [[2]]");
add("selser", "Bug 19052 U+3000 IDEOGRAPHIC SPACE should terminate bracketed external links [[[2]]]");
add("selser", "Bug 19052 U+3000 IDEOGRAPHIC SPACE should terminate bracketed external links [[[3]]]");
add("selser", "Bug31490 Turkish: ucfırst (with a dotless i) [[2]]");
add("selser", "Bug31490 Turkish: ucfırst (with a dotless i) [[3]]");
add("selser", "Bug31490 Turkish: ucfırst (with a dotless i) [[4]]");
add("selser", "Bug31490 ucfırst (with a dotless i) with English language [[2]]");
add("selser", "Bug31490 ucfırst (with a dotless i) with English language [[3]]");
add("selser", "Bug31490 ucfırst (with a dotless i) with English language [[4]]");
add("selser", "Ignore pipe between table row attributes [1]");
add("selser", "Ignore pipe between table row attributes [[0,1]]");
add("selser", "Ignore pipe between table row attributes [2]");
add("selser", "Ignore pipe between table row attributes [[2,2]]");
add("selser", "Ignore pipe between table row attributes [[0,[[[3]],2,[4,0],0]]]");
add("selser", "Ignore pipe between table row attributes [[4,2]]");
add("selser", "Ignore pipe between table row attributes [[2,[0,0,2,2]]]");
add("selser", "Ignore pipe between table row attributes [[2,[0,3,[0,[3]],2]]]");
add("selser", "Ignore pipe between table row attributes [[3,2]]");
add("selser", "Ignore pipe between table row attributes [[2,1]]");
add("selser", "Ref: 3. spaces in ref-names should be ignored [[0,0,2,0,3,0]]");
add("selser", "Ref: 3. spaces in ref-names should be ignored [[0,0,4,0,2,0]]");
add("selser", "Ref: 3. spaces in ref-names should be ignored [[0,0,3,0,0,0]]");
add("selser", "Ref: 3. spaces in ref-names should be ignored [[4,0,3,0,3,0]]");
add("selser", "Ref: 3. spaces in ref-names should be ignored [2]");
add("selser", "Ref: 3. spaces in ref-names should be ignored [[3,0,4,0,0,0]]");
add("selser", "Ref: 3. spaces in ref-names should be ignored [1]");
add("selser", "Ref: 3. spaces in ref-names should be ignored [[4,0,2,0,0,0]]");
add("selser", "Ref: 3. spaces in ref-names should be ignored [[2,0,0,0,0,0]]");
add("selser", "Ref: 3. spaces in ref-names should be ignored [[3,0,3,0,0,0]]");
add("selser", "Ref: 3. spaces in ref-names should be ignored [[0,0,4,0,3,0]]");
add("selser", "Ref: 3. spaces in ref-names should be ignored [[4,0,0,0,3,0]]");
add("selser", "Ref: 3. spaces in ref-names should be ignored [[0,0,4,0,0,0]]");
add("selser", "Ref: 3. spaces in ref-names should be ignored [[0,0,0,0,3,0]]");
add("selser", "Ref: 3. spaces in ref-names should be ignored [[3,0,2,0,0,0]]");
add("selser", "Ref: 3. spaces in ref-names should be ignored [[0,0,3,0,4,0]]");
add("selser", "Ref: 3. spaces in ref-names should be ignored [[0,0,0,0,4,0]]");
add("selser", "Ref: 5. body should accept generic wikitext [0,2,0]");
add("selser", "Ref: 5. body should accept generic wikitext [[2,0],0,0]");
add("selser", "Ref: 5. body should accept generic wikitext [[2,0],4,0]");
add("selser", "Ref: 5. body should accept generic wikitext [2,3,0]");
add("selser", "Ref: 5. body should accept generic wikitext [1,0,0]");
add("selser", "Ref: 5. body should accept generic wikitext [1,2,0]");
add("selser", "Ref: 5. body should accept generic wikitext [0,3,0]");
add("selser", "Ref: 5. body should accept generic wikitext [2,0,0]");
add("selser", "Ref: 5. body should accept generic wikitext [[4,0],0,0]");
add("selser", "Ref: 5. body should accept generic wikitext [[3,0],0,0]");
add("selser", "Ref: 5. body should accept generic wikitext [0,4,0]");
add("selser", "Ref: 5. body should accept generic wikitext [[3,0],3,0]");
add("selser", "Ref: 5. body should accept generic wikitext [1,4,0]");
add("selser", "Ref: 6. indent-pres should not be output in ref-body [[3,0],2,0]");
add("selser", "Ref: 6. indent-pres should not be output in ref-body [[3,0],0,0]");
add("selser", "Ref: 6. indent-pres should not be output in ref-body [[4,0],0,0]");
add("selser", "Ref: 6. indent-pres should not be output in ref-body [[2,0],3,0]");
add("selser", "Ref: 6. indent-pres should not be output in ref-body [1,0,0]");
add("selser", "Ref: 6. indent-pres should not be output in ref-body [1,4,0]");
add("selser", "Ref: 6. indent-pres should not be output in ref-body [2,2,0]");
add("selser", "Ref: 6. indent-pres should not be output in ref-body [0,4,0]");
add("selser", "Ref: 6. indent-pres should not be output in ref-body [[4,0],2,0]");
add("selser", "Ref: 6. indent-pres should not be output in ref-body [0,3,0]");
add("selser", "Ref: 6. indent-pres should not be output in ref-body [[2,0],2,0]");
add("selser", "Ref: 6. indent-pres should not be output in ref-body [2,3,0]");
add("selser", "Ref: 6. indent-pres should not be output in ref-body [1,2,0]");
add("selser", "Ref: 6. indent-pres should not be output in ref-body [[2,0],0,0]");
add("selser", "Ref: 7. No p-wrapping in ref-body [2,4,0]");
add("selser", "Ref: 7. No p-wrapping in ref-body [1,0,0]");
add("selser", "Ref: 7. No p-wrapping in ref-body [2,0,0]");
add("selser", "Ref: 7. No p-wrapping in ref-body [[4,0],3,0]");
add("selser", "Ref: 7. No p-wrapping in ref-body [0,4,0]");
add("selser", "Ref: 7. No p-wrapping in ref-body [2,3,0]");
add("selser", "Ref: 7. No p-wrapping in ref-body [1,4,0]");
add("selser", "Ref: 7. No p-wrapping in ref-body [0,2,0]");
add("selser", "Ref: 7. No p-wrapping in ref-body [[4,0],0,0]");
add("selser", "Ref: 7. No p-wrapping in ref-body [[3,0],0,0]");
add("selser", "Ref: 7. No p-wrapping in ref-body [1,3,0]");
add("selser", "Ref: 7. No p-wrapping in ref-body [[2,0],4,0]");
add("selser", "Ref: 7. No p-wrapping in ref-body [[4,0],4,0]");
add("selser", "Ref: 7. No p-wrapping in ref-body [[3,0],3,0]");
add("selser", "Ref: 8. transclusion wikitext has lower precedence [[3,0,0,[2]],0,0]");
add("selser", "Ref: 8. transclusion wikitext has lower precedence [0,3,0]");
add("selser", "Ref: 8. transclusion wikitext has lower precedence [[0,0,0,1],0,0]");
add("selser", "Ref: 8. transclusion wikitext has lower precedence [[0,0,2,1],3,0]");
add("selser", "Ref: 8. transclusion wikitext has lower precedence [[0,0,0,[2]],4,0]");
add("selser", "Ref: 8. transclusion wikitext has lower precedence [[0,0,0,2],2,0]");
add("selser", "Ref: 8. transclusion wikitext has lower precedence [[2,0,0,0],0,0]");
add("selser", "Ref: 8. transclusion wikitext has lower precedence [[2,0,4,0],2,0]");
add("selser", "Ref: 8. transclusion wikitext has lower precedence [[0,0,0,4],2,0]");
add("selser", "Ref: 8. transclusion wikitext has lower precedence [0,4,0]");
add("selser", "Ref: 8. transclusion wikitext has lower precedence [1,0,0]");
add("selser", "Ref: 8. transclusion wikitext has lower precedence [[3,0,0,2],0,0]");
add("selser", "Ref: 8. transclusion wikitext has lower precedence [[4,0,2,2],0,0]");
add("selser", "Ref: 8. transclusion wikitext has lower precedence [2,0,0]");
add("selser", "Ref: 8. transclusion wikitext has lower precedence [[2,0,0,1],3,0]");
add("selser", "Ref: 8. transclusion wikitext has lower precedence [[0,0,4,4],0,0]");
add("selser", "Ref: 8. transclusion wikitext has lower precedence [[4,0,2,4],2,0]");
add("selser", "Ref: 9. unclosed comments should not leak out of ref-body [2,3,0]");
add("selser", "Ref: 9. unclosed comments should not leak out of ref-body [[4,0,0],4,0]");
add("selser", "Ref: 9. unclosed comments should not leak out of ref-body [[0,0,4],3,0]");
add("selser", "Ref: 9. unclosed comments should not leak out of ref-body [[2,0,0],2,0]");
add("selser", "Ref: 9. unclosed comments should not leak out of ref-body [1,0,0]");
add("selser", "Ref: 9. unclosed comments should not leak out of ref-body [[2,0,0],0,0]");
add("selser", "Ref: 9. unclosed comments should not leak out of ref-body [[4,0,4],2,0]");
add("selser", "Ref: 9. unclosed comments should not leak out of ref-body [[3,0,4],0,0]");
add("selser", "Ref: 9. unclosed comments should not leak out of ref-body [1,2,0]");
add("selser", "Ref: 9. unclosed comments should not leak out of ref-body [[2,0,0],4,0]");
add("selser", "Ref: 9. unclosed comments should not leak out of ref-body [[4,0,0],3,0]");
add("selser", "Ref: 9. unclosed comments should not leak out of ref-body [2,0,0]");
add("selser", "Ref: 9. unclosed comments should not leak out of ref-body [[0,0,2],0,0]");
add("selser", "Ref: 9. unclosed comments should not leak out of ref-body [[3,0,3],4,0]");
add("selser", "Ref: 9. unclosed comments should not leak out of ref-body [[0,0,4],2,0]");
add("selser", "Ref: 10. Unclosed HTML tags should not leak out of ref-body [1,3,0]");
add("selser", "Ref: 10. Unclosed HTML tags should not leak out of ref-body [1,2,0]");
add("selser", "Ref: 10. Unclosed HTML tags should not leak out of ref-body [2,0,0]");
add("selser", "Ref: 10. Unclosed HTML tags should not leak out of ref-body [[3,0,2],0,0]");
add("selser", "Ref: 10. Unclosed HTML tags should not leak out of ref-body [2,3,0]");
add("selser", "Ref: 10. Unclosed HTML tags should not leak out of ref-body [[2,0,0],0,0]");
add("selser", "Ref: 10. Unclosed HTML tags should not leak out of ref-body [[4,0,2],0,0]");
add("selser", "Ref: 10. Unclosed HTML tags should not leak out of ref-body [[0,0,2],0,0]");
add("selser", "Ref: 10. Unclosed HTML tags should not leak out of ref-body [[3,0,4],0,0]");
add("selser", "Ref: 10. Unclosed HTML tags should not leak out of ref-body [[4,0,0],0,0]");
add("selser", "Ref: 10. Unclosed HTML tags should not leak out of ref-body [0,3,0]");
add("selser", "Ref: 10. Unclosed HTML tags should not leak out of ref-body [[2,0,0],2,0]");
add("selser", "Ref: 10. Unclosed HTML tags should not leak out of ref-body [0,4,0]");
add("selser", "Ref: 10. Unclosed HTML tags should not leak out of ref-body [[0,0,4],3,0]");
add("selser", "References: 2. references tag with group only outputs references from that group [1,4,0]");
add("selser", "References: 2. references tag with group only outputs references from that group [4,0,0]");
add("selser", "References: 2. references tag with group only outputs references from that group [0,3,0]");
add("selser", "References: 2. references tag with group only outputs references from that group [[2,0,0,0],3,0]");
add("selser", "References: 2. references tag with group only outputs references from that group [[4,0,0,0],2,0]");
add("selser", "References: 2. references tag with group only outputs references from that group [2,2,0]");
add("selser", "References: 2. references tag with group only outputs references from that group [0,4,0]");
add("selser", "References: 2. references tag with group only outputs references from that group [[4,0,0,0],4,0]");
add("selser", "References: 2. references tag with group only outputs references from that group [[2,0,3,0],0,0]");
add("selser", "References: 2. references tag with group only outputs references from that group [[3,0,4,0],0,0]");
add("selser", "References: 2. references tag with group only outputs references from that group [3,0,0]");
add("selser", "References: 2. references tag with group only outputs references from that group [3,4,0]");
add("selser", "References: 2. references tag with group only outputs references from that group [4,2,0]");
add("selser", "References: 2. references tag with group only outputs references from that group [[2,0,0,0],0,0]");
add("selser", "References: 2. references tag with group only outputs references from that group [[4,0,4,0],0,0]");
add("selser", "References: 2. references tag with group only outputs references from that group [[0,0,4,0],3,0]");
add("selser", "References: 2. references tag with group only outputs references from that group [1,0,0]");
add("selser", "References: 2. references tag with group only outputs references from that group [[4,0,0,0],0,0]");
add("selser", "References: 2. references tag with group only outputs references from that group [[0,0,3,0],0,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [2,0,0,2,[4,0],2,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [[4,0,0,0],2,0,3,0,0,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [4,0,0,3,[2,0],2,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [[0,0,3,0],0,0,0,1,2,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [4,2,0,0,2,0,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [2,0,0,2,0,2,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [3,4,0,0,1,3,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [1,3,0,0,4,0,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [4,4,0,0,2,2,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [4,4,0,2,4,0,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [1,0,0,0,2,4,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [1,0,0,0,1,0,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [[4,0,4,0],3,0,2,2,0,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [3,4,0,0,2,0,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [4,2,0,4,1,4,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [[4,0,0,0],0,0,4,3,0,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [[2,0,3,0],3,0,3,1,2,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [1,0,0,0,2,0,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [3,0,0,3,[4,0],0,0]");
add("selser", "References: 4. only referenced group should be cleared after processing references [1,0,0,2,0,2,0]");
add("selser", "References: 5. ref tags in references should be processed while ignoring all other content [3,2,0]");
add("selser", "References: 5. ref tags in references should be processed while ignoring all other content [4,3,0]");
add("selser", "References: 5. ref tags in references should be processed while ignoring all other content [4,2,0]");
add("selser", "References: 5. ref tags in references should be processed while ignoring all other content [0,4,0]");
add("selser", "References: 5. ref tags in references should be processed while ignoring all other content [[0,0,4,0],2,0]");
add("selser", "References: 5. ref tags in references should be processed while ignoring all other content [[0,0,4,0],0,0]");
add("selser", "References: 5. ref tags in references should be processed while ignoring all other content [1,0,0]");
add("selser", "References: 5. ref tags in references should be processed while ignoring all other content [[4,0,2,0],3,0]");
add("selser", "References: 5. ref tags in references should be processed while ignoring all other content [2,0,0]");
add("selser", "References: 5. ref tags in references should be processed while ignoring all other content [[0,0,4,0],3,0]");
add("selser", "References: 5. ref tags in references should be processed while ignoring all other content [[0,0,2,0],3,0]");
add("selser", "References: 5. ref tags in references should be processed while ignoring all other content [[0,0,3,0],0,0]");
add("selser", "References: 5. ref tags in references should be processed while ignoring all other content [2,2,0]");
add("selser", "References: 5. ref tags in references should be processed while ignoring all other content [[2,0,0,0],0,0]");
add("selser", "References: 5. ref tags in references should be processed while ignoring all other content [1,3,0]");
add("selser", "References: 5. ref tags in references should be processed while ignoring all other content [[4,0,0,0],3,0]");
add("selser", "References: 5. ref tags in references should be processed while ignoring all other content [4,4,0]");
add("selser", "References: 5. ref tags in references should be processed while ignoring all other content [3,4,0]");
add("selser", "References: 5. ref tags in references should be processed while ignoring all other content [0,2,0]");
add("selser", "Headings: 4a. No escaping needed (testing just h1 and h2) [2,0,0,0,3,2,[3],0,4,4,2,2,1,4,[4]]");
add("selser", "Headings: 4a. No escaping needed (testing just h1 and h2) [3,0,2,4,3,0,4,0,4,0,[2],0,[0,4],0,[2]]");
add("selser", "Headings: 4a. No escaping needed (testing just h1 and h2) [2,0,4,0,0,4,[3],0,3,0,0,4,[[4],0],3,0]");
add("selser", "Headings: 4a. No escaping needed (testing just h1 and h2) [2,0,0,4,0,4,0,3,[2],2,1,3,1,3,[3]]");
add("selser", "Headings: 4a. No escaping needed (testing just h1 and h2) [4,3,4,0,0,0,0,2,3,0,4,2,2,0,2]");
add("selser", "Headings: 4a. No escaping needed (testing just h1 and h2) [2,3,[2],0,3,0,0,0,1,0,2,0,2,2,[[3]]]");
add("selser", "Headings: 4a. No escaping needed (testing just h1 and h2) [2,4,4,3,0,0,4,4,2,2,[2],0,0,4,3]");
add("selser", "Lists: 5. No unnecessary escapes [[4],2,[2],0,1,2,4,4,[2],0,[[3,0,4]]]");
add("selser", "Tables: 1b. No escaping needed [2]");
add("selser", "Tables: 1b. No escaping needed [4]");
add("selser", "Tables: 1b. No escaping needed [3]");
add("selser", "Tables: 1c. No escaping needed [4]");
add("selser", "Tables: 1c. No escaping needed [2]");
add("selser", "Tables: 1c. No escaping needed [3]");
add("selser", "Tables: 1d. No escaping needed [2]");
add("selser", "Tables: 1d. No escaping needed [3]");
add("selser", "Tables: 1d. No escaping needed [4]");
add("selser", "Tables: 2b. Nested in td [[2,[[2,0,2],2]]]");
add("selser", "Tables: 4a. Escape - [[3,[2,2,2,0]]]");
add("selser", "Tables: 4c. No escaping needed [[4,[[2,0,[2]],0,[2,4,3,[[2],3]],2,2,2]]]");
add("selser", "Tables: 4c. No escaping needed [[0,[1,3,[0,2,4,[0,3]],0,2,4]]]");
add("selser", "Tables: 4c. No escaping needed [[4,[[[3],0,[2]],4,2,0,[4,1],4]]]");
add("selser", "Tables: 4d. No escaping needed [[3,[[[3],3,2],4]]]");
add("selser", "Tables: 4d. No escaping needed [[2,[[0,4,2],0]]]");
add("selser", "Links 1. Quote marks in link text [[[4,3]]]");
add("selser", "1. Quotes inside <b> and <i> [[3,2,1,3,0,3,4,0,2,3,0,1,4,1,3,[1,0,0],0,0,0,0,0,3,0,0,4,0,[3],3,3,[2],3,4,3,0,0,3,4,3]]");
add("selser", "1. Quotes inside <b> and <i> [[4,2,4,0,[[3]],3,0,3,3,[1],0,3,0,[3],4,[0,[[4]],4],0,2,1,4,1,0,1,2,2,0,1,0,0,2,3,0,4,0,3,0,1,0]]");
add("selser", "1. Quotes inside <b> and <i> [[[2],0,3,0,[[3]],4,4,1,0,2,4,0,3,1,3,[2,2,0],0,2,3,0,[2],2,1,2,3,0,4,4,4,0,4,0,0,0,0,4,0,3]]");
add("selser", "1. Quotes inside <b> and <i> [[3,0,[[3]],0,1,0,0,1,4,4,2,2,4,2,0,1,4,4,4,0,[4],4,0,3,0,0,2,0,0,0,3,3,0,4,0,2,0,3]]");
add("selser", "1. Quotes inside <b> and <i> [[3,0,[[4]],4,0,0,3,0,0,[2],0,3,0,2,0,[4,0,0],2,2,3,0,0,2,[2],1,0,0,[3],0,0,4,0,[3],0,2,2,4,3,4]]");
add("selser", "1. Quotes inside <b> and <i> [[3,0,0,0,0,4,4,0,3,1,3,0,3,1,3,4,4,4,0,3,4,3,2,3,0,0,3,4,0,4,0,1,0,0,0,[3],0,0]]");
add("selser", "1. Quotes inside <b> and <i> [[2,0,[4],0,[2],2,[2],3,0,1,3,1,0,1,0,[[3],[[4]],4],3,4,1,2,0,3,0,2,4,1,4,3,0,3,4,3,3,4,0,3,0,2]]");
add("selser", "1. Quotes inside <b> and <i> [[[1],0,4,2,4,0,0,0,3,[1],4,1,3,0,0,1,3,0,0,0,[4],3,1,3,0,1,4,3,2,3,4,1,1,4,4,0,4,0]]");
add("selser", "(Bug 52035) Nowiki-escaping should not get tripped by \" :\" in text [1]");
add("selser", "(Bug 52035) Nowiki-escaping should not get tripped by \" :\" in text [[2,2,0]]");
add("selser", "HTML tag with broken attribute value quoting [1]");
add("selser", "HTML tag with broken attribute value quoting [2]");
add("selser", "HTML tag with broken attribute value quoting [[2]]");
add("selser", "HTML tag with broken attribute value quoting [[[2]]]");
add("selser", "HTML tag with broken attribute value quoting [[[3]]]");
add("selser", "HTML tag with broken attribute value quoting [[[4]]]");
add("selser", "Parsoid-only: HTML tag with broken attribute value quoting [1]");
add("selser", "Parsoid-only: HTML tag with broken attribute value quoting [2]");
add("selser", "Parsoid-only: HTML tag with broken attribute value quoting [[[3]]]");
add("selser", "Parsoid-only: HTML tag with broken attribute value quoting [[2]]");
add("selser", "Parsoid-only: HTML tag with broken attribute value quoting [[[2]]]");
add("selser", "Parsoid-only: HTML tag with broken attribute value quoting [[[4]]]");
add("selser", "Table with broken attribute value quoting [2]");
add("selser", "Table with broken attribute value quoting [[3,[[[3]],2]]]");
add("selser", "Table with broken attribute value quoting [[0,[2,0]]]");
add("selser", "Table with broken attribute value quoting [[4,1]]");
add("selser", "Table with broken attribute value quoting [[0,[[[2]],0]]]");
add("selser", "Table with broken attribute value quoting [[0,1]]");
add("selser", "Table with broken attribute value quoting [[3,[[[3]],3]]]");
add("selser", "Table with broken attribute value quoting [1]");
add("selser", "Table with broken attribute value quoting [[0,[[2],0]]]");
add("selser", "Table with broken attribute value quoting [[0,[[2],2]]]");
add("selser", "Table with broken attribute value quoting on consecutive lines [[3,1]]");
add("selser", "Table with broken attribute value quoting on consecutive lines [[3,2]]");
add("selser", "Table with broken attribute value quoting on consecutive lines [1]");
add("selser", "Table with broken attribute value quoting on consecutive lines [[0,[1,0]]]");
add("selser", "Table with broken attribute value quoting on consecutive lines [2]");
add("selser", "Table with broken attribute value quoting on consecutive lines [[2,[[4,0,[2]],0]]]");
add("selser", "Table with broken attribute value quoting on consecutive lines [[0,1]]");
add("selser", "Table with broken attribute value quoting on consecutive lines [[2,[[[4],4,1],2]]]");
add("selser", "Table with broken attribute value quoting on consecutive lines [[3,[2,0]]]");
add("selser", "Table with broken attribute value quoting on consecutive lines [[0,[[[2],3,3],0]]]");
add("selser", "Table with broken attribute value quoting on consecutive lines [[4,[[[3],0,0],0]]]");
add("selser", "Table with broken attribute value quoting on consecutive lines [[4,[[1,0,0],0]]]");
add("selser", "Table with broken attribute value quoting on consecutive lines [[4,2]]");
add("selser", "Table with broken attribute value quoting on consecutive lines [[0,[[2,0,3],3]]]");
add("selser", "Parsoid-only: Table with broken attribute value quoting on consecutive lines [[0,[2,0]]]");
add("selser", "Parsoid-only: Table with broken attribute value quoting on consecutive lines [[0,[[[3],2,4],0]]]");
add("selser", "Parsoid-only: Table with broken attribute value quoting on consecutive lines [1]");
add("selser", "Parsoid-only: Table with broken attribute value quoting on consecutive lines [2]");
add("selser", "Parsoid-only: Table with broken attribute value quoting on consecutive lines [[4,[[3,0,2],0]]]");
add("selser", "Parsoid-only: Table with broken attribute value quoting on consecutive lines [[3,1]]");
add("selser", "Parsoid-only: Table with broken attribute value quoting on consecutive lines [[2,2]]");
add("selser", "Parsoid-only: Table with broken attribute value quoting on consecutive lines [[3,[2,2]]]");
add("selser", "Parsoid-only: Table with broken attribute value quoting on consecutive lines [[0,2]]");
add("selser", "Parsoid-only: Table with broken attribute value quoting on consecutive lines [[2,[2,0]]]");
add("selser", "Parsoid-only: Table with broken attribute value quoting on consecutive lines [[0,[1,0]]]");
add("selser", "Empty table rows go away [[0,[[[2],4,2],0,0,3,1,2]]]");
add("selser", "Empty table rows go away [[3,[[[2],0,[4]],0,0,0,2,4]]]");
add("selser", "RT-ed inter-element separators should be valid separators [[2],[2,[[3],4]]]");
add("selser", "RT-ed inter-element separators should be valid separators [1,1]");
add("selser", "RT-ed inter-element separators should be valid separators [0,[0,3]]");
add("selser", "RT-ed inter-element separators should be valid separators [0,3]");
add("selser", "RT-ed inter-element separators should be valid separators [0,4]");
add("selser", "RT-ed inter-element separators should be valid separators [4,[0,[[3],0]]]");
add("selser", "RT-ed inter-element separators should be valid separators [1,[0,[[4],3]]]");
add("selser", "RT-ed inter-element separators should be valid separators [0,1]");
add("selser", "RT-ed inter-element separators should be valid separators [1,2]");
add("selser", "RT-ed inter-element separators should be valid separators [3,[0,[0,4]]]");
add("selser", "RT-ed inter-element separators should be valid separators [0,[0,[4,0]]]");
add("selser", "RT-ed inter-element separators should be valid separators [0,[3,4]]");
add("selser", "RT-ed inter-element separators should be valid separators [0,[2,[0,3]]]");
add("selser", "RT-ed inter-element separators should be valid separators [2,[0,[[2],0]]]");
add("selser", "RT-ed inter-element separators should be valid separators [0,2]");
add("selser", "RT-ed inter-element separators should be valid separators [4,1]");
add("selser", "Empty TD followed by TD with tpl-generated attribute [1]");
add("selser", "Empty TD followed by TD with tpl-generated attribute [2]");
add("selser", "Empty TD followed by TD with tpl-generated attribute [[0,[[2,0,0,0],0]]]");
add("selser", "Empty TD followed by TD with tpl-generated attribute [[0,[[0,4,0,0],3]]]");
add("selser", "Empty TD followed by TD with tpl-generated attribute [[2,[[2,0,0,0],4]]]");
add("selser", "Empty TD followed by TD with tpl-generated attribute [[0,[1,4]]]");
add("selser", "Empty TD followed by TD with tpl-generated attribute [[0,2]]");
add("selser", "Empty TD followed by TD with tpl-generated attribute [[4,2]]");
add("selser", "Empty TD followed by TD with tpl-generated attribute [[4,[2,0]]]");
add("selser", "Empty TD followed by TD with tpl-generated attribute [[0,1]]");
add("selser", "Empty TD followed by TD with tpl-generated attribute [[3,[[0,2,0,0],0]]]");
add("selser", "Empty TD followed by TD with tpl-generated attribute [[3,[[4,0,0,0],4]]]");
add("selser", "Empty TD followed by TD with tpl-generated attribute [[2,[[2,2,2,0],0]]]");
add("selser", "Empty TD followed by TD with tpl-generated attribute [[4,[[0,0,4,0],0]]]");
add("selser", "Empty TD followed by TD with tpl-generated attribute [[4,1]]");
add("selser", "Indented table with an empty td [2,[3,[[0,0,0,2],4]]]");
add("selser", "Improperly nested inline or quotes tags with whitespace in between [[[0,2],2,0,1,2]]");
add("selser", "Improperly nested inline or quotes tags with whitespace in between [1]");
add("selser", "Improperly nested inline or quotes tags with whitespace in between [[0,1,2,[0,2],0]]");
add("selser", "Improperly nested inline or quotes tags with whitespace in between [[3,[4],4,0,3]]");
add("selser", "Improperly nested inline or quotes tags with whitespace in between [2]");
add("selser", "Improperly nested inline or quotes tags with whitespace in between [[1,4,2,2,3]]");
add("selser", "Improperly nested inline or quotes tags with whitespace in between [[[2,[4]],3,0,[0,4],0]]");
add("selser", "Improperly nested inline or quotes tags with whitespace in between [[[3,1],4,3,2,1]]");
add("selser", "Improperly nested inline or quotes tags with whitespace in between [[[3,2],0,0,[4,[3]],3]]");
add("selser", "Improperly nested inline or quotes tags with whitespace in between [[[0,2],[3],0,3,0]]");
add("selser", "Improperly nested inline or quotes tags with whitespace in between [[3,2,0,[3,2],4]]");
add("selser", "Improperly nested inline or quotes tags with whitespace in between [[3,0,4,3,0]]");
add("selser", "Improperly nested inline or quotes tags with whitespace in between [[1,3,0,2,1]]");
add("selser", "Improperly nested inline or quotes tags with whitespace in between [[3,4,4,0,2]]");
add("selser", "Improperly nested inline or quotes tags with whitespace in between [[[0,3],[3],0,3,0]]");
add("selser", "Improperly nested inline or quotes tags with whitespace in between [[[2,1],[3],3,[0,3],0]]");

// ### DO NOT REMOVE THIS LINE ### (end of automatically-generated section)


if (typeof module === 'object') {
	module.exports.testBlackList = testBlackList;
}
